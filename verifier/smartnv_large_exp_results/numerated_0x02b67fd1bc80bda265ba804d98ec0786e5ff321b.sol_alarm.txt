<\Contract to be analyzed\> 
contract VotingSystem {
    struct Voter {
        uint256 weight;
        bool voted;
        address delegate;
        uint256 vote;
    }
    
    mapping(address => Voter) public voters;
    uint256 public totalVotes;
    
    function delegate(address to) public {
        require(to != msg.sender, "Self-delegation is not allowed");
        require(voters[msg.sender].weight > 0, "Only voters can delegate");
        
        voters[msg.sender].delegate = to;
        voters[to].weight += voters[msg.sender].weight;
    }
    
    function vote(uint256 option) public {
        require(voters[msg.sender].weight > 0, "Only voters can vote");
        require(!voters[msg.sender].voted, "Already voted");
        
        voters[msg.sender].voted = true;
        voters[msg.sender].vote = option;
        
        totalVotes += voters[msg.sender].weight;
    }
    
    function executeDecision() public {
        // Decision execution logic
    }
}
<\Contract to be analyzed\>