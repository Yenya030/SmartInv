<\contract\>
contract TokenSale {
    address public tokenAddress;
    address public owner;
    uint public price;
    uint public totalTokens;
    mapping(address => uint) public balances;

    constructor(address _tokenAddress, uint _price, uint _totalTokens) {
        tokenAddress = _tokenAddress;
        owner = msg.sender;
        price = _price;
        totalTokens = _totalTokens;
    }

    function buyTokens(uint amount) public {
        require(balances[msg.sender] + amount <= totalTokens, "not enough tokens available");
        require(msg.value == amount * price, "incorrect payment amount");
        balances[msg.sender] += amount;
        // Transfer tokens to buyer
        // Reduce total tokens available
    }

    function withdrawTokens() public {
        require(msg.sender == owner, "only owner can withdraw tokens");
        // Transfer remaining tokens back to owner
    }
}
<\contract\>