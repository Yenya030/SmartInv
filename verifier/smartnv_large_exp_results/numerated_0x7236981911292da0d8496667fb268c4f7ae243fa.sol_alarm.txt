<\contract\>
contract PaymentProcessing {
        address payable public owner;
        mapping(address => uint) public payments;

        constructor() {
                owner = msg.sender;
        }

        function makePayment(address _recipient, uint _amount) public {
                require(msg.sender == owner, "Only owner can make payments");
                require(_amount > 0, "Payment amount must be greater than 0");
                payments[_recipient] += _amount;
        }

        function withdrawPayment(address _recipient) public {
                require(payments[_recipient] > 0, "No payment to withdraw");
                uint amount = payments[_recipient];
                payments[_recipient] = 0;
                payable(_recipient).transfer(amount);
        }

}
<\contract\>