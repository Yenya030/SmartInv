contract VotingSystem {
     struct Voter {
           uint256 weight;
           bool voted; 
           address delegate;
           uint vote;
     }
     address public admin;
     mapping(address => Voter) public voters;
     uint256 public totalVotes;
     mapping(uint => uint256) public voteCount;

     modifier onlyAdmin() {
          require(msg.sender == admin, "Only admin can call this function");
          _;
     }

     function delegate(address to) public {
          require(!voters[msg.sender].voted, "Already voted");
          require(msg.sender != to, "Self-delegation is not allowed");
          voters[msg.sender].delegate = to;
          voters[to].weight += voters[msg.sender].weight;
     }

     function vote(uint option) public {
          Voter storage sender = voters[msg.sender];
          require(sender.weight > 0, "Has no right to vote");
          require(!sender.voted, "Already voted");
          sender.voted = true;
          sender.vote = option;
          voteCount[option] += sender.weight;
          totalVotes += sender.weight;
     }

     function endVoting() public onlyAdmin {
          require(totalVotes > 0, "No votes are casted");
          // Calculate winning option based on voteCount
     }
}