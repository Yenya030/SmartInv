<\analyzed_contract\>
contract TokenSale {
         address public tokenAddress;
         address public owner;
         uint public price;
         uint public totalSold;
         mapping(address => uint) public balances;

         constructor(address _tokenAddress, uint _price) {
             tokenAddress = _tokenAddress;
             owner = msg.sender;
             price = _price;
         }

         function buyTokens(uint _amount) public {
             require(balances[msg.sender] + _amount >= balances[msg.sender], "Integer overflow");
             require(msg.value == _amount * price, "Incorrect amount sent");
             balances[msg.sender] += _amount;
             totalSold += _amount;
             // Transfer tokens to buyer
         }

         function withdrawFunds() public {
             require(msg.sender == owner, "Unauthorized access");
             // Transfer funds to owner
         }
     }
<\analyzed_contract\>