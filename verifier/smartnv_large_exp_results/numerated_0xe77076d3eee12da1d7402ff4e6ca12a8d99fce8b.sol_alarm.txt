<\contract_to_analyze\>
contract Escrow {
     address public buyer;
     address public seller;
     address public arbiter;
     bool public buyerApproved;
     bool public sellerApproved;
     bool public arbiterApproved;
     uint public fundsDeposited;
     uint public escrowBalance;

     constructor(address _buyer, address _seller, address _arbiter) {
         buyer = _buyer;
         seller = _seller;
         arbiter = _arbiter;
     }

     function depositFunds() public payable {
         require(msg.sender == buyer, "Only buyer can deposit funds");
         fundsDeposited += msg.value;
         escrowBalance += msg.value;
     }

     function approveRelease() public {
         if (msg.sender == buyer) {
             buyerApproved = true;
         } else if (msg.sender == seller) {
             sellerApproved = true;
         } else if (msg.sender == arbiter) {
             arbiterApproved = true;
         }
     }

     function releaseFunds() public {
         require(buyerApproved && sellerApproved, "Both parties must approve");
         payable(seller).transfer(escrowBalance);
         escrowBalance = 0;
     }

     function refundBuyer() public {
         require(buyerApproved && arbiterApproved, "Buyer and arbiter must approve");
         payable(buyer).transfer(escrowBalance);
         escrowBalance = 0;
     }
 }
<\contract_to_analyze\>