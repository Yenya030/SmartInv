<\contract\> 
contract Insurance {
         IERC20 public stablecoin;
         address public beneficiary;
         uint public payoutAmount;

         function setBeneficiary(address _beneficiary) external {
             require(msg.sender == beneficiary, "only beneficiary can set beneficiary");
             beneficiary = _beneficiary;
         }

         function setPayoutAmount(uint _amount) external {
             require(msg.sender == beneficiary, "only beneficiary can set payout amount");
             payoutAmount = _amount;
         }

         function claimInsurance() external {
             require(stablecoin.balanceOf(msg.sender) > payoutAmount, "insufficient funds to claim insurance");
             stablecoin.transferFrom(beneficiary, msg.sender, payoutAmount);
         }
}
<\contract\> 

Output:
1) privilege escalation; 
2) inconsistent state update; 
3) incorrect visibility/ownership.