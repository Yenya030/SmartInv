<\analyzed_contract\> 
contract TokenSale {
    address public token;
    address public owner;
    uint public price;
    mapping(address => uint) public balances;

    constructor(address _token, uint _price) {
        token = _token;
        owner = msg.sender;
        price = _price;
    }

    function buyTokens(uint amount) public {
        require(msg.value == amount * price, "Incorrect payment amount");
        balances[msg.sender] += amount;
        // Transfer tokens to buyer
        ERC20(token).transfer(msg.sender, amount);

    }

    function withdrawFunds() public {
        require(msg.sender == owner, "Only owner can withdraw funds");
        uint funds = address(this).balance;
        address payable recipient = payable(owner);
        recipient.transfer(funds);
    }

    function setPrice(uint _price) public {
        require(msg.sender == owner, "Only owner can set price");
        price = _price;
    }

    function transferOwnership(address newOwner) public {
        require(msg.sender == owner, "Only owner can transfer ownership");
        owner = newOwner;
    }
}