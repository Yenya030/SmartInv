<\contract\> 
contract TokenSale {
    address public owner;
    IERC20 public token;
    uint public tokenPrice;
    uint public totalTokensSold;

    constructor(IERC20 _token, uint _tokenPrice) {
        owner = msg.sender;
        token = _token;
        tokenPrice = _tokenPrice;
    }

    function buyTokens(uint _amount) external {
        require(token.balanceOf(msg.sender) >= _amount, "Insufficient balance");
        require(token.allowance(msg.sender, address(this)) >= _amount, "Allowance not set");
        
        uint totalPrice = _amount * tokenPrice;
        require(address(this).balance >= totalPrice, "Insufficient contract balance");
        
        token.transferFrom(msg.sender, address(this), _amount);
        totalTokensSold += _amount;

        payable(owner).transfer(totalPrice);
    }
}
<\contract\>