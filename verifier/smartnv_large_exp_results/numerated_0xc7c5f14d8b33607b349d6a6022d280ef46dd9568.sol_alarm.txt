contract PaymentContract {
         address public owner;
         mapping(uint => uint) public payments;
         uint public totalPayments;

         constructor() {
             owner = msg.sender;
         }

         function makePayment(uint _paymentId, uint _amount) public {
             require(msg.sender == owner, "Only owner can make payments");
             payments[_paymentId] = _amount;
             totalPayments += _amount;
         }

         function withdraw(uint _amount) public {
             require(msg.sender == owner, "Only owner can withdraw funds");
             require(_amount <= totalPayments, "Insufficient funds");
             totalPayments -= _amount;
         }

         function changeOwnership(address _newOwner) public {
             require(msg.sender == owner, "Only owner can change ownership");
             owner = _newOwner;
         }
}