contract Escrow {
    address public buyer;
    address public seller;
    address public arbiter;
    uint public escrowAmount;
    bool public isPaid;

    constructor(address _buyer, address _seller, address _arbiter, uint _escrowAmount) {
        buyer = _buyer;
        seller = _seller;
        arbiter = _arbiter;
        escrowAmount = _escrowAmount;
        isPaid = false;
    }

    function deposit() public payable {
        require(msg.sender == buyer, "Only buyer can deposit");
        require(msg.value == escrowAmount, "Incorrect deposit amount");
        isPaid = true;
    }

    function release() public {
        require(msg.sender == arbiter, "Only arbiter can release funds");
        require(isPaid == true, "Escrow amount has not been paid yet");
        seller.transfer(escrowAmount);
    }

    function refund() public {
        require(msg.sender == arbiter, "Only arbiter can refund funds");
        require(isPaid == true, "Escrow amount has not been paid yet");
        buyer.transfer(escrowAmount);
    }
} 

Output: 
- atomicity violation
- incorrect visibility/ownership