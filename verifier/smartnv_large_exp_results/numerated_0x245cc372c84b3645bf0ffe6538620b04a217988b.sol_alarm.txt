<\contract\>
contract Marketplace {
     struct Product {
        uint productId;
        string name;
        uint price;
        address seller;
        bool isSold;
     }
     mapping(uint => Product) public products;
     uint public productCount;

     function addProduct(string memory _name, uint _price) public {
        productCount++;
        products[productCount] = Product(productCount, _name, _price, msg.sender, false);
     }

     function buyProduct(uint _productId) public payable {
        Product storage product = products[_productId];
        require(msg.value >= product.price, "Insufficient funds");
        require(!product.isSold, "Product is already sold");
        product.seller.transfer(msg.value);
        product.isSold = true;
     }
}
<\contract\>