The contract provided for analysis:

contract Sale {
    address public owner;
    uint public price;
    uint public totalSupply = 1000;
    mapping(address => uint) public balances;

    constructor() {
        owner = msg.sender;
        price = 1 ether;
    }

    function buyTokens(uint amount) public payable {
        require(msg.value == amount * price, "insufficient payment");
        require(balances[msg.sender] + amount <= totalSupply, "exceeds total supply");
        
        balances[msg.sender] += amount;
    }

    function withdraw() public {
        require(msg.sender == owner, "only owner can withdraw");
        
        uint balance = address(this).balance;
        payable(owner).transfer(balance);
    }
}

Output:
- incorrect visibility/ownership