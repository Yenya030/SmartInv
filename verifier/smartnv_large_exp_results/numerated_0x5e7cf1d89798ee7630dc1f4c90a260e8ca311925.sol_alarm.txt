<\contract\>
contract SaleContract {
    address public owner;
    uint public price;
    uint public totalSold;
    mapping(address => uint) public balances;

    constructor(uint _price) {
        owner = msg.sender;
        price = _price;
    }

    function buyTokens(uint _quantity) public {
        uint totalCost = price * _quantity;
        require(msg.value >= totalCost, "Insufficient funds");
        
        balances[msg.sender] += _quantity;
        totalSold += _quantity;
    }

    function withdrawFunds() public {
        require(msg.sender == owner, "Only owner can withdraw funds");
        uint balance = address(this).balance;
        payable(owner).transfer(balance);
    }
}
<\contract\>