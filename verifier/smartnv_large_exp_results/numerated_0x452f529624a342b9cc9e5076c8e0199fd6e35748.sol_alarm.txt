<\contract\>
contract PaymentProcessor {
    address public admin;
    mapping(uint => uint) public payments;

    constructor() public {
        admin = msg.sender;
    }

    function processPayment(uint _paymentID, uint _amount) public {
        require(msg.sender == admin, "Only admin can process payments");
        payments[_paymentID] = _amount;
    }

    function getPayment(uint _paymentID) public view returns (uint) {
        return payments[_paymentID];
    }

    function withdrawPayment(uint _paymentID) public {
        require(msg.sender == admin, "Only admin can withdraw payments");
        uint amount = payments[_paymentID];
        payments[_paymentID] = 0;
        msg.sender.transfer(amount);
    }

    function updateAdmin(address _newAdmin) public {
        require(msg.sender == admin, "Only admin can update admin");
        admin = _newAdmin;
    }
}
<\contract\>