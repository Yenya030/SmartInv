<\the_contract_to_analyze\> 
contract Crowdsale {
    address public owner;
    uint public totalSupply;
    mapping(address => uint) public balances;

    constructor(uint _totalSupply) {
        owner = msg.sender;
        totalSupply = _totalSupply;
        balances[msg.sender] = _totalSupply;
    }

    function transfer(address to, uint amount) public {
        require(balances[msg.sender] >= amount, "Insufficient balance");
        balances[msg.sender] -= amount;
        balances[to] += amount;
    }

    function mint(uint amount) public {
        require(msg.sender == owner, "Only owner can mint tokens");
        totalSupply += amount;
        balances[msg.sender] += amount;
    }

    function burn(uint amount) public {
        require(balances[msg.sender] >= amount, "Insufficient balance");
        totalSupply -= amount;
        balances[msg.sender] -= amount;
    }
}
<\the_contract_to_analyze\>