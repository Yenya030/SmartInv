<\contract\>
contract PaymentProcessor {
     mapping(address => uint256) public balances;
     address public owner;

     constructor() {
         owner = msg.sender;
     }

     function pay() public payable {
         balances[msg.sender] += msg.value;
     }

     function withdraw(uint256 amount) public {
         require(balances[msg.sender] >= amount, "Insufficient balance");
         balances[msg.sender] -= amount;
         msg.sender.transfer(amount);
     }
}
<\contract\> 

Output:
- incorrect visibility/ownership