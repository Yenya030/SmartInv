<\analyzed_contract\>
contract Escrow {
    address public buyer;
    address public seller;
    address public arbiter;
    uint public value;
    enum State { Created, Locked, Release, Inactive }
    State public state;

    constructor(address _arbiter, address _seller) payable {
        arbiter = _arbiter;
        seller = _seller;
        value = msg.value / 2;
    }

    function confirmPayment(address _buyer) public {
        require(msg.sender == arbiter);
        buyer = _buyer;
        state = State.Locked;
    }

    function confirmReceived() public {
        require(msg.sender == buyer || msg.sender == seller);
        require(state == State.Locked);
        seller.transfer(value);
        state = State.Release;
    }

    function refundPayment() public {
        require(msg.sender == buyer || msg.sender == seller);
        require(state == State.Locked);
        buyer.transfer(value);
        state = State.Inactive;
    }

    function() public {
        revert();
    }
}
<\analyzed_contract\>