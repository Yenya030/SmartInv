<\contract_to_analyze\>
contract VotingSystem {
    struct Voter {
        uint256 weight;
        bool voted;
        address delegate;
        uint256 vote;
    }

    struct Proposal {
        uint256 voteCount;
    }

    address public admin;
    mapping(address => Voter) public voters;
    Proposal[] public proposals;

    constructor() {
        admin = msg.sender;
    }

    function delegate(address to) public {
        require(!voters[msg.sender].voted, "You have already voted");
        require(to != msg.sender, "Self-delegation is not allowed");

        voters[msg.sender].delegate = to;
        voters[to].weight += voters[msg.sender].weight;
    }

    function vote(uint256 proposalId) public {
        Voter storage sender = voters[msg.sender];
        require(sender.weight > 0, "You have no right to vote");
        require(!sender.voted, "You have already voted");

        sender.voted = true;
        sender.vote = proposalId;
        proposals[proposalId].voteCount += sender.weight;
    }

    function addProposal() public {
        proposals.push();
    }
}
<\contract_to_analyze\>