contract TokenSale {
    address public owner;
    IERC20 public tokenContract;
    uint public tokenPrice;
    uint public tokensSold;

    event Sell(address _buyer, uint _amount);

    constructor(IERC20 _tokenContract, uint _tokenPrice) {
        owner = msg.sender;
        tokenContract = _tokenContract;
        tokenPrice = _tokenPrice;
    }

    function buyTokens(uint _numberOfTokens) public payable {
        require(msg.value == _numberOfTokens * tokenPrice);
        require(tokenContract.balanceOf(address(this)) >= _numberOfTokens);
        
        uint256 tokensToTransfer = _numberOfTokens;
        tokenContract.transfer(msg.sender, tokensToTransfer);

        tokensSold += tokensToTransfer;
        emit Sell(msg.sender, tokensToTransfer);
    }
}