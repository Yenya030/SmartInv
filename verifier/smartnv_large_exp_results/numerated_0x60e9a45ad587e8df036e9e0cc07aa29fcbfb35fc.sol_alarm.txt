<\contract\>
contract Escrow {
         address public buyer;
         address public seller;
         address public arbiter;
         uint public amount;
         enum State {Created, Locked, Released, Inactive}
         State public state;

         constructor(address _buyer, address _seller, address _arbiter) {
           buyer = _buyer;
           seller = _seller;
           arbiter = _arbiter;
           state = State.Created;
         }

         function deposit() public payable {
           require(msg.sender == buyer && state == State.Created, "only buyer can deposit in Created state");
           amount += msg.value;
         }

         function confirmPayment() public {
           require(msg.sender == seller, "only seller can confirm payment");
           state = State.Locked;
         }

         function refund() public {
           require(msg.sender == buyer, "only buyer can request a refund");
           state = State.Released;
           msg.sender.transfer(amount);
         }

         function paySeller() public {
           require(msg.sender == arbiter, "only arbiter can release funds to seller");
           state = State.Inactive;
           seller.transfer(amount);
         }
}
<\contract\>