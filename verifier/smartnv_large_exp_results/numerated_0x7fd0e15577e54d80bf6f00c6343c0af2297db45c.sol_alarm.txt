<\contract_to_analyze\>
contract Escrow {
    address public buyer;
    address public seller;
    address public arbiter;
    uint public amount;
    bool public buyerPaid;
    bool public sellerPaid;
    
    constructor(address _buyer, address _seller, address _arbiter, uint _amount) public {
        buyer = _buyer;
        seller = _seller;
        arbiter = _arbiter;
        amount = _amount;
        buyerPaid = false;
        sellerPaid = false;
    }

    function releaseAmount() public {
        require(msg.sender == arbiter, "Only arbiter can release funds");
        require(buyerPaid && sellerPaid, "Buyer and seller have not paid yet");
        payable(seller).transfer(amount);
    }

    function paySeller() public payable {
        require(msg.sender == buyer, "Only buyer can pay seller");
        require(msg.value == amount, "Incorrect payment amount");
        sellerPaid = true;
    }

    function payArbiter() public payable {
        require(msg.sender == buyer || msg.sender == seller, "Only buyer or seller can pay arbiter");
        arbiter.transfer(msg.value);
    }

    function withdraw() public {
        require(msg.sender == buyer, "Only buyer can withdraw the funds");
        payable(buyer).transfer(amount);
    }
}
<\contract_to_analyze\>