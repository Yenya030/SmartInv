<\contract\> 
contract Marketplace {
         address public admin;
         address public token;
         mapping(address => uint) public balances;

         constructor(address _token) {
             admin = msg.sender;
             token = _token;
         }

         function buy(uint amount) public {
             require(balances[msg.sender] >= amount, "Insufficient balance");
             balances[msg.sender] -= amount;
             balances[admin] += amount;
             require(token.transferFrom(msg.sender, admin, amount), "Transfer failed");
         }
         function sell(uint amount) public {
             require(token.balanceOf(msg.sender) >= amount, "Insufficient token balance");
             token.transferFrom(msg.sender, admin, amount);
             balances[msg.sender] += amount;
         }
}
<\contract\>