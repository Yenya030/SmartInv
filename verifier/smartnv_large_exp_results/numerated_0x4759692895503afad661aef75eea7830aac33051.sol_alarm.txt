<\Contract\>
contract Escrow {
     mapping(address => uint256) public balances;
     address public owner;

     constructor() {
         owner = msg.sender;
     }

     function deposit() public payable {
         require(msg.value > 0, "Deposit amount must be greater than 0");
         balances[msg.sender] += msg.value;
     }

     function withdraw(uint256 amount) public {
         require(amount <= balances[msg.sender], "Insufficient balance");
         balances[msg.sender] -= amount;
         payable(msg.sender).transfer(amount);
     }

     function transferOwnership(address newOwner) public {
         require(msg.sender == owner, "Only the owner can transfer ownership");
         owner = newOwner;
     }

}
Output:
insufficient gas