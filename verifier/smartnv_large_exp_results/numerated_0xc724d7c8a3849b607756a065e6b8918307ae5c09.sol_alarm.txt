<\contract_to_analyze\>
contract VotingSystem {
    struct Voter {
        uint256 id;
        bool hasVoted;
    }

    mapping(address => Voter) public voters;
    address public admin;

    constructor() {
        admin = msg.sender;
    }

    function vote(uint256 _id) external {
        Voter storage sender = voters[msg.sender];
        require(!sender.hasVoted, "You have already voted");
        
        sender.hasVoted = true;
        sender.id = _id;
    }

    function tallyVotes(uint256 _id) external view returns(uint256) {
        uint256 count = 0;
        for (uint256 i = 0; i < voters.length; i++) {
            if (voters[i].id == _id) {
                count++;
            }
        }
        return count;
    }
}
<\contract_to_analyze\> 