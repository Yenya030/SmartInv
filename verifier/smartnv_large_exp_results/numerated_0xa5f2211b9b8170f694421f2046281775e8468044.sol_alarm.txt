<\contract_to_analyze\>
contract Marketplace {
    address public owner;
    mapping(uint => address) public products;

    constructor() {
        owner = msg.sender;
    }

    function addProduct(uint productId, address productOwner) public {
        require(msg.sender == owner, "Only the owner can add products");
        products[productId] = productOwner;
    }

    function buyProduct(uint productId) public payable {
        require(products[productId] != address(0), "Product does not exist");
        address productOwner = products[productId];
        require(msg.value == 1 ether, "Incorrect payment amount");
        productOwner.transfer(msg.value);
        delete products[productId];
    }
}
<\contract_to_analyze\>