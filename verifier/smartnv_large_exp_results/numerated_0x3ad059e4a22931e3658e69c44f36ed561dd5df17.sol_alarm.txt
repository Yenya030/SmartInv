<\analyzed_contract\>
contract Lottery {
    mapping(address => uint) public tickets;
    uint public totalTickets;
    address public winner;

    function buyTicket(uint amount) public {
        require(amount > 0, "Amount must be greater than 0");
        IERC20 token = IERC20(0x123...456); // ERC20 token address
        token.transferFrom(msg.sender, address(this), amount);
        tickets[msg.sender] += amount;
        totalTickets += amount;
    }

    function pickWinner() public {
        require(totalTickets > 0, "No tickets bought");
        uint randomNum = uint(keccak256(abi.encodePacked(block.difficulty, block.timestamp, totalTickets))) % totalTickets;
        address winningAddress;
        uint count = 0;
        for (uint i = 0; i < totalTickets; i++) {
            count += tickets[msg.sender];
            if (count >= randomNum) {
                winningAddress = msg.sender;
                break;
            }
        }
        winner = winningAddress;
        IERC20 token = IERC20(0x123...456); // ERC20 token address
        token.transfer(winner, totalTickets);
    }
}
<\analyzed_contract\>