contract Marketplace {
    struct Product {
        uint id;
        string name;
        uint price;
    }
    
    mapping(uint => Product) public products;
    uint public productCount;
    
    function addProduct(string memory _name, uint _price) public {
        productCount++;
        products[productCount] = Product(productCount, _name, _price);
    }
    
    function buyProduct(uint _productId) public payable {
        require(products[_productId].id != 0, "Product does not exist");
        require(msg.value >= products[_productId].price, "Insufficient payment");
        // Transfer payment to seller
        payable(msg.sender).transfer(products[_productId].price);
        // Remove product from mapping
        delete products[_productId];
    }
}