<\contract\> 
 contract TokenSale {
         IERC20 public token; 
         address public owner;
         uint public tokenPrice;
         uint public totalTokens;
         
         mapping(address => uint) public tokensPurchased;
         
         constructor(IERC20 _token, uint _tokenPrice, uint _totalTokens) {
             token = _token; 
             owner = msg.sender; 
             tokenPrice = _tokenPrice;
             totalTokens = _totalTokens;
         }
         
         function buyTokens(uint _numTokens) public {
             require(_numTokens > 0, "Token amount must be greater than 0");
             require(token.balanceOf(msg.sender) >= _numTokens, "Insufficient balance");
             
             uint totalCost = tokenPrice * _numTokens;
             require(token.allowance(msg.sender, address(this)) >= totalCost, "Allowance not enough");
             
             token.transferFrom(msg.sender, owner, totalCost);
             tokensPurchased[msg.sender] += _numTokens;
         }
 }