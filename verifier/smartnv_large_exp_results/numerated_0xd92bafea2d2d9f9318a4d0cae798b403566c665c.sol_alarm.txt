Contract:

contract TokenSale {
    address public owner;
    IERC20 public token;

    constructor(address _token) public {
        owner = msg.sender;
        require(_token != address(0), "Token address cannot be zero");
        token = IERC20(_token);
    }

    function buyTokens(uint _amount) public {
        require(_amount > 0, "Amount must be greater than 0");
        uint tokenPrice = calculateTokenPrice();
        uint totalCost = _amount * tokenPrice;
        require(token.balanceOf(msg.sender) >= totalCost, "Insufficient balance");
        token.transfer(msg.sender, _amount);
    }

    function calculateTokenPrice() public view returns (uint) {
        return 100; // Fixed token price for demonstration purposes
    }
}

Output:
1) Incorrect visibility/ownership