<\contract_to_analyze\>
contract Marketplace {
    struct Product {
        uint id;
        string name;
        uint price;
        address owner;
    }

    mapping(uint => Product) public products;
    uint public productCount;

    function addProduct(string memory _name, uint _price) public {
        productCount++;
        products[productCount] = Product(productCount, _name, _price, msg.sender);
    }

    function buyProduct(uint _id) public payable {
        Product storage product = products[_id];
        require(msg.value >= product.price, "Not enough funds sent");
        product.owner.transfer(msg.value);
        delete products[_id];
    }
}
<\contract_to_analyze\>