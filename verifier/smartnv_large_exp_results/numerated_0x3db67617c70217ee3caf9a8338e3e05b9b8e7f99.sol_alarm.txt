<\contract\>
contract SubscriptionPlan {
    address public owner;
    mapping(address => bool) public subscribers;
    uint public subscriptionFee;
    
    constructor(uint _fee) {
        owner = msg.sender;
        subscriptionFee = _fee;
    }
    
    function subscribe() external payable {
        require(msg.value == subscriptionFee, "Incorrect subscription fee");
        subscribers[msg.sender] = true;
    }
    
    function unsubscribe() external {
        require(subscribers[msg.sender] == true, "Not subscribed");
        subscribers[msg.sender] = false;
    }
}
<\contract\>
1) insufficient gas
2) inconsistent state update