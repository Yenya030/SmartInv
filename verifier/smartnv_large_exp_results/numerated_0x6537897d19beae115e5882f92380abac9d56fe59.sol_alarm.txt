<\contract_to_analyze\>
contract Escrow {
    address public seller;
    address public buyer;
    address public arbiter;
    uint public escrowAmount;
    bool public isPaid;
    bool public isRefunded;
    
    constructor(address _seller, address _buyer, address _arbiter, uint _escrowAmount) {
        seller = _seller;
        buyer = _buyer;
        arbiter = _arbiter;
        escrowAmount = _escrowAmount;
        isPaid = false;
        isRefunded = false;
    }
    
    function deposit() public payable {
        require(msg.sender == buyer, "Only the buyer can deposit funds");
        require(msg.value == escrowAmount, "Incorrect amount deposited");
        isPaid = true;
    }
    
    function refund() public {
        require(msg.sender == buyer || msg.sender == seller, "Only the buyer or seller can refund funds");
        require(!isRefunded, "Funds have already been refunded");
        require(isPaid, "Funds have not been deposited yet");
        
        payable(msg.sender).transfer(escrowAmount);
        isRefunded = true;
    }
    
    function release() public {
        require(msg.sender == arbiter, "Only the arbiter can release funds");
        require(isPaid, "Funds have not been deposited yet");
        
        payable(seller).transfer(escrowAmount);
        isPaid = false;
    }
}
<\contract_to_analyze\>