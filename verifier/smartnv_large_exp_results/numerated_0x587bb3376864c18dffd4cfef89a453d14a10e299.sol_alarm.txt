<\contract\>
contract PaymentProcessor {
     address public owner;
     mapping(address => uint) public balances;

     constructor() {
         owner = msg.sender;
     }

     function deposit() public payable {
         balances[msg.sender] += msg.value;
     }

     function withdraw(uint amount) public {
         require(balances[msg.sender] >= amount, "Insufficient balance");
         balances[msg.sender] -= amount;
         payable(msg.sender).transfer(amount);
     }

     function updateOwner(address newOwner) public {
         require(msg.sender == owner, "Only owner can update owner");
         owner = newOwner;
     }
}
<\contract\>