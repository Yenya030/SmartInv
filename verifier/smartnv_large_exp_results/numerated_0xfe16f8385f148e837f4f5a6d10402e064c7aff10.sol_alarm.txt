Potential vulnerabilities in the contract:

1) Incorrect visibility/ownership: The contract does not specify the visibility of the functions and variables, which could lead to potential security issues.
2) Inconsistent state update: The 'proposal' struct is being updated in different functions without proper synchronization or checks, potentially leading to inconsistent state.
3) Business logic flaw: The logic for checking if a proposal is on-going or if the execution has ended may not be correctly implemented, allowing for unexpected behavior.
4) Integer overflow/underflow: There is a possibility of integer overflow in the calculation of 'startingBlance' and 'proposal.votedAmount' if not properly handled.
5) Suicidal contracts: The contract allows for the transfer of funds using 'transferFrom', which could potentially lead to reentrancy attacks and make the contract vulnerable to being drained of funds.