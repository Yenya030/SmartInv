contract TokenSale {
    address public owner;
    IERC20 public token;
    mapping(address => uint) public balances;

    constructor(IERC20 _token) public {
        owner = msg.sender;
        token = _token;
    }

    function buyTokens(uint amount) public {
        require(token.balanceOf(address(this)) >= amount, "Not enough tokens available");
        token.transfer(msg.sender, amount);
        balances[msg.sender] += amount;
    }

    function withdrawTokens(uint amount) public {
        require(balances[msg.sender] >= amount, "Not enough tokens in balance");
        token.transfer(msg.sender, amount);
        balances[msg.sender] -= amount;
    }

    function withdrawEther() public {
        require(msg.sender == owner, "Only owner can withdraw funds");
        msg.sender.transfer(address(this).balance);
    }
}