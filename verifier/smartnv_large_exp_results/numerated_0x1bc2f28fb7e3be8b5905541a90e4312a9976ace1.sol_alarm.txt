<\contract\>
contract Escrow {
    address public buyer;
    address public seller;
    address public arbiter;
    uint public escrowAmount;
    bool public isPaid;
    bool public isReleased;
  
    constructor(address _buyer, address _seller, address _arbiter) public {
        buyer = _buyer;
        seller = _seller;
        arbiter = _arbiter;
        isPaid = false;
        isReleased = false;
    }
  
    function deposit() public payable {
        require(msg.sender == buyer, "Only buyer can deposit funds");
        require(!isPaid, "Payment already made");
        escrowAmount = msg.value;
        isPaid = true;
    }
  
    function release() public {
        require(msg.sender == arbiter, "Only arbiter can release funds");
        require(isPaid, "Payment has not been made yet");
        require(!isReleased, "Funds already released");
        seller.transfer(escrowAmount);
        isReleased = true;
    }
  
    function refund() public {
        require(msg.sender == arbiter, "Only arbiter can refund funds");
        require(isPaid, "Payment has not been made yet");
        require(!isReleased, "Funds already released");
        buyer.transfer(escrowAmount);
        isReleased = true;
    }
}
<\contract\>