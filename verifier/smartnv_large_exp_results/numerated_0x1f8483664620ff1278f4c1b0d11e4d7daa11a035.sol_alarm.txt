<\contract_to_analyze\>
contract Auction {
    mapping(address => uint) public bids;
    address public highestBidder;
    uint public highestBid;

    function bid() public payable {
        require(msg.value > highestBid, "Bid must be higher than current highest bid");
        if (highestBid != 0) {
            // Return the previous bidder's bid
            payable(highestBidder).transfer(highestBid);
        }
        highestBidder = msg.sender;
        highestBid = msg.value;
        bids[msg.sender] += msg.value;
    }

    function withdraw() public {
        uint amount = bids[msg.sender];
        require(amount > 0, "No funds to withdraw");
        bids[msg.sender] = 0;
        payable(msg.sender).transfer(amount);
    }
}
<\contract_to_analyze\>