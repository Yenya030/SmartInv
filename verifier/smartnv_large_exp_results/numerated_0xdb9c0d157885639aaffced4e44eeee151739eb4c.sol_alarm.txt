<\contract\>
contract Escrow {
     address public buyer;
     address public seller;
     address public arbiter;
     uint public amount;
     enum State { Created, Locked, Released, Disputed, Refunded }
     State public state;

     constructor(address _buyer, address _seller, address _arbiter) {
         buyer = _buyer;
         seller = _seller;
         arbiter = _arbiter;
     }

     function deposit() public payable {
         require(msg.sender == buyer, "Only buyer can deposit funds");
         require(state == State.Created, "Funds already deposited");
         amount = msg.value;
         state = State.Locked;
     }

     function refundBuyer() public {
         require(msg.sender == seller, "Only seller can refund buyer");
         require(state == State.Locked, "Funds are not locked");
         seller.transfer(amount);
         state = State.Refunded;
     }

     function releaseFunds() public {
         require(msg.sender == arbiter, "Only arbiter can release funds");
         require(state == State.Locked, "Funds are not locked");
         buyer.transfer(amount);
         state = State.Released;
     }

     function dispute() public {
         require(msg.sender == buyer || msg.sender == seller, "Only buyer or seller can dispute");
         require(state == State.Locked, "Funds are not locked");
         state = State.Disputed;
     }
}