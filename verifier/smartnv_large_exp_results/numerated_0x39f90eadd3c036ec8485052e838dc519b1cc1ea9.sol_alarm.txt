<\contract\>
contract TokenSale {
    address public admin;
    IERC20 public token;
    uint public tokenPrice;
    uint public tokensSold;
    
    constructor() {
        admin = msg.sender;
        token = new ERC20Token("Example Token", "EXM", 18, 1000000);
        tokenPrice = 1e18; // 1 token = 1 ETH
        tokensSold = 0;
    }
    
    function buyTokens(uint _numberOfTokens) public payable {
        require(msg.value == _numberOfTokens * tokenPrice, "Incorrect token price");
        require(token.balanceOf(address(this)) >= _numberOfTokens, "Not enough tokens available");
        
        token.transfer(msg.sender, _numberOfTokens);
        tokensSold += _numberOfTokens;
    }
    
    function setTokenPrice(uint _newPrice) public {
        require(msg.sender == admin, "Only admin can set the token price");
        tokenPrice = _newPrice;
    }
    
    function withdraw() public {
        require(msg.sender == admin, "Only admin can withdraw funds");
        address payable _admin = payable(admin);
        _admin.transfer(address(this).balance);
    }
}
<\contract\>