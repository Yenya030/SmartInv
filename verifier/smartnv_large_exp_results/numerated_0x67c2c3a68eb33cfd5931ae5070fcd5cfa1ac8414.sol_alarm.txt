<\analyzed_contract\>
contract Marketplace {
     address public owner;
     mapping(uint => address) public items;
     uint public itemCount;

     constructor() {
         owner = msg.sender;
         itemCount = 0;
     }

     function addItem(address item) public {
         require(msg.sender == owner, "Only owner can add items");
         items[itemCount] = item;
         itemCount++;
     }

     function purchaseItem(uint itemId) public payable {
         address item = items[itemId];
         require(msg.value >= 100, "Insufficient payment");
         payable(owner).transfer(msg.value);
         // Transfer item to buyer's address
     }

     function withdrawFunds() public {
         require(msg.sender == owner, "Only owner can withdraw funds");
         // Withdraw all funds from the contract
     }
}
<\analyzed_contract\>