<\analyzed_contract\>
contract PaymentProcessor {
     mapping(address => uint) public balances;
     address public owner;

     constructor() {
         owner = msg.sender;
     }

     function deposit() public payable {
         balances[msg.sender] += msg.value;
     }

     function withdraw(uint amount) public {
         require(amount <= balances[msg.sender],"Insufficient balance");
         balances[msg.sender] -= amount;
         msg.sender.transfer(amount);
     }

     function transfer(address to, uint amount) public {
         require(amount <= balances[msg.sender],"Insufficient balance");
         balances[msg.sender] -= amount;
         balances[to] += amount;
     }
}
<\analyzed_contract\>