<\analyzed_contract\>
contract Escrow {
     address public seller;
     address public buyer;
     address public arbiter;
     bool public sellerApproved;
     bool public buyerApproved;
     bool public arbiterApproved;
     uint public price;

     constructor(address _seller, address _buyer, address _arbiter, uint _price) {
          seller = _seller;
          buyer = _buyer;
          arbiter = _arbiter;
          price = _price;
     }

     function approveSeller() public {
          require(msg.sender == seller, "Only seller can approve");
          sellerApproved = true;
     }

     function approveBuyer() public {
          require(msg.sender == buyer, "Only buyer can approve");
          buyerApproved = true;
     }

     function approveArbiter() public {
          require(msg.sender == arbiter, "Only arbiter can approve");
          arbiterApproved = true;
     }

     function releaseFunds() public {
          require(sellerApproved && buyerApproved, "Both parties must approve");
          payable(seller).transfer(price);
     }

     function refundBuyer() public {
          require(arbiterApproved, "Arbiter must approve");
          payable(buyer).transfer(price);
     }
}
<\analyzed_contract\>