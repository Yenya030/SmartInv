<\analyzed_contract\>
contract TokenSale {
    address public tokenAddress;
    address public owner;
    uint public tokenPrice;
    uint public tokenSupply;
  
    mapping(address => uint) public balances;
  
    constructor(address _tokenAddress, uint _tokenPrice, uint _tokenSupply) {
        tokenAddress = _tokenAddress;
        owner = msg.sender;
        tokenPrice = _tokenPrice;
        tokenSupply = _tokenSupply;
    }
  
    function buyTokens(uint _amount) public payable {
        require(_amount * tokenPrice == msg.value, "Incorrect amount sent");
        require(tokenSupply >= _amount, "Not enough tokens available");
  
        ERC20(tokenAddress).transfer(msg.sender, _amount);
        tokenSupply -= _amount;
        balances[msg.sender] += _amount;
    }
  
    function withdrawBalance() public {
        require(msg.sender == owner, "Only owner can withdraw");
  
        payable(owner).transfer(address(this).balance);
    }
}
<\analyzed_contract\>