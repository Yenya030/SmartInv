<\analyzed_contract\>
contract TokenSale {
    address public admin;
    IERC20 public token;

    constructor(IERC20 _token) {
        admin = msg.sender;
        token = _token;
    }

    function buyTokens(uint amount) public {
        require(amount > 0, "Amount must be greater than 0");
        uint totalPrice = amount * 1 ether;
        require(token.balanceOf(address(this)) >= amount, "Insufficient token balance");
        require(msg.value >= totalPrice, "Insufficient ETH sent");
        
        token.transfer(msg.sender, amount);
    }

    function transferOwnership(address newAdmin) public {
        require(msg.sender == admin, "Only admin can transfer ownership");
        admin = newAdmin;
    }

    function withdraw(address payable to, uint amount) public {
        require(msg.sender == admin, "Only admin can withdraw");
        require(address(this).balance >= amount, "Insufficient contract balance");
        to.transfer(amount);
    }
}
<\analyzed_contract\>