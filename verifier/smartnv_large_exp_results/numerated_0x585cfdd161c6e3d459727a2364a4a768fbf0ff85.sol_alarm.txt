<\contract_to_analyze\>
contract TokenSale {
     IERC20 public token; 
     address public owner; 
     uint public price; 
     mapping(address => uint) public balances;

     constructor(IERC20 _token, uint _price) {
         token = _token; 
         owner = msg.sender; 
         price = _price; 
     }

     function buyTokens(uint amount) public {
         uint cost = price * amount; 
         require(token.balanceOf(msg.sender) >= cost, "Insufficient balance");
         token.transferFrom(msg.sender, owner, cost); 
         balances[msg.sender] += amount; 
     }

     function withdraw() public {
         require(msg.sender == owner, "Only owner can withdraw funds"); 
         token.transfer(owner, token.balanceOf(address(this))); 
     }
}
<\contract_to_analyze\>