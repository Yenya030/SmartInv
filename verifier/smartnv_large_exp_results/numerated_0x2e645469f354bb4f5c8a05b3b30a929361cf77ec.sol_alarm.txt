<\contract\>
contract TokenSale {
         IERC20 public token; 
         address public owner; 
         uint public tokenPrice; 
         uint public totalTokens; 
         mapping(address => uint) public balance; 

         constructor(IERC20 _token, uint _tokenPrice, uint _totalTokens) {
             token = _token;
             owner = msg.sender; 
             tokenPrice = _tokenPrice; 
             totalTokens = _totalTokens; 
         }
         
         function buyTokens(uint _amount) public {
             require(_amount > 0, "Amount must be greater than 0"); 
             require(balance[msg.sender] + _amount <= totalTokens, "Not enough tokens available"); 
             uint cost = _amount * tokenPrice;
             require(token.balanceOf(msg.sender) >= cost, "Insufficient balance to buy tokens");
             balance[msg.sender] += _amount; 
             token.transferFrom(msg.sender, address(this), cost);
         }
}
<\contract\>