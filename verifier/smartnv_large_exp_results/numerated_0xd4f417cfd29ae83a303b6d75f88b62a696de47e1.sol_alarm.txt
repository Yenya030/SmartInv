<\contract\>
contract PaymentProcessor {
     address public owner;
     mapping (address => uint) public payments;
     
     constructor() {
         owner = msg.sender;
     }
     
     function makePayment(address _recipient, uint _amount) public {
         require(msg.sender == owner, "Only owner can make payments");
         payments[_recipient] += _amount;
     }
     
     function withdrawPayment(address _recipient, uint _amount) public {
         require(msg.sender == owner, "Only owner can withdraw payments");
         require(payments[_recipient] >= _amount, "Insufficient funds");
         payments[_recipient] -= _amount;
     }
}
<\contract\>