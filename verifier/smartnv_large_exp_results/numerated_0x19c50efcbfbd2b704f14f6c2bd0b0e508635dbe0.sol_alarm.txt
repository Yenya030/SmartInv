contract PaymentProcessor {
    
    address public owner;
    mapping(uint256 => address) public payments;
    uint256 public totalPayments;

    constructor() {
        owner = msg.sender;
    }

    function processPayment(address _recipient, uint256 _amount) public {
        require(msg.sender == owner, "Only the owner can process payments");
        totalPayments++;
        payments[totalPayments] = _recipient;
        address(uint160(_recipient)).transfer(_amount);
    }

    function withdrawFunds(uint256 _amount) public {
        require(msg.sender == owner, "Only the owner can withdraw funds");
        require(address(this).balance >= _amount, "Insufficient funds");
        address(uint160(owner)).transfer(_amount);
    }

} 

<\output\> 
potential vulnerability:  incorrect visibility/ownership