<\contract_to_analyze\>
contract Escrow {
     address public buyer;
     address public seller;
     address public arbiter;
     uint public amount;
     enum State {Created, Locked, Released}
     State public state;

    constructor(address _buyer, address _seller, address _arbiter, uint _amount) {
          buyer = _buyer;
          seller = _seller;
          arbiter = _arbiter;
          amount = _amount;
          state = State.Created;
        }

    function lock() public {
          require(msg.sender == buyer, "only buyer can lock");
          state = State.Locked;
        }

    function release() public {
          require(msg.sender == arbiter, "only arbiter can release");
          require(address(this).balance == amount, "amount not available");
          state = State.Released;
          seller.transfer(amount);
        }

    function refund() public {
          require(msg.sender == arbiter, "only arbiter can refund");
          require(address(this).balance == amount, "amount not available");
          state = State.Released;
          buyer.transfer(amount);
        }
}
<\contract_to_analyze\>