<\contract_to_analyze\> 
contract Escrow {
    address public buyer;
    address public seller;
    address public arbiter;
    uint public price;
    bool public buyerPaid;
    bool public sellerPaid;
    
    constructor(address _buyer, address _seller, address _arbiter, uint _price) {
        buyer = _buyer;
        seller = _seller;
        arbiter = _arbiter;
        price = _price;
        buyerPaid = false;
        sellerPaid = false;
    }
    
    function deposit() public payable {
        require(msg.sender == buyer || msg.sender == seller, "Only buyer or seller can deposit funds");
        require(msg.value == price, "Incorrect amount deposited");
        
        if (msg.sender == buyer) {
            buyerPaid = true;
        } else if (msg.sender == seller) {
            sellerPaid = true;
        }
    }
    
    function releaseFunds() public {
        require(msg.sender == buyer || msg.sender == seller, "Only buyer or seller can release funds");
        require(buyerPaid && sellerPaid, "Both buyer and seller haven't paid yet");
        
        address payable _seller = payable(seller);
        _seller.transfer(price);
    }
    
    function dispute() public {
        require(msg.sender == arbiter, "Only arbiter can resolve disputes");
        require(!buyerPaid || !sellerPaid, "Both buyer and seller have paid, no dispute");
        
        if (buyerPaid) {
            address payable _buyer = payable(buyer);
            _buyer.transfer(price);
        } else if (sellerPaid) {
            address payable _seller = payable(seller);
            _seller.transfer(price);
        }
    }
}
<\contract_to_analyze\>