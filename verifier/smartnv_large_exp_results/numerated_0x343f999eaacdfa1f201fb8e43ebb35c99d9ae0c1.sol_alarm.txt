<\analyzed_contract\>
contract PaymentProcessor {
    address public owner;
    mapping(address => uint) public payments;

    constructor() {
        owner = msg.sender;
    }

    function makePayment(address recipient, uint amount) public {
        require(msg.sender == owner, "Only owner can make payments");
        require(amount > 0, "Invalid payment amount");
        
        payments[recipient] += amount;
    }

    function withdrawPayment() public {
        uint payment = payments[msg.sender];
        require(payment > 0, "No payment to withdraw");

        payments[msg.sender] = 0;
        msg.sender.transfer(payment);
    }

    function updateOwner(address newOwner) public {
        require(msg.sender == owner, "Only owner can update owner");
        
        owner = newOwner;
    }
}
<\analyzed_contract\>