<\contract\>
contract Escrow {
    address public buyer;
    address public seller;
    uint public price;
    enum State {Created, Locked, Released}
    State public state;

    constructor(address _buyer, address _seller, uint _price) {
        buyer = _buyer;
        seller = _seller;
        price = _price;
        state = State.Created;
    }

    function deposit() public payable {
        require(msg.sender == buyer, "Only buyer can deposit");
        require(state == State.Created, "Invalid state for deposit");
        state = State.Locked;
    }

    function release() public {
        require(msg.sender == buyer, "Only buyer can release funds");
        require(state == State.Locked, "Invalid state for release");
        seller.transfer(price);
        state = State.Released;
    }

    function refund() public {
        require(msg.sender == seller, "Only seller can refund");
        require(state == State.Locked, "Invalid state for refund");
        buyer.transfer(price);
        state = State.Released;
    }
}
<\contract\>