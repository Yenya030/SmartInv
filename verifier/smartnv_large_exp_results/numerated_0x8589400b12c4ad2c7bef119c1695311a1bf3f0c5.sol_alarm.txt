<\contract_to_analyze\> 
contract VotingSystem {
     struct Voter {
         uint weight;
         bool voted;
         uint vote;
         address delegate; 
     }
     struct Proposal {
          uint voteCount;
      }
     address public chairperson;
     mapping(address => Voter) public voters;
     Proposal[] public proposals;
     
     function giveRightToVote(address voter) public {
         require(msg.sender == chairperson, "Only chairperson can give right to vote.");
         require(!voters[voter].voted, "The voter already voted.");
         require(voters[voter].weight == 0);
         voters[voter].weight = 1;
     }

    function vote(uint proposal) public {
         Voter storage sender = voters[msg.sender];
         require(sender.weight != 0, "Has no right to vote");
         require(!sender.voted, "Already voted.");
         sender.voted = true;
         sender.vote = proposal;
         proposals[proposal].voteCount += sender.weight;
     }
}