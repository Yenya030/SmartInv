<SmartContract>
contract TokenSale {
    address public owner;
    IERC20 public token;
    uint public tokenPrice;
    mapping(address => uint) public balances;
    
    constructor(IERC20 _token, uint _tokenPrice) {
        owner = msg.sender;
        token = _token;
        tokenPrice = _tokenPrice;
    }
    
    function buyTokens(uint _amount) public {
        uint totalCost = _amount * tokenPrice;
        token.transferFrom(msg.sender, address(this), totalCost);
        balances[msg.sender] += _amount;
    }
    
    function withdrawTokens(uint _amount) public {
        require(balances[msg.sender] >= _amount, "Not enough tokens to withdraw");
        token.transfer(msg.sender, _amount);
        balances[msg.sender] -= _amount;
    }
    
    function setPrice(uint _newPrice) public {
        require(msg.sender == owner, "Only owner can set the price");
        tokenPrice = _newPrice;
    }
}
</SmartContract> 

Output:
- incorrect visibility/ownership