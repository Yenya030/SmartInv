<\contract\> 
contract TokenSale {
    address public token;
    address public owner;
    uint public price;
    uint public totalSold;
    
    constructor(address _token, uint _price) {
        token = _token;
        owner = msg.sender;
        price = _price;
        totalSold = 0;
    }

    function buyTokens(uint _amount) public {
        require(_amount > 0, "Amount must be greater than 0");
        require(msg.value == _amount * price, "Incorrect payment amount");
        
        totalSold += _amount;
        ERC20(token).transfer(msg.sender, _amount);
    }

    function withdrawFunds() public {
        require(msg.sender == owner, "Only the owner can withdraw funds");
        uint balance = address(this).balance;
        payable(owner).transfer(balance);
    }
}

<\contract\>

Output:
- incorrect visibility/ownership
- ether leakage