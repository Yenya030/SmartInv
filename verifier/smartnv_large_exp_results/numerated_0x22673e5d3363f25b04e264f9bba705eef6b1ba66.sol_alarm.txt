<\contract\> 
contract VotingSystem {
    struct Voter {
        uint256 weight;
        bool voted;
        address delegate;
        uint256 vote;
    }
    
    mapping(address => Voter) public voters;
    address public chairperson;
    uint256 public winningProposal;
    
    function delegate(address to) public {
        require(msg.sender != to, "Self-delegation is not allowed");
        require(voters[msg.sender].voted == false, "You have already voted");
        
        voters[msg.sender].delegate = to;
        voters[to].weight += voters[msg.sender].weight;
    }
    
    function vote(uint256 proposal) public {
        require(voters[msg.sender].weight != 0, "No right to vote");
        require(voters[msg.sender].voted == false, "You have already voted");
        
        voters[msg.sender].voted = true;
        voters[msg.sender].vote = proposal;
        
        if (proposal != winningProposal) {
            winningProposal = proposal;
        }
    }
    
    function winningProposal() view public returns (uint256) {
        return winningProposal;
    }
}
<\contract\>