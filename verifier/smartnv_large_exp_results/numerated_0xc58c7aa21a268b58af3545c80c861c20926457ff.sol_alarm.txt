<\contract\>
contract PaymentProcessor {
    address public owner;
    mapping(address => uint256) public payments;
    
    constructor() {
        owner = msg.sender;
    }
    
    function makePayment(address _recipient, uint256 _amount) public {
        require(msg.sender == owner, "Only the owner can make payments");
        payments[_recipient] += _amount;
    }
    
    function withdrawPayment() public {
        uint256 amount = payments[msg.sender];
        require(amount > 0, "No funds to withdraw");
        payments[msg.sender] = 0;
        msg.sender.transfer(amount);
    }
}
Output:
- privilege escalation
- incorrect visibility/ownership