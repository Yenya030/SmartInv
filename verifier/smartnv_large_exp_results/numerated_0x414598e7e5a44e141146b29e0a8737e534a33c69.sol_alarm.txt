Contract:

contract Escrow {
    mapping(address => uint) public balances;
    address public owner;

    constructor() public {
        owner = msg.sender;
    }

    function deposit() public payable {
        balances[msg.sender] += msg.value;
    }

    function withdraw(uint amount) public {
        require(balances[msg.sender] >= amount, "Insufficient balance");
        msg.sender.transfer(amount);
        balances[msg.sender] -= amount;
    }

    function transfer(address to, uint amount) public {
        require(balances[msg.sender] >= amount, "Insufficient balance");
        balances[to] += amount;
        balances[msg.sender] -= amount;
    }

    function destroy() public {
        require(msg.sender == owner, "Only owner can destroy the contract");
        selfdestruct(msg.sender);
    }
}

Output:
healthy