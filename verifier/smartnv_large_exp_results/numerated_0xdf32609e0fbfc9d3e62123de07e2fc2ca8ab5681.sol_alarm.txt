<\contract\>
contract PaymentProcessor {
    address public owner;
    mapping(uint => uint) public payments;

    constructor() {
        owner = msg.sender;
    }

    function makePayment(uint _paymentId, uint _amount) public {
        require(msg.sender == owner, "Only the owner can make payments");
        payments[_paymentId] = _amount;
    }

    function getPaymentAmount(uint _paymentId) public view returns(uint) {
        return payments[_paymentId];
    }

    function withdrawPayment(uint _paymentId) public {
        require(payments[_paymentId] > 0, "Payment does not exist");
        msg.sender.transfer(payments[_paymentId]);
        payments[_paymentId] = 0;
    }
}
<\contract\>