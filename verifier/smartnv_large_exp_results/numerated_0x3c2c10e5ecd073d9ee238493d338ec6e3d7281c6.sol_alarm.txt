<\Contract\> 
contract Escrow {
    address public buyer;
    address public seller;
    address public arbiter;
    uint public amount;
    bool public buyerApproved;
    bool public sellerApproved;

    constructor(address _seller, address _arbiter) public payable {
        buyer = msg.sender;
        seller = _seller;
        arbiter = _arbiter;
        amount = msg.value;
        buyerApproved = false;
        sellerApproved = false;
    }

    function approvePayment() public {
        require(msg.sender == buyer || msg.sender == seller, "Only buyer or seller can approve payment");
        if (msg.sender == buyer) {
            buyerApproved = true;
        } else if (msg.sender == seller) {
            sellerApproved = true;
        }
        if (buyerApproved && sellerApproved) {
            address(this).transfer(amount);
        }
    }

    function refundPayment() public {
        require(msg.sender == arbiter, "Only arbiter can refund payment");
        require(!buyerApproved || !sellerApproved, "Payment already approved");
        address(buyer).transfer(amount);
    }
}
<\Contract\>