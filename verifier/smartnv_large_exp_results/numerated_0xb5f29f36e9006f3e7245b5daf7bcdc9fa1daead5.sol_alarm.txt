<\contract\> 
contract VotingSystem {
    address public owner;
    mapping(uint => address) public voters;
    mapping(address => bool) public hasVoted;

    constructor() {
        owner = msg.sender;
    }

    function vote(uint voterId) external {
        require(!hasVoted[msg.sender], "You have already voted");
        voters[voterId] = msg.sender;
        hasVoted[msg.sender] = true;
    }

    function changeOwner(address newOwner) external {
        require(msg.sender == owner, "Only the owner can change the owner");
        owner = newOwner;
    }
}
Potential vulnerabilities:
2) privilege escalation
8) reentrancy