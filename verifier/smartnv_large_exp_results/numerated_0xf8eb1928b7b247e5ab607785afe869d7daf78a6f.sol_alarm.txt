<\contract\> 
contract TokenSale {
         IERC20 public token;
         address public owner;
         uint public price;
         mapping(address => uint) public balances;
         
         constructor(address _token, uint _price) {
             token = IERC20(_token);
             price = _price;
             owner = msg.sender;
         }
         
         function buyTokens(uint _amount) public {
             require(token.balanceOf(msg.sender) >= _amount * price, "Insufficient balance");
             token.transferFrom(owner, msg.sender, _amount);
             balances[msg.sender] += _amount;
         }
         
         function withdrawTokens(uint _amount) public {
             require(msg.sender == owner, "Unauthorized");
             require(token.balanceOf(address(this)) >= _amount, "Insufficient balance");
             token.transfer(owner, _amount);
         }
     }
<\contract\>