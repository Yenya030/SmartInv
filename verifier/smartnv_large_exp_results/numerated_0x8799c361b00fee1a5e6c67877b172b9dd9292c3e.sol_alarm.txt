<\contract\> 
contract Escrow {
         address public buyer;
         address public seller;
         address public arbiter;
         bool public buyerApproved;
         bool public sellerApproved;
         bool public arbiterApproved;
         uint public amount;

         constructor(address _buyer, address _seller, address _arbiter, uint _amount) public {
             buyer = _buyer;
             seller = _seller;
             arbiter = _arbiter;
             amount = _amount;
         }

         function deposit() public payable {
             require(msg.sender == buyer || msg.sender == seller, "Only buyer or seller can deposit");
         }
         function withdraw() public {
             require(msg.sender == buyer || msg.sender == seller, "Only buyer or seller can withdraw");
             if (buyerApproved && sellerApproved) {
                 if (!seller.send(amount)) {
                     buyer.transfer(amount);
                 }
             }
         }
         function approveBuyer() public {
             require(msg.sender == arbiter, "Only arbiter can approve");
             buyerApproved = true;
         }
         function approveSeller() public {
             require(msg.sender == arbiter, "Only arbiter can approve");
             sellerApproved = true;
         }
         function approveArbiter() public {
             require(msg.sender == buyer || msg.sender == seller, "Only buyer or seller can approve");
             arbiterApproved = true;
         }
     }
<\contract\> 

Output:
- The contract contains a potential privilege escalation vulnerability.
- The contract is healthy.