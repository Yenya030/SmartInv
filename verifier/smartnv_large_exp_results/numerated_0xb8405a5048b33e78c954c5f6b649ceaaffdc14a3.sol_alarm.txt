<\contract_to_analyze\>
contract VotingSystem {
    struct Voter {
        bool voted;
        uint256 vote;
    }
    
    mapping(address => Voter) public voters;
    address public owner;
    uint256 public totalVotes;
    
    constructor() {
        owner = msg.sender;
    }
    
    function vote(uint256 _candidate) public {
        require(!voters[msg.sender].voted, "Already voted");
        
        voters[msg.sender].voted = true;
        voters[msg.sender].vote = _candidate;
        totalVotes++;
    }
    
    function resetVotes() public {
        require(msg.sender == owner, "Only owner can reset votes");
        
        totalVotes = 0;
        for (uint256 i = 0; i < totalVotes; i++) {
            voters[msg.sender].voted = false;
            voters[msg.sender].vote = 0;
        }
    }
}
<\contract_to_analyze\>