<\contract_to_analyze\> 
contract SavingsAccount {
     mapping(address => uint256) public balances;
     address public owner;

     function deposit() public payable {
         balances[msg.sender] += msg.value;
     }

     function withdraw(uint256 amount) public {
         require(amount <= balances[msg.sender], "Insufficient balance");
         balances[msg.sender] -= amount;
         msg.sender.transfer(amount);
     }

     function transfer(address to, uint256 amount) public {
         require(amount <= balances[msg.sender], "Insufficient balance");
         balances[msg.sender] -= amount;
         balances[to] += amount;
     }
}
<\contract_to_analyze\> 

Output:
- inconsistent state update
- incorrect visibility/ownership