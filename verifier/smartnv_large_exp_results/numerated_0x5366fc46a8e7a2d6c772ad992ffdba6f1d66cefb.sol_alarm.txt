<\contract\>
contract Marketplace {
     uint public productCount = 0;
     mapping(uint => Product) public products;

     struct Product {
          uint id;
          string name;
          string description;
          uint price;
          address owner;
          bool purchased;
     }

     function createProduct(string memory _name, string memory _description, uint _price) public {
          productCount++;
          products[productCount] = Product(productCount, _name, _description, _price, msg.sender, false);
     }

     function purchaseProduct(uint _id) public payable {
          Product memory _product = products[_id];
          require(_product.id > 0 && _product.id <= productCount, "Product does not exist");
          require(msg.value >= _product.price, "Not enough Ether sent");
          _product.owner.transfer(msg.value);
          _product.purchased = true;
          products[_id] = _product;
     }
}
<\contract\>