<\contract_to_analyze\>
contract TokenSwap {
    IERC20 public tokenA;
    IERC20 public tokenB;
    
    constructor(address _tokenA, address _tokenB) {
        tokenA = IERC20(_tokenA);
        tokenB = IERC20(_tokenB);
    }
    
    function swap(uint amountA, uint amountB) public {
        require(tokenA.balanceOf(msg.sender) >= amountA, "insufficient tokenA balance");
        require(tokenB.balanceOf(msg.sender) >= amountB, "insufficient tokenB balance");
        
        tokenA.transferFrom(msg.sender, address(this), amountA);
        tokenB.transferFrom(msg.sender, address(this), amountB);
        
        tokenA.transfer(msg.sender, amountB);
        tokenB.transfer(msg.sender, amountA);
    }
}
<\contract_to_analyze\>