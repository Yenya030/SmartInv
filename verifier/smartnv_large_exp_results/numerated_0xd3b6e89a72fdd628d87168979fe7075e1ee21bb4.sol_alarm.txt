<\analyzed_contract\> 
contract Escrow {
     address public buyer;
     address public seller;
     address public arbiter;
     uint public value;
     bool public buyerApproved;
     bool public sellerApproved;
     bool public arbiterApproved;

     constructor(address _seller, address _arbiter) public {
         buyer = msg.sender;
         seller = _seller;
         arbiter = _arbiter;
     }

     function deposit() public payable {
         require(msg.sender == buyer, "Only buyer can deposit");
         value = msg.value;
     }

     function approve() public {
         if (msg.sender == buyer) {
             buyerApproved = true;
         } else if (msg.sender == seller) {
             sellerApproved = true;
         } else if (msg.sender == arbiter) {
             arbiterApproved = true;
         }
     }

     function release() public {
         require(buyerApproved && sellerApproved, "Buyer and seller must approve");
         address payable sellerPayable = address(uint160(seller));
         sellerPayable.transfer(value);
     }

     function refund() public {
         require(arbiterApproved, "Arbiter must approve for refund");
         address payable buyerPayable = address(uint160(buyer));
         buyerPayable.transfer(value);
     }

}
<\analyzed_contract\>