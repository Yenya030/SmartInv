<\contract\>
contract PaymentProcessor {
    address public owner;
    mapping(address => uint256) public payments;

    constructor() public {
        owner = msg.sender;
    }

    function makePayment(address _recipient, uint256 _amount) public {
        require(msg.sender == owner, "Only owner can make payments");
        require(_amount > 0, "Payment amount must be greater than zero");

        payments[_recipient] += _amount;
    }

    function withdrawPayment(address _recipient) public {
        require(msg.sender == _recipient, "Only the recipient can withdraw their payment");
        
        uint256 paymentAmount = payments[_recipient];
        require(paymentAmount > 0, "No payment available to withdraw");

        payments[_recipient] = 0;
        payable(_recipient).transfer(paymentAmount);
    }
}
<\contract\>