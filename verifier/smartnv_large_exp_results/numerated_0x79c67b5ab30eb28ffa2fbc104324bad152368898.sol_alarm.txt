<\analyzed_contract\>
contract PaymentProcessor {
    mapping(uint => uint) public payments;
    address public owner;

    constructor(address _owner) {
        owner = _owner;
    }

    function makePayment(uint _id, uint _amount) public {
        require(msg.sender == owner, "Only owner can make payments");
        payments[_id] = _amount;
    }

    function getPayment(uint _id) public view returns (uint) {
        return payments[_id];
    }

    function updatePayment(uint _id, uint _newAmount) public {
        payments[_id] = _newAmount;
    }

    function transferOwnership(address _newOwner) public {
        require(msg.sender == owner, "Only owner can transfer ownership");
        owner = _newOwner;
    }
}
<\analyzed_contract\>