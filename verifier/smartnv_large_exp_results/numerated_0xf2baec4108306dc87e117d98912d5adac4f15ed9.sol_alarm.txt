<\contract_to_analyze\>
contract TokenSale {
    IERC20 public token;
    address public owner;
    uint public tokenPrice;
    uint public totalSupply;
    
    constructor(IERC20 _token, uint _tokenPrice, uint _totalSupply) {
        token = _token;
        owner = msg.sender;
        tokenPrice = _tokenPrice;
        totalSupply = _totalSupply;
    }
    
    function buyTokens(uint _amount) external {
        require(_amount > 0, "Amount must be greater than zero");
        
        uint totalPrice = _amount * tokenPrice;
        require(token.balanceOf(owner) >= totalPrice, "Not enough tokens for sale");
        
        token.transferFrom(msg.sender, owner, totalPrice);
        totalSupply -= _amount;
    }
    
    function withdrawTokens() external {
        require(msg.sender == owner, "Only the owner can withdraw tokens");
        
        token.transfer(owner, token.balanceOf(address(this)));
    }
}
<\contract_to_analyze\>