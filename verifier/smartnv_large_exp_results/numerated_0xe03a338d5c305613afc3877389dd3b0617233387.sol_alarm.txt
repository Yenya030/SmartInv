Contract to analyze:

contract Crowdsale {
     address public owner;
     IERC20 public token;
     uint public tokenPrice;
     uint public tokensSold;

     constructor(IERC20 _token, uint _price) {
         owner = msg.sender;
         token = _token;
         tokenPrice = _price;
     }

     function buyTokens(uint _amount) public payable {
         require(msg.value == _amount * tokenPrice, "Incorrect amount sent");
         token.transfer(msg.sender, _amount);
         tokensSold += _amount;
     }

     function withdraw(uint _amount) public {
         require(msg.sender == owner, "Only owner can withdraw");
         require(token.balanceOf(address(this)) >= _amount, "Insufficient balance");
         token.transfer(msg.sender, _amount);
     }
}
$output: healthy