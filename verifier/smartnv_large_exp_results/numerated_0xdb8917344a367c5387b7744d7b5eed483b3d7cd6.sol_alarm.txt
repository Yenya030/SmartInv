<\contract\>
contract Marketplace {
    struct Product {
        uint productId;
        string name;
        uint price;
    }
    
    mapping(uint => Product) public products;
    
    function addProduct(uint _productId, string memory _name, uint _price) public {
        products[_productId] = Product(_productId, _name, _price);
    }
    
    function buyProduct(uint _productId) public payable {
        require(products[_productId].productId != 0, "Product does not exist");
        require(msg.value >= products[_productId].price, "Insufficient funds");
        
        // Transfer funds to seller
        address payable seller = msg.sender;
        seller.transfer(msg.value);

        // Remove product from the mapping
        delete products[_productId];
    }
}
<\contract\>