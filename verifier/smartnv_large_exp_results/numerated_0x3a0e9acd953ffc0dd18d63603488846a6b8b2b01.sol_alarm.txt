<\contract\>
contract TokenSale {
    IERC20 public token;
    address public owner;
    uint public tokenPrice;
    uint public totalTokens;

    constructor(IERC20 _token, uint _tokenPrice, uint _totalTokens) public {
        token = _token;
        owner = msg.sender;
        tokenPrice = _tokenPrice;
        totalTokens = _totalTokens;
    }

    function buyTokens(uint _numTokens) public payable {
        require(msg.value == _numTokens * tokenPrice, "Incorrect payment amount");
        token.transfer(msg.sender, _numTokens);
        totalTokens -= _numTokens;
    }

    function withdrawFunds() public {
        require(msg.sender == owner, "Only owner can withdraw funds");
        owner.transfer(address(this).balance);
    }
}
<\contract\> 

Output:
1) Inconsistent state update
2) Incorrect visibility/ownership