<\contract_to_be_analyzed\>
contract Escrow {
    address public buyer;
    address public seller;
    address public arbiter;
    uint public amount;
    bool public buyerDispute;
    bool public sellerDispute;
    bool public arbiterDispute;

    constructor(address _buyer, address _seller, address _arbiter, uint _amount) {
        buyer = _buyer;
        seller = _seller;
        arbiter = _arbiter;
        amount = _amount;
    }

    function releaseAmount() external {
        require(msg.sender == seller, "Only seller can release amount");
        require(!buyerDispute && !sellerDispute && !arbiterDispute, "Dispute in progress");
        payable(seller).transfer(amount);
    }

    function refundAmount() external {
        require(msg.sender == buyer, "Only buyer can refund amount");
        require(!buyerDispute && !sellerDispute && !arbiterDispute, "Dispute in progress");
        payable(buyer).transfer(amount);
    }

    function raiseDispute() external {
        require(msg.sender == buyer || msg.sender == seller || msg.sender == arbiter, "Unauthorized");
        if (msg.sender == buyer) {
            buyerDispute = true;
        } else if (msg.sender == seller) {
            sellerDispute = true;
        } else {
            arbiterDispute = true;
        }
    }

    function resolveDispute(bool refundBuyer) external {
        require(msg.sender == arbiter, "Only arbiter can resolve dispute");
        if (refundBuyer) {
            payable(buyer).transfer(amount);
        } else {
            payable(seller).transfer(amount);
        }
    }
}
<\contract_to_be_analyzed\>