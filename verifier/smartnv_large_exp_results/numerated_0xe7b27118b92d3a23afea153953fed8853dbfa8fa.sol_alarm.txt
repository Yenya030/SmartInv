<\contract\> 
contract Escrow {
    address public buyer;
    address public seller;
    address public arbiter;
    uint public escrowAmount;
    bool public fundsReleased;

    constructor(address _buyer, address _seller, address _arbiter, uint _escrowAmount) {
        buyer = _buyer;
        seller = _seller;
        arbiter = _arbiter;
        escrowAmount = _escrowAmount;
        fundsReleased = false;
    }
    
    function releaseFunds() public {
        require(msg.sender == arbiter, "Only the arbiter can release funds");
        require(!fundsReleased, "Funds have already been released");
        
        // Transfer escrow amount to seller
        seller.transfer(escrowAmount);
        fundsReleased = true;
    }
    
    function refundBuyer() public {
        require(msg.sender == arbiter, "Only the arbiter can refund the buyer");
        require(!fundsReleased, "Funds have already been released");
        
        // Refund escrow amount to buyer
        buyer.transfer(escrowAmount);
        fundsReleased = true;
    }
}
<\contract\>