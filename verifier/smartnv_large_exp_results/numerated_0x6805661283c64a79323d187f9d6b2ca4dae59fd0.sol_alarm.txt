<\contract\> 
contract TokenSale {
     IERC20 public token;
     address public owner;
     uint public tokenPrice;
     uint public tokensSold;

     constructor(IERC20 _token, uint _tokenPrice) {
        token = _token;
        owner = msg.sender;
        tokenPrice = _tokenPrice;
     }

     function buyTokens(uint _amount) external {
        require(_amount > 0, "Amount must be greater than 0");
        require(token.balanceOf(msg.sender) >= _amount * tokenPrice, "Insufficient balance to buy tokens");
        uint totalCost = _amount * tokenPrice;
        token.transferFrom(owner, msg.sender, _amount);
        tokensSold += _amount;
     }

     function endSale() external {
        require(msg.sender == owner, "Only owner can end the sale");
        token.transfer(owner, token.balanceOf(address(this)));
     }
}
<\contract\>