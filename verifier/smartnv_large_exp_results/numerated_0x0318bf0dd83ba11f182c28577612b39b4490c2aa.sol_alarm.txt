<\contract_to_be_analyzed\>
contract TokenSale {
         address public token;
         address public admin;
         mapping(address => uint) public balances;

         constructor(address _token) {
             token = _token;
             admin = msg.sender;
         }

         function buyTokens(uint amount) public {
             require(amount > 0, "Amount must be greater than 0");
             uint tokenPrice = 1 ether; // 1 token = 1 ether
             ERC20(token).transferFrom(msg.sender, address(this), amount * tokenPrice);
             balances[msg.sender] += amount;
         }

         function withdrawTokens() public {
             require(msg.sender == admin, "Only admin can withdraw tokens");
             ERC20(token).transfer(admin, ERC20(token).balanceOf(address(this)));
         }

         function withdrawEther() public {
             require(msg.sender == admin, "Only admin can withdraw ether");
             msg.sender.transfer(address(this).balance);
         }
}
<\contract_to_be_analyzed\>