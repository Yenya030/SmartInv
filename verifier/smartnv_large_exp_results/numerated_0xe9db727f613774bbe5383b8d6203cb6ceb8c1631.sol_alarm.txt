<\contract\>
contract PaymentProcessor {
         address public admin;
         mapping(address => uint256) public balances; 
         IERC20 public token;

         constructor(IERC20 _token) {
             admin = msg.sender;
             token = _token; 
         }

         function deposit(uint256 amount) public {
             require(token.transferFrom(msg.sender, address(this), amount), "Transfer failed");
             balances[msg.sender] += amount;
         }

         function withdraw(uint256 amount) public {
             require(balances[msg.sender] >= amount, "Insufficient balance");
             balances[msg.sender] -= amount;
             token.transfer(msg.sender, amount);
         }

     }
<\contract\>