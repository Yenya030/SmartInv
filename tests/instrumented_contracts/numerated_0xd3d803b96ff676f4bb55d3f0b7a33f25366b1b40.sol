1 {{
2   "language": "Solidity",
3   "sources": {
4     "contracts/V0Doodles.sol": {
5       "content": "// SPDX-License-Identifier: Unlicense\n// Creatoor: Scroungy Labs\n\npragma solidity ^0.8.9;\n\n//   ____                                                          ________                                        ___\n//  /\\  _`\\                              __                       /\\_____  \\                                      /\\_ \\      __\n//  \\ \\ \\L\\ \\   __  __   _ __    ___    /\\_\\     ___       __     \\/____//'/'      __    _____    _____      __   \\//\\ \\    /\\_\\     ___\n//   \\ \\  _ <' /\\ \\/\\ \\ /\\`'__\\/' _ `\\  \\/\\ \\  /' _ `\\   /'_ `\\        //'/'     /'__`\\ /\\ '__`\\ /\\ '__`\\  /'__`\\   \\ \\ \\   \\/\\ \\  /' _ `\\\n//    \\ \\ \\L\\ \\\\ \\ \\_\\ \\\\ \\ \\/ /\\ \\/\\ \\  \\ \\ \\ /\\ \\/\\ \\ /\\ \\L\\ \\      //'/'___  /\\  __/ \\ \\ \\L\\ \\\\ \\ \\L\\ \\/\\  __/    \\_\\ \\_  \\ \\ \\ /\\ \\/\\ \\\n//     \\ \\____/ \\ \\____/ \\ \\_\\ \\ \\_\\ \\_\\  \\ \\_\\\\ \\_\\ \\_\\\\ \\____ \\     /\\_______\\\\ \\____\\ \\ \\ ,__/ \\ \\ ,__/\\ \\____\\   /\\____\\  \\ \\_\\\\ \\_\\ \\_\\\n//      \\/___/   \\/___/   \\/_/  \\/_/\\/_/   \\/_/ \\/_/\\/_/ \\/___L\\ \\    \\/_______/ \\/____/  \\ \\ \\/   \\ \\ \\/  \\/____/   \\/____/   \\/_/ \\/_/\\/_/\n//                                                         /\\____/                         \\ \\_\\    \\ \\_\\\n//                                                         \\_/__/                           \\/_/     \\/_/\n//   ____                                      __                  ____                        __                                __\n//  /\\  _`\\                                   /\\ \\__              /\\  _`\\                     /\\ \\__                            /\\ \\__\n//  \\ \\,\\L\\_\\     ___ ___       __      _ __  \\ \\ ,_\\             \\ \\ \\/\\_\\    ___     ___    \\ \\ ,_\\   _ __     __       ___   \\ \\ ,_\\    ____\n//   \\/_\\__ \\   /' __` __`\\   /'__`\\   /\\`'__\\ \\ \\ \\/              \\ \\ \\/_/_  / __`\\ /' _ `\\   \\ \\ \\/  /\\`'__\\ /'__`\\    /'___\\  \\ \\ \\/   /',__\\\n//     /\\ \\L\\ \\ /\\ \\/\\ \\/\\ \\ /\\ \\L\\.\\_ \\ \\ \\/   \\ \\ \\_              \\ \\ \\L\\ \\/\\ \\L\\ \\/\\ \\/\\ \\   \\ \\ \\_ \\ \\ \\/ /\\ \\L\\.\\_ /\\ \\__/   \\ \\ \\_ /\\__, `\\\n//     \\ `\\____\\\\ \\_\\ \\_\\ \\_\\\\ \\__/.\\_\\ \\ \\_\\    \\ \\__\\              \\ \\____/\\ \\____/\\ \\_\\ \\_\\   \\ \\__\\ \\ \\_\\ \\ \\__/.\\_\\\\ \\____\\   \\ \\__\\\\/\\____/\n//      \\/_____/ \\/_/\\/_/\\/_/ \\/__/\\/_/  \\/_/     \\/__/               \\/___/  \\/___/  \\/_/\\/_/    \\/__/  \\/_/  \\/__/\\/_/ \\/____/    \\/__/ \\/___/\n\nimport \"./@burningzeppelin/contracts/access/Ownabull.sol\";\nimport \"./@burningzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"./ERC72169420.sol\";\n\ncontract V0Doodles is ERC72169420, Ownabull {\n    mapping(address => uint256) private _numMinted;\n\n    uint256 private maxPerTx = 10;\n    uint256 private maxPerWallet = 100;\n\n    enum MintStatus {\n        PreMint,\n        Public,\n        Finished\n    }\n\n    MintStatus public mintStatus;\n\n    constructor(\n        string memory name_,\n        string memory symbol_,\n        string memory description_,\n        string memory coverImage_\n    ) ERC72169420(name_, symbol_, description_, coverImage_) {}\n\n    function reeeeeeeee(uint256 _reeeeeeeee) public onlyOwnoor {\n        _reee(_reeeeeeeee);\n    }\n\n    function changeMintStatus(MintStatus newMintStatus) public onlyOwnoor {\n        require(newMintStatus != MintStatus.PreMint, \"p\");\n        mintStatus = newMintStatus;\n    }\n\n    function preMint(address to, uint256 quantity, uint256 times) public onlyOwnoor {\n        require(mintStatus == MintStatus.PreMint, \"p\");\n        for (uint256 i = 0; i < times; i++) {\n            _safeMint(address(0), to, quantity);\n        }\n    }\n\n    function mintPublic(uint256 quantity) public {\n        require(mintStatus == MintStatus.Public, \"ms\");\n        require(quantity <= maxPerTx, \"tx\");\n        require((_numMinted[msg.sender] + quantity) <= maxPerWallet, \"w\");\n        require(totalSupply() + quantity <= maxPossibleSupply, \"s\");\n\n        _safeMint(address(0), msg.sender, quantity);\n\n        _numMinted[msg.sender] += quantity;\n        if (totalSupply() == maxPossibleSupply) {\n            mintStatus = MintStatus.Finished;\n        }\n    }\n\n    function giftMint(uint256 quantity, address to) public {\n        require(mintStatus == MintStatus.Public, \"ms\");\n        require(quantity <= maxPerTx, \"tx\");\n        require(totalSupply() + quantity <= maxPossibleSupply, \"s\");\n\n        _safeMint(msg.sender, to, quantity);\n\n        if (totalSupply() == maxPossibleSupply) {\n            mintStatus = MintStatus.Finished;\n        }\n    }\n\n    /********/\n\n    function setBaseURI(string memory baseURI_) public onlyOwnoor {\n        _setBaseURI(baseURI_);\n    }\n\n    function setPreRevealURI(string memory preRevealURI_) public onlyOwnoor {\n        _setPreRevealURI(preRevealURI_);\n    }\n\n    function contractURI() public view returns (string memory) {\n        return string(\n            abi.encodePacked(\n                \"data:application/json;utf8,{\\\"name\\\":\\\"\", name(), \"\\\",\",\n                \"\\\"description\\\":\\\"\", description, \"\\\",\",\n                \"\\\"image\\\":\\\"\", coverImage, \"\\\"}\"\n            )\n        );\n    }\n\n    /********/\n\n    event Yippee(uint256 indexed _howMuch);\n\n    receive() external payable {\n        emit Yippee(msg.value);\n    }\n\n    function withdraw() public onlyOwnoor {\n        (bool success, ) = payable(msg.sender).call{value: address(this).balance}(\"\");\n        require(success, \"F\");\n    }\n\n    function withdrawTokens(address tokenAddress) public onlyOwnoor {\n        IERC20(tokenAddress).transfer(msg.sender, IERC20(tokenAddress).balanceOf(address(this)));\n    }\n}\n\n/******************/\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
6     },
7     "contracts/ERC72169420.sol": {
8       "content": "// SPDX-License-Identifier: Unlicense\n// Creatoor: Scroungy Labs\n\npragma solidity ^0.8.9;\n\n//   ____                                                          ________                                        ___\n//  /\\  _`\\                              __                       /\\_____  \\                                      /\\_ \\      __\n//  \\ \\ \\L\\ \\   __  __   _ __    ___    /\\_\\     ___       __     \\/____//'/'      __    _____    _____      __   \\//\\ \\    /\\_\\     ___\n//   \\ \\  _ <' /\\ \\/\\ \\ /\\`'__\\/' _ `\\  \\/\\ \\  /' _ `\\   /'_ `\\        //'/'     /'__`\\ /\\ '__`\\ /\\ '__`\\  /'__`\\   \\ \\ \\   \\/\\ \\  /' _ `\\\n//    \\ \\ \\L\\ \\\\ \\ \\_\\ \\\\ \\ \\/ /\\ \\/\\ \\  \\ \\ \\ /\\ \\/\\ \\ /\\ \\L\\ \\      //'/'___  /\\  __/ \\ \\ \\L\\ \\\\ \\ \\L\\ \\/\\  __/    \\_\\ \\_  \\ \\ \\ /\\ \\/\\ \\\n//     \\ \\____/ \\ \\____/ \\ \\_\\ \\ \\_\\ \\_\\  \\ \\_\\\\ \\_\\ \\_\\\\ \\____ \\     /\\_______\\\\ \\____\\ \\ \\ ,__/ \\ \\ ,__/\\ \\____\\   /\\____\\  \\ \\_\\\\ \\_\\ \\_\\\n//      \\/___/   \\/___/   \\/_/  \\/_/\\/_/   \\/_/ \\/_/\\/_/ \\/___L\\ \\    \\/_______/ \\/____/  \\ \\ \\/   \\ \\ \\/  \\/____/   \\/____/   \\/_/ \\/_/\\/_/\n//                                                         /\\____/                         \\ \\_\\    \\ \\_\\\n//                                                         \\_/__/                           \\/_/     \\/_/\n//   ____                                      __                  ____                        __                                __\n//  /\\  _`\\                                   /\\ \\__              /\\  _`\\                     /\\ \\__                            /\\ \\__\n//  \\ \\,\\L\\_\\     ___ ___       __      _ __  \\ \\ ,_\\             \\ \\ \\/\\_\\    ___     ___    \\ \\ ,_\\   _ __     __       ___   \\ \\ ,_\\    ____\n//   \\/_\\__ \\   /' __` __`\\   /'__`\\   /\\`'__\\ \\ \\ \\/              \\ \\ \\/_/_  / __`\\ /' _ `\\   \\ \\ \\/  /\\`'__\\ /'__`\\    /'___\\  \\ \\ \\/   /',__\\\n//     /\\ \\L\\ \\ /\\ \\/\\ \\/\\ \\ /\\ \\L\\.\\_ \\ \\ \\/   \\ \\ \\_              \\ \\ \\L\\ \\/\\ \\L\\ \\/\\ \\/\\ \\   \\ \\ \\_ \\ \\ \\/ /\\ \\L\\.\\_ /\\ \\__/   \\ \\ \\_ /\\__, `\\\n//     \\ `\\____\\\\ \\_\\ \\_\\ \\_\\\\ \\__/.\\_\\ \\ \\_\\    \\ \\__\\              \\ \\____/\\ \\____/\\ \\_\\ \\_\\   \\ \\__\\ \\ \\_\\ \\ \\__/.\\_\\\\ \\____\\   \\ \\__\\\\/\\____/\n//      \\/_____/ \\/_/\\/_/\\/_/ \\/__/\\/_/  \\/_/     \\/__/               \\/___/  \\/___/  \\/_/\\/_/    \\/__/  \\/_/  \\/__/\\/_/ \\/____/    \\/__/ \\/___/\n\nimport \"./@burningzeppelin/contracts/token/ERC721/IERC721Receivoooor.sol\";\nimport \"./@burningzeppelin/contracts/token/ERC721/IERC721.sol\";\nimport \"./@burningzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\";\nimport \"./@burningzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\";\nimport \"./@burningzeppelin/contracts/utils/introspection/ERC165.sol\";\n\ncontract ERC72169420 is ERC165 {\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /********/\n\n    mapping(uint256 => address) private _ownerships;\n    mapping(address => uint256) private _balanceOf;\n\n    mapping(uint256 => address) _getApproved;\n    mapping(address => mapping(address => bool)) public _isApprovedForAll;\n\n    uint256 private _totalSupply = 0;\n\n    string private _name;\n    string private _symbol;\n    string internal description;\n    string internal coverImage;\n    address royaltyAddress;\n\n    string private _preRevealURI;\n    string private _baseURI;\n\n    uint256 public maxPossibleSupply;\n\n    /********/\n\n    constructor(\n        string memory name_,\n        string memory symbol_,\n        string memory description_,\n        string memory coverImage_\n    ) {\n        _name = name_;\n        _symbol = symbol_;\n        description = description_;\n        coverImage = coverImage_;\n    }\n\n    /********/\n\n    function _reee(uint256 _reeeee) internal {\n        maxPossibleSupply = _reeeee;\n    }\n\n    /********/\n\n    function totalSupply() public view returns (uint256) {\n        return _totalSupply;\n    }\n\n    function tokenByIndex(uint256 index) public view returns (uint256) {\n        require(index < _totalSupply, \"g\");\n        return index;\n    }\n\n    function tokenOfOwnerByIndex(address owner, uint256 index) public view returns (uint256) {\n        require(index < _balanceOf[owner], \"b\");\n\n        uint256 indexSoFar = 0;\n        address currentOwner = address(0);\n\n        for (uint256 i = 0; i < _totalSupply; i++) {\n            currentOwner = _ownerships[i] == address(0) ? currentOwner : _ownerships[i];\n            if (owner == currentOwner) {\n                if (indexSoFar == index) {\n                    return i;\n                }\n                indexSoFar++;\n            }\n        }\n        revert(\"u\");\n    }\n\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165) returns (bool) {\n        return\n        interfaceId == type(IERC721).interfaceId ||\n        interfaceId == type(IERC721Metadata).interfaceId ||\n        interfaceId == type(IERC721Enumerable).interfaceId ||\n        super.supportsInterface(interfaceId);\n    }\n\n    function balanceOf(address owner) public view returns (uint256) {\n        require(owner != address(0), \"0\");\n        return uint256(_balanceOf[owner]);\n    }\n\n    function ownerOf(uint256 tokenId) public view returns (address) {\n        require(tokenId < _totalSupply, \"t\");\n\n        for (uint256 curr = tokenId; curr >= 0; curr--) {\n            if (_ownerships[curr] != address(0)) {\n                return _ownerships[curr];\n            }\n        }\n\n        revert(\"o\");\n    }\n\n    function name() public view returns (string memory) {\n        return _name;\n    }\n\n    function symbol() public view returns (string memory) {\n        return _symbol;\n    }\n\n    function tokenURI(uint256 tokenId) public view returns (string memory) {\n        require(_exists(tokenId), \"z\");\n\n        if (bytes(_baseURI).length > 0) {\n//            return string(abi.encodePacked(_baseURI, \"/\", _toString(tokenId), \".json\"));\n            return string(abi.encodePacked(_baseURI, \"/\", _toString(tokenId)));\n        }\n        else {\n            return _preRevealURI;\n        }\n    }\n\n    function baseURI() public view virtual returns (string memory) {\n        return _baseURI;\n    }\n\n    function _setBaseURI(string memory baseURI_) internal virtual {\n        _baseURI = baseURI_;\n    }\n\n    function preRevealURI() public view virtual returns (string memory) {\n        return _preRevealURI;\n    }\n\n    function _setPreRevealURI(string memory preRevealURI_) internal virtual {\n        _preRevealURI = preRevealURI_;\n    }\n\n    function approve(address to, uint256 tokenId) public {\n        address owner = ERC72169420.ownerOf(tokenId);\n        require(to != owner, \"o\");\n        require(msg.sender == owner || _isApprovedForAll[owner][msg.sender], \"a\");\n\n        _approve(to, tokenId, owner);\n    }\n\n    function getApproved(uint256 tokenId) public view returns (address) {\n        require(_exists(tokenId), \"a\");\n\n        return _getApproved[tokenId];\n    }\n\n    function setApprovalForAll(address operator, bool approved) public {\n        require(operator != msg.sender, \"a\");\n\n        _isApprovedForAll[msg.sender][operator] = approved;\n        emit ApprovalForAll(msg.sender, operator, approved);\n    }\n\n    function isApprovedForAll(address owner, address operator) public view returns (bool) {\n        return _isApprovedForAll[owner][operator];\n    }\n\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public {\n        _transfer(from, to, tokenId);\n    }\n\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) public {\n        _transfer(from, to, tokenId);\n        require(_checkOnERC721Received(from, to, tokenId, _data), \"z\");\n    }\n\n    function _safeMint(address from, address to, uint256 quantity) internal {\n        _safeMint(from, to, quantity, \"\");\n    }\n\n    function _safeMint(\n        address from,\n        address to,\n        uint256 quantity,\n        bytes memory _data\n    ) internal {\n        _mint(from, to, quantity);\n        require(_checkOnERC721Received(address(0), to, _totalSupply - 1, _data), \"z\");\n    }\n\n    function _mint(address from, address to, uint256 quantity) internal {\n        uint256 startTokenId = _totalSupply;\n        require(to != address(0), \"0\");\n        // We know if the first token in the batch doesn't exist, the other ones don't as well, because of serial ordering.\n        require(!_exists(startTokenId), \"a\");\n\n        _balanceOf[to] += quantity;\n        _ownerships[startTokenId] = to;\n\n        uint256 updatedIndex = startTokenId;\n\n        for (uint256 i = 0; i < quantity; i++) {\n            if (from != address(0)) {\n                emit Transfer(address(0), from, updatedIndex);\n            }\n            emit Transfer(from, to, updatedIndex);\n            updatedIndex++;\n        }\n\n        _totalSupply = updatedIndex;\n    }\n\n    /********/\n\n    function _exists(uint256 tokenId) internal view returns (bool) {\n        return tokenId < _totalSupply;\n    }\n\n    function _approve(\n        address to,\n        uint256 tokenId,\n        address owner\n    ) private {\n        _getApproved[tokenId] = to;\n        emit Approval(owner, to, tokenId);\n    }\n\n    function _transfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) private {\n        address prevOwnership = ownerOf(tokenId);\n\n        bool isApprovedOrOwner = (msg.sender == prevOwnership ||\n        getApproved(tokenId) == msg.sender ||\n        isApprovedForAll(prevOwnership, msg.sender));\n\n        require(isApprovedOrOwner, \"a\");\n\n        require(prevOwnership == from, \"o\");\n        require(to != address(0), \"0\");\n\n        // Clear approvals from the previous owner\n        _approve(address(0), tokenId, prevOwnership);\n\n        _balanceOf[from] -= 1;\n        _balanceOf[to] += 1;\n        _ownerships[tokenId] = to;\n\n        // If the ownership slot of tokenId+1 is not explicitly set, that means the transfer initiator owns it.\n        // Set the slot of tokenId+1 explicitly in storage to maintain correctness for ownerOf(tokenId+1) calls.\n        uint256 nextTokenId = tokenId + 1;\n        if (_ownerships[nextTokenId] == address(0)) {\n            if (_exists(nextTokenId)) {\n                _ownerships[nextTokenId] = prevOwnership;\n            }\n        }\n\n        emit Transfer(from, to, tokenId);\n    }\n\n    function _checkOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) private returns (bool) {\n        if (to.code.length > 0) {\n            try IERC721Receivoooor(to).onERC721Received(msg.sender, from, tokenId, _data) returns (bytes4 retval) {\n                return retval == IERC721Receivoooor(to).onERC721Received.selector;\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert(\"z\");\n                } else {\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        } else {\n            return true;\n        }\n    }\n\n    function _toString(uint256 value) private pure returns (string memory) {\n        // Inspired by OraclizeAPI's implementation - MIT licence\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\n\n        if (value == 0) {\n            return \"0\";\n        }\n        uint256 temp = value;\n        uint256 digits;\n        while (temp != 0) {\n            digits++;\n            temp /= 10;\n        }\n        bytes memory buffer = new bytes(digits);\n        while (value != 0) {\n            digits -= 1;\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\n            value /= 10;\n        }\n        return string(buffer);\n    }\n}\n\n/******************/\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
9     },
10     "contracts/@burningzeppelin/contracts/access/Ownabull.sol": {
11       "content": "// SPDX-License-Identifier: Unlicense\n// Creator: Scroungy Labs\n\npragma solidity ^0.8.9;\n\n//   ____                                                          ________                                        ___\n//  /\\  _`\\                              __                       /\\_____  \\                                      /\\_ \\      __\n//  \\ \\ \\L\\ \\   __  __   _ __    ___    /\\_\\     ___       __     \\/____//'/'      __    _____    _____      __   \\//\\ \\    /\\_\\     ___\n//   \\ \\  _ <' /\\ \\/\\ \\ /\\`'__\\/' _ `\\  \\/\\ \\  /' _ `\\   /'_ `\\        //'/'     /'__`\\ /\\ '__`\\ /\\ '__`\\  /'__`\\   \\ \\ \\   \\/\\ \\  /' _ `\\\n//    \\ \\ \\L\\ \\\\ \\ \\_\\ \\\\ \\ \\/ /\\ \\/\\ \\  \\ \\ \\ /\\ \\/\\ \\ /\\ \\L\\ \\      //'/'___  /\\  __/ \\ \\ \\L\\ \\\\ \\ \\L\\ \\/\\  __/    \\_\\ \\_  \\ \\ \\ /\\ \\/\\ \\\n//     \\ \\____/ \\ \\____/ \\ \\_\\ \\ \\_\\ \\_\\  \\ \\_\\\\ \\_\\ \\_\\\\ \\____ \\     /\\_______\\\\ \\____\\ \\ \\ ,__/ \\ \\ ,__/\\ \\____\\   /\\____\\  \\ \\_\\\\ \\_\\ \\_\\\n//      \\/___/   \\/___/   \\/_/  \\/_/\\/_/   \\/_/ \\/_/\\/_/ \\/___L\\ \\    \\/_______/ \\/____/  \\ \\ \\/   \\ \\ \\/  \\/____/   \\/____/   \\/_/ \\/_/\\/_/\n//                                                         /\\____/                         \\ \\_\\    \\ \\_\\\n//                                                         \\_/__/                           \\/_/     \\/_/\n//   ____                                      __                  ____                        __                                __\n//  /\\  _`\\                                   /\\ \\__              /\\  _`\\                     /\\ \\__                            /\\ \\__\n//  \\ \\,\\L\\_\\     ___ ___       __      _ __  \\ \\ ,_\\             \\ \\ \\/\\_\\    ___     ___    \\ \\ ,_\\   _ __     __       ___   \\ \\ ,_\\    ____\n//   \\/_\\__ \\   /' __` __`\\   /'__`\\   /\\`'__\\ \\ \\ \\/              \\ \\ \\/_/_  / __`\\ /' _ `\\   \\ \\ \\/  /\\`'__\\ /'__`\\    /'___\\  \\ \\ \\/   /',__\\\n//     /\\ \\L\\ \\ /\\ \\/\\ \\/\\ \\ /\\ \\L\\.\\_ \\ \\ \\/   \\ \\ \\_              \\ \\ \\L\\ \\/\\ \\L\\ \\/\\ \\/\\ \\   \\ \\ \\_ \\ \\ \\/ /\\ \\L\\.\\_ /\\ \\__/   \\ \\ \\_ /\\__, `\\\n//     \\ `\\____\\\\ \\_\\ \\_\\ \\_\\\\ \\__/.\\_\\ \\ \\_\\    \\ \\__\\              \\ \\____/\\ \\____/\\ \\_\\ \\_\\   \\ \\__\\ \\ \\_\\ \\ \\__/.\\_\\\\ \\____\\   \\ \\__\\\\/\\____/\n//      \\/_____/ \\/_/\\/_/\\/_/ \\/__/\\/_/  \\/_/     \\/__/               \\/___/  \\/___/  \\/_/\\/_/    \\/__/  \\/_/  \\/__/\\/_/ \\/____/    \\/__/ \\/___/\n\ncontract Ownabull {\n    address public ownoor;\n\n    modifier onlyOwnoor() {\n        _isOwnoor();\n        _;\n    }\n    function _isOwnoor() internal view virtual {\n        require(msg.sender == ownoor, \"oo\");\n    }\n\n    constructor() {\n        ownoor = msg.sender;\n    }\n\n    function transferOwnoorship(address newOwnoor) public onlyOwnoor {\n        ownoor = newOwnoor;\n    }\n\n    function renounceOwnoorship() public onlyOwnoor {\n        ownoor = address(0);\n    }\n}\n"
12     },
13     "contracts/@burningzeppelin/contracts/token/ERC20/IERC20.sol": {
14       "content": "// SPDX-License-Identifier: Unlicense\n// Creatoor: Scroungy Labs\n// BurningZeppelin Contracts (last updated v0.0.1) (token/ERC20/IERC20.sol)\n\npragma solidity 0.8.9;\n\n//   ____                                                          ________                                        ___\n//  /\\  _`\\                              __                       /\\_____  \\                                      /\\_ \\      __\n//  \\ \\ \\L\\ \\   __  __   _ __    ___    /\\_\\     ___       __     \\/____//'/'      __    _____    _____      __   \\//\\ \\    /\\_\\     ___\n//   \\ \\  _ <' /\\ \\/\\ \\ /\\`'__\\/' _ `\\  \\/\\ \\  /' _ `\\   /'_ `\\        //'/'     /'__`\\ /\\ '__`\\ /\\ '__`\\  /'__`\\   \\ \\ \\   \\/\\ \\  /' _ `\\\n//    \\ \\ \\L\\ \\\\ \\ \\_\\ \\\\ \\ \\/ /\\ \\/\\ \\  \\ \\ \\ /\\ \\/\\ \\ /\\ \\L\\ \\      //'/'___  /\\  __/ \\ \\ \\L\\ \\\\ \\ \\L\\ \\/\\  __/    \\_\\ \\_  \\ \\ \\ /\\ \\/\\ \\\n//     \\ \\____/ \\ \\____/ \\ \\_\\ \\ \\_\\ \\_\\  \\ \\_\\\\ \\_\\ \\_\\\\ \\____ \\     /\\_______\\\\ \\____\\ \\ \\ ,__/ \\ \\ ,__/\\ \\____\\   /\\____\\  \\ \\_\\\\ \\_\\ \\_\\\n//      \\/___/   \\/___/   \\/_/  \\/_/\\/_/   \\/_/ \\/_/\\/_/ \\/___L\\ \\    \\/_______/ \\/____/  \\ \\ \\/   \\ \\ \\/  \\/____/   \\/____/   \\/_/ \\/_/\\/_/\n//                                                         /\\____/                         \\ \\_\\    \\ \\_\\\n//                                                         \\_/__/                           \\/_/     \\/_/\n//   ____                                      __                  ____                        __                                __\n//  /\\  _`\\                                   /\\ \\__              /\\  _`\\                     /\\ \\__                            /\\ \\__\n//  \\ \\,\\L\\_\\     ___ ___       __      _ __  \\ \\ ,_\\             \\ \\ \\/\\_\\    ___     ___    \\ \\ ,_\\   _ __     __       ___   \\ \\ ,_\\    ____\n//   \\/_\\__ \\   /' __` __`\\   /'__`\\   /\\`'__\\ \\ \\ \\/              \\ \\ \\/_/_  / __`\\ /' _ `\\   \\ \\ \\/  /\\`'__\\ /'__`\\    /'___\\  \\ \\ \\/   /',__\\\n//     /\\ \\L\\ \\ /\\ \\/\\ \\/\\ \\ /\\ \\L\\.\\_ \\ \\ \\/   \\ \\ \\_              \\ \\ \\L\\ \\/\\ \\L\\ \\/\\ \\/\\ \\   \\ \\ \\_ \\ \\ \\/ /\\ \\L\\.\\_ /\\ \\__/   \\ \\ \\_ /\\__, `\\\n//     \\ `\\____\\\\ \\_\\ \\_\\ \\_\\\\ \\__/.\\_\\ \\ \\_\\    \\ \\__\\              \\ \\____/\\ \\____/\\ \\_\\ \\_\\   \\ \\__\\ \\ \\_\\ \\ \\__/.\\_\\\\ \\____\\   \\ \\__\\\\/\\____/\n//      \\/_____/ \\/_/\\/_/\\/_/ \\/__/\\/_/  \\/_/     \\/__/               \\/___/  \\/___/  \\/_/\\/_/    \\/__/  \\/_/  \\/__/\\/_/ \\/____/    \\/__/ \\/___/\n\ninterface IERC20 {\n    event Transfer(address indexed from, address indexed to, uint256 value);\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    function totalSupply() external view returns (uint256);\n    function balanceOf(address account) external view returns (uint256);\n    function transfer(address to, uint256 amount) external returns (bool);\n    function allowance(address owner, address spender) external view returns (uint256);\n    function approve(address spender, uint256 amount) external returns (bool);\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
15     },
16     "contracts/@burningzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol": {
17       "content": "// SPDX-License-Identifier: Unlicense\n// Creatoor: Scroungy Labs\n// BurningZeppelin Contracts (last updated v0.0.1) (token/ERC721/extensions/IERC721Enumerable.sol)\n\npragma solidity 0.8.9;\n\n//   ____                                                          ________                                        ___\n//  /\\  _`\\                              __                       /\\_____  \\                                      /\\_ \\      __\n//  \\ \\ \\L\\ \\   __  __   _ __    ___    /\\_\\     ___       __     \\/____//'/'      __    _____    _____      __   \\//\\ \\    /\\_\\     ___\n//   \\ \\  _ <' /\\ \\/\\ \\ /\\`'__\\/' _ `\\  \\/\\ \\  /' _ `\\   /'_ `\\        //'/'     /'__`\\ /\\ '__`\\ /\\ '__`\\  /'__`\\   \\ \\ \\   \\/\\ \\  /' _ `\\\n//    \\ \\ \\L\\ \\\\ \\ \\_\\ \\\\ \\ \\/ /\\ \\/\\ \\  \\ \\ \\ /\\ \\/\\ \\ /\\ \\L\\ \\      //'/'___  /\\  __/ \\ \\ \\L\\ \\\\ \\ \\L\\ \\/\\  __/    \\_\\ \\_  \\ \\ \\ /\\ \\/\\ \\\n//     \\ \\____/ \\ \\____/ \\ \\_\\ \\ \\_\\ \\_\\  \\ \\_\\\\ \\_\\ \\_\\\\ \\____ \\     /\\_______\\\\ \\____\\ \\ \\ ,__/ \\ \\ ,__/\\ \\____\\   /\\____\\  \\ \\_\\\\ \\_\\ \\_\\\n//      \\/___/   \\/___/   \\/_/  \\/_/\\/_/   \\/_/ \\/_/\\/_/ \\/___L\\ \\    \\/_______/ \\/____/  \\ \\ \\/   \\ \\ \\/  \\/____/   \\/____/   \\/_/ \\/_/\\/_/\n//                                                         /\\____/                         \\ \\_\\    \\ \\_\\\n//                                                         \\_/__/                           \\/_/     \\/_/\n//   ____                                      __                  ____                        __                                __\n//  /\\  _`\\                                   /\\ \\__              /\\  _`\\                     /\\ \\__                            /\\ \\__\n//  \\ \\,\\L\\_\\     ___ ___       __      _ __  \\ \\ ,_\\             \\ \\ \\/\\_\\    ___     ___    \\ \\ ,_\\   _ __     __       ___   \\ \\ ,_\\    ____\n//   \\/_\\__ \\   /' __` __`\\   /'__`\\   /\\`'__\\ \\ \\ \\/              \\ \\ \\/_/_  / __`\\ /' _ `\\   \\ \\ \\/  /\\`'__\\ /'__`\\    /'___\\  \\ \\ \\/   /',__\\\n//     /\\ \\L\\ \\ /\\ \\/\\ \\/\\ \\ /\\ \\L\\.\\_ \\ \\ \\/   \\ \\ \\_              \\ \\ \\L\\ \\/\\ \\L\\ \\/\\ \\/\\ \\   \\ \\ \\_ \\ \\ \\/ /\\ \\L\\.\\_ /\\ \\__/   \\ \\ \\_ /\\__, `\\\n//     \\ `\\____\\\\ \\_\\ \\_\\ \\_\\\\ \\__/.\\_\\ \\ \\_\\    \\ \\__\\              \\ \\____/\\ \\____/\\ \\_\\ \\_\\   \\ \\__\\ \\ \\_\\ \\ \\__/.\\_\\\\ \\____\\   \\ \\__\\\\/\\____/\n//      \\/_____/ \\/_/\\/_/\\/_/ \\/__/\\/_/  \\/_/     \\/__/               \\/___/  \\/___/  \\/_/\\/_/    \\/__/  \\/_/  \\/__/\\/_/ \\/____/    \\/__/ \\/___/\n\nimport \"../IERC721.sol\";\n\ninterface IERC721Enumerable is IERC721 {\n    function totalSupply() external view returns (uint256);\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256);\n    function tokenByIndex(uint256 index) external view returns (uint256);\n}\n"
18     },
19     "contracts/@burningzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
20       "content": "// SPDX-License-Identifier: Unlicense\n// Creatoor: Scroungy Labs\n// BurningZeppelin Contracts v0.0.1 (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity 0.8.9;\n\n//   ____                                                          ________                                        ___\n//  /\\  _`\\                              __                       /\\_____  \\                                      /\\_ \\      __\n//  \\ \\ \\L\\ \\   __  __   _ __    ___    /\\_\\     ___       __     \\/____//'/'      __    _____    _____      __   \\//\\ \\    /\\_\\     ___\n//   \\ \\  _ <' /\\ \\/\\ \\ /\\`'__\\/' _ `\\  \\/\\ \\  /' _ `\\   /'_ `\\        //'/'     /'__`\\ /\\ '__`\\ /\\ '__`\\  /'__`\\   \\ \\ \\   \\/\\ \\  /' _ `\\\n//    \\ \\ \\L\\ \\\\ \\ \\_\\ \\\\ \\ \\/ /\\ \\/\\ \\  \\ \\ \\ /\\ \\/\\ \\ /\\ \\L\\ \\      //'/'___  /\\  __/ \\ \\ \\L\\ \\\\ \\ \\L\\ \\/\\  __/    \\_\\ \\_  \\ \\ \\ /\\ \\/\\ \\\n//     \\ \\____/ \\ \\____/ \\ \\_\\ \\ \\_\\ \\_\\  \\ \\_\\\\ \\_\\ \\_\\\\ \\____ \\     /\\_______\\\\ \\____\\ \\ \\ ,__/ \\ \\ ,__/\\ \\____\\   /\\____\\  \\ \\_\\\\ \\_\\ \\_\\\n//      \\/___/   \\/___/   \\/_/  \\/_/\\/_/   \\/_/ \\/_/\\/_/ \\/___L\\ \\    \\/_______/ \\/____/  \\ \\ \\/   \\ \\ \\/  \\/____/   \\/____/   \\/_/ \\/_/\\/_/\n//                                                         /\\____/                         \\ \\_\\    \\ \\_\\\n//                                                         \\_/__/                           \\/_/     \\/_/\n//   ____                                      __                  ____                        __                                __\n//  /\\  _`\\                                   /\\ \\__              /\\  _`\\                     /\\ \\__                            /\\ \\__\n//  \\ \\,\\L\\_\\     ___ ___       __      _ __  \\ \\ ,_\\             \\ \\ \\/\\_\\    ___     ___    \\ \\ ,_\\   _ __     __       ___   \\ \\ ,_\\    ____\n//   \\/_\\__ \\   /' __` __`\\   /'__`\\   /\\`'__\\ \\ \\ \\/              \\ \\ \\/_/_  / __`\\ /' _ `\\   \\ \\ \\/  /\\`'__\\ /'__`\\    /'___\\  \\ \\ \\/   /',__\\\n//     /\\ \\L\\ \\ /\\ \\/\\ \\/\\ \\ /\\ \\L\\.\\_ \\ \\ \\/   \\ \\ \\_              \\ \\ \\L\\ \\/\\ \\L\\ \\/\\ \\/\\ \\   \\ \\ \\_ \\ \\ \\/ /\\ \\L\\.\\_ /\\ \\__/   \\ \\ \\_ /\\__, `\\\n//     \\ `\\____\\\\ \\_\\ \\_\\ \\_\\\\ \\__/.\\_\\ \\ \\_\\    \\ \\__\\              \\ \\____/\\ \\____/\\ \\_\\ \\_\\   \\ \\__\\ \\ \\_\\ \\ \\__/.\\_\\\\ \\____\\   \\ \\__\\\\/\\____/\n//      \\/_____/ \\/_/\\/_/\\/_/ \\/__/\\/_/  \\/_/     \\/__/               \\/___/  \\/___/  \\/_/\\/_/    \\/__/  \\/_/  \\/__/\\/_/ \\/____/    \\/__/ \\/___/\n\nimport \"../IERC721.sol\";\n\ninterface IERC721Metadata is IERC721 {\n    function name() external view returns (string memory);\n    function symbol() external view returns (string memory);\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n\n/******************/\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
21     },
22     "contracts/@burningzeppelin/contracts/utils/introspection/ERC165.sol": {
23       "content": "// SPDX-License-Identifier: Unlicense\n// Creator: Scroungy Labs\n// BurningZeppelin Contracts v0.0.1 (utils/introspection/ERC165.sol)\n\npragma solidity 0.8.9;\n\n//   ____                                                          ________                                        ___\n//  /\\  _`\\                              __                       /\\_____  \\                                      /\\_ \\      __\n//  \\ \\ \\L\\ \\   __  __   _ __    ___    /\\_\\     ___       __     \\/____//'/'      __    _____    _____      __   \\//\\ \\    /\\_\\     ___\n//   \\ \\  _ <' /\\ \\/\\ \\ /\\`'__\\/' _ `\\  \\/\\ \\  /' _ `\\   /'_ `\\        //'/'     /'__`\\ /\\ '__`\\ /\\ '__`\\  /'__`\\   \\ \\ \\   \\/\\ \\  /' _ `\\\n//    \\ \\ \\L\\ \\\\ \\ \\_\\ \\\\ \\ \\/ /\\ \\/\\ \\  \\ \\ \\ /\\ \\/\\ \\ /\\ \\L\\ \\      //'/'___  /\\  __/ \\ \\ \\L\\ \\\\ \\ \\L\\ \\/\\  __/    \\_\\ \\_  \\ \\ \\ /\\ \\/\\ \\\n//     \\ \\____/ \\ \\____/ \\ \\_\\ \\ \\_\\ \\_\\  \\ \\_\\\\ \\_\\ \\_\\\\ \\____ \\     /\\_______\\\\ \\____\\ \\ \\ ,__/ \\ \\ ,__/\\ \\____\\   /\\____\\  \\ \\_\\\\ \\_\\ \\_\\\n//      \\/___/   \\/___/   \\/_/  \\/_/\\/_/   \\/_/ \\/_/\\/_/ \\/___L\\ \\    \\/_______/ \\/____/  \\ \\ \\/   \\ \\ \\/  \\/____/   \\/____/   \\/_/ \\/_/\\/_/\n//                                                         /\\____/                         \\ \\_\\    \\ \\_\\\n//                                                         \\_/__/                           \\/_/     \\/_/\n//   ____                                      __                  ____                        __                                __\n//  /\\  _`\\                                   /\\ \\__              /\\  _`\\                     /\\ \\__                            /\\ \\__\n//  \\ \\,\\L\\_\\     ___ ___       __      _ __  \\ \\ ,_\\             \\ \\ \\/\\_\\    ___     ___    \\ \\ ,_\\   _ __     __       ___   \\ \\ ,_\\    ____\n//   \\/_\\__ \\   /' __` __`\\   /'__`\\   /\\`'__\\ \\ \\ \\/              \\ \\ \\/_/_  / __`\\ /' _ `\\   \\ \\ \\/  /\\`'__\\ /'__`\\    /'___\\  \\ \\ \\/   /',__\\\n//     /\\ \\L\\ \\ /\\ \\/\\ \\/\\ \\ /\\ \\L\\.\\_ \\ \\ \\/   \\ \\ \\_              \\ \\ \\L\\ \\/\\ \\L\\ \\/\\ \\/\\ \\   \\ \\ \\_ \\ \\ \\/ /\\ \\L\\.\\_ /\\ \\__/   \\ \\ \\_ /\\__, `\\\n//     \\ `\\____\\\\ \\_\\ \\_\\ \\_\\\\ \\__/.\\_\\ \\ \\_\\    \\ \\__\\              \\ \\____/\\ \\____/\\ \\_\\ \\_\\   \\ \\__\\ \\ \\_\\ \\ \\__/.\\_\\\\ \\____\\   \\ \\__\\\\/\\____/\n//      \\/_____/ \\/_/\\/_/\\/_/ \\/__/\\/_/  \\/_/     \\/__/               \\/___/  \\/___/  \\/_/\\/_/    \\/__/  \\/_/  \\/__/\\/_/ \\/____/    \\/__/ \\/___/\n\nimport \"./IERC165.sol\";\n\nabstract contract ERC165 is IERC165 {\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
24     },
25     "contracts/@burningzeppelin/contracts/token/ERC721/IERC721.sol": {
26       "content": "// SPDX-License-Identifier: Unlicense\n// Creatoor: Scroungy Labs\n// BurningZeppelin Contracts (last updated v0.0.1) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.9;\n\n//   ____                                                          ________                                        ___\n//  /\\  _`\\                              __                       /\\_____  \\                                      /\\_ \\      __\n//  \\ \\ \\L\\ \\   __  __   _ __    ___    /\\_\\     ___       __     \\/____//'/'      __    _____    _____      __   \\//\\ \\    /\\_\\     ___\n//   \\ \\  _ <' /\\ \\/\\ \\ /\\`'__\\/' _ `\\  \\/\\ \\  /' _ `\\   /'_ `\\        //'/'     /'__`\\ /\\ '__`\\ /\\ '__`\\  /'__`\\   \\ \\ \\   \\/\\ \\  /' _ `\\\n//    \\ \\ \\L\\ \\\\ \\ \\_\\ \\\\ \\ \\/ /\\ \\/\\ \\  \\ \\ \\ /\\ \\/\\ \\ /\\ \\L\\ \\      //'/'___  /\\  __/ \\ \\ \\L\\ \\\\ \\ \\L\\ \\/\\  __/    \\_\\ \\_  \\ \\ \\ /\\ \\/\\ \\\n//     \\ \\____/ \\ \\____/ \\ \\_\\ \\ \\_\\ \\_\\  \\ \\_\\\\ \\_\\ \\_\\\\ \\____ \\     /\\_______\\\\ \\____\\ \\ \\ ,__/ \\ \\ ,__/\\ \\____\\   /\\____\\  \\ \\_\\\\ \\_\\ \\_\\\n//      \\/___/   \\/___/   \\/_/  \\/_/\\/_/   \\/_/ \\/_/\\/_/ \\/___L\\ \\    \\/_______/ \\/____/  \\ \\ \\/   \\ \\ \\/  \\/____/   \\/____/   \\/_/ \\/_/\\/_/\n//                                                         /\\____/                         \\ \\_\\    \\ \\_\\\n//                                                         \\_/__/                           \\/_/     \\/_/\n//   ____                                      __                  ____                        __                                __\n//  /\\  _`\\                                   /\\ \\__              /\\  _`\\                     /\\ \\__                            /\\ \\__\n//  \\ \\,\\L\\_\\     ___ ___       __      _ __  \\ \\ ,_\\             \\ \\ \\/\\_\\    ___     ___    \\ \\ ,_\\   _ __     __       ___   \\ \\ ,_\\    ____\n//   \\/_\\__ \\   /' __` __`\\   /'__`\\   /\\`'__\\ \\ \\ \\/              \\ \\ \\/_/_  / __`\\ /' _ `\\   \\ \\ \\/  /\\`'__\\ /'__`\\    /'___\\  \\ \\ \\/   /',__\\\n//     /\\ \\L\\ \\ /\\ \\/\\ \\/\\ \\ /\\ \\L\\.\\_ \\ \\ \\/   \\ \\ \\_              \\ \\ \\L\\ \\/\\ \\L\\ \\/\\ \\/\\ \\   \\ \\ \\_ \\ \\ \\/ /\\ \\L\\.\\_ /\\ \\__/   \\ \\ \\_ /\\__, `\\\n//     \\ `\\____\\\\ \\_\\ \\_\\ \\_\\\\ \\__/.\\_\\ \\ \\_\\    \\ \\__\\              \\ \\____/\\ \\____/\\ \\_\\ \\_\\   \\ \\__\\ \\ \\_\\ \\ \\__/.\\_\\\\ \\____\\   \\ \\__\\\\/\\____/\n//      \\/_____/ \\/_/\\/_/\\/_/ \\/__/\\/_/  \\/_/     \\/__/               \\/___/  \\/___/  \\/_/\\/_/    \\/__/  \\/_/  \\/__/\\/_/ \\/____/    \\/__/ \\/___/\n\nimport \"../../utils/introspection/IERC165.sol\";\n\ninterface IERC721 is IERC165 {\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    function balanceOf(address owner) external view returns (uint256 balance);\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n    function approve(address to, uint256 tokenId) external;\n    function setApprovalForAll(address operator, bool _approved) external;\n    function getApproved(uint256 tokenId) external view returns (address operator);\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n\n/******************/\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
27     },
28     "contracts/@burningzeppelin/contracts/token/ERC721/IERC721Receivoooor.sol": {
29       "content": "// SPDX-License-Identifier: Unlicense\n// Creator: Scroungy Labs\n// BurningZeppelin Contracts (last updated v-0.0.1) (token/ERC721/IERC721Receivoooor.sol)\n\npragma solidity ^0.8.9;\n\ninterface IERC721Receivoooor {\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n\n/******************/\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
30     },
31     "contracts/@burningzeppelin/contracts/utils/introspection/IERC165.sol": {
32       "content": "// SPDX-License-Identifier: Unlicense\n// Creator: Scroungy Labs\n// BurningZeppelin Contracts v0.0.1 (utils/introspection/IERC165.sol)\n\npragma solidity 0.8.9;\n\n//   ____                                                          ________                                        ___\n//  /\\  _`\\                              __                       /\\_____  \\                                      /\\_ \\      __\n//  \\ \\ \\L\\ \\   __  __   _ __    ___    /\\_\\     ___       __     \\/____//'/'      __    _____    _____      __   \\//\\ \\    /\\_\\     ___\n//   \\ \\  _ <' /\\ \\/\\ \\ /\\`'__\\/' _ `\\  \\/\\ \\  /' _ `\\   /'_ `\\        //'/'     /'__`\\ /\\ '__`\\ /\\ '__`\\  /'__`\\   \\ \\ \\   \\/\\ \\  /' _ `\\\n//    \\ \\ \\L\\ \\\\ \\ \\_\\ \\\\ \\ \\/ /\\ \\/\\ \\  \\ \\ \\ /\\ \\/\\ \\ /\\ \\L\\ \\      //'/'___  /\\  __/ \\ \\ \\L\\ \\\\ \\ \\L\\ \\/\\  __/    \\_\\ \\_  \\ \\ \\ /\\ \\/\\ \\\n//     \\ \\____/ \\ \\____/ \\ \\_\\ \\ \\_\\ \\_\\  \\ \\_\\\\ \\_\\ \\_\\\\ \\____ \\     /\\_______\\\\ \\____\\ \\ \\ ,__/ \\ \\ ,__/\\ \\____\\   /\\____\\  \\ \\_\\\\ \\_\\ \\_\\\n//      \\/___/   \\/___/   \\/_/  \\/_/\\/_/   \\/_/ \\/_/\\/_/ \\/___L\\ \\    \\/_______/ \\/____/  \\ \\ \\/   \\ \\ \\/  \\/____/   \\/____/   \\/_/ \\/_/\\/_/\n//                                                         /\\____/                         \\ \\_\\    \\ \\_\\\n//                                                         \\_/__/                           \\/_/     \\/_/\n//   ____                                      __                  ____                        __                                __\n//  /\\  _`\\                                   /\\ \\__              /\\  _`\\                     /\\ \\__                            /\\ \\__\n//  \\ \\,\\L\\_\\     ___ ___       __      _ __  \\ \\ ,_\\             \\ \\ \\/\\_\\    ___     ___    \\ \\ ,_\\   _ __     __       ___   \\ \\ ,_\\    ____\n//   \\/_\\__ \\   /' __` __`\\   /'__`\\   /\\`'__\\ \\ \\ \\/              \\ \\ \\/_/_  / __`\\ /' _ `\\   \\ \\ \\/  /\\`'__\\ /'__`\\    /'___\\  \\ \\ \\/   /',__\\\n//     /\\ \\L\\ \\ /\\ \\/\\ \\/\\ \\ /\\ \\L\\.\\_ \\ \\ \\/   \\ \\ \\_              \\ \\ \\L\\ \\/\\ \\L\\ \\/\\ \\/\\ \\   \\ \\ \\_ \\ \\ \\/ /\\ \\L\\.\\_ /\\ \\__/   \\ \\ \\_ /\\__, `\\\n//     \\ `\\____\\\\ \\_\\ \\_\\ \\_\\\\ \\__/.\\_\\ \\ \\_\\    \\ \\__\\              \\ \\____/\\ \\____/\\ \\_\\ \\_\\   \\ \\__\\ \\ \\_\\ \\ \\__/.\\_\\\\ \\____\\   \\ \\__\\\\/\\____/\n//      \\/_____/ \\/_/\\/_/\\/_/ \\/__/\\/_/  \\/_/     \\/__/               \\/___/  \\/___/  \\/_/\\/_/    \\/__/  \\/_/  \\/__/\\/_/ \\/____/    \\/__/ \\/___/\n\ninterface IERC165 {\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n\n/******************/\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
33     }
34   },
35   "settings": {
36     "optimizer": {
37       "enabled": false,
38       "runs": 200
39     },
40     "outputSelection": {
41       "*": {
42         "*": [
43           "evm.bytecode",
44           "evm.deployedBytecode",
45           "devdoc",
46           "userdoc",
47           "metadata",
48           "abi"
49         ]
50       }
51     },
52     "libraries": {}
53   }
54 }}