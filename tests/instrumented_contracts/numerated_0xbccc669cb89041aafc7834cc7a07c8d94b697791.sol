1 {{
2   "language": "Solidity",
3   "sources": {
4     "ying/YING.sol": {
5       "content": "// SPDX-License-Identifier: MIT\n/*\n+ + + - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - + + +\n+                                                                                                                 +\n+                                                                                                                 +\n.                        .^!!~:                                                 .^!!^.                            .\n.                            :7Y5Y7^.                                       .^!J5Y7^.                             .\n.                              :!5B#GY7^.                             .^!JP##P7:                                  .\n.   7777??!         ~????7.        :5@@@@&GY7^.                    .^!JG#@@@@G^        7????????????^ ~????77     .\n.   @@@@@G          P@@@@@:       J#@@@@@@@@@@&G57~.          .^7YG#@@@@@@@@@@&5:      #@@@@@@@@@@@@@? P@@@@@@    .\n.   @@@@@G          5@@@@@:     :B@@@@@BJG@@@@@@@@@&B5?~:^7YG#@@@@@@@@BJP@@@ @@&!!     #@@@@@@@@@@@@@? P@@@@@@    .\n.   @@@@@G          5@@@@@:    .B@@@@#!!J@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@P   ^G@@@@@~.   ^~~~~~^J@ @@@@??:~~~~~    .\n.   @@@@@B^^^^^^^^. 5@@@@@:   J@@@@&^   G@7?@@@@@@&@@@@@@@@@@@&@J7&@@@@@#.   .B@@@@P           !@@@@@?            .\n.   @@@@@@@@@@@@@@! 5@@@@@:   5@@@@B   ^B&&@@@@@#!#@@@@@@@@@@7G&&@@@@@#!     Y@@@@#.           !@@@@@?            .\n.   @@@@@@@@@@@@@@! P@@@@@:   ?@@@@&^    !YPGPY!  !@@@@@Y&@@@@Y  ~YPGP57.    .B@@@@P           !@@@@@?            .\n.   @@@@@B~~~~~~~!!.?GPPGP:   .B@@@@&7           ?&@@@@P ?@@@@@5.          ~B@@@@&^            !@@@@@?            .\n.   @@@@@G          ^~~~~~.    :G@@@@@BY7~^^~75#@@@@@5.    J@@@@@&P?~^^^!JG@@@@@#~             !@@@@@?            .\n.   @@@@@G          5@@@@@:      ?B@@@@@@@@@@@@@@@@B!!      ^P@@@@@@@@@@@@@@@@&Y               !@@@@@?            .\n.   @@@@@G.         P@@@@@:        !YB&@@@@@@@@&BY~           ^JG#@@@@@@@@&#P7.                !@@@@@?            .\n.   YYYYY7          !YJJJJ.            :~!7??7!^:                 .^!7??7!~:                   ^YJJJY~            .\n.                                                                                                                 .\n.                                                                                                                 .\n.                                                                                                                 .\n.                                  ………………               …………………………………………                  …………………………………………        .\n.   PBGGB??                      7&######&5            :B##############&5               .G#################^      .\n.   &@@@@5                      ?@@@@@@@@@@           :@@@@@@@@@@@@@@@@@G               &@@@@@@@@@@@@ @@@@@^      .\n.   PBBBBJ                 !!!!!JPPPPPPPPPY !!!!!     :&@@@@P?JJJJJJJJJJJJJJ?      :JJJJJJJJJJJJJJJJJJJJJJ.       .\n.   ~~~~~:                .#@@@@Y          ~@@@@@~    :&@@@@7           ~@@@&.      ^@@@@.                        .\n.   #@@@@Y                .#@@@@G?JJJJJJJJ?5@@@@@~    :&@@@@7   !JJJJJJJJJJJJ?     :JJJJJJJJJJJJJJJJJ!!           .\n.   #@@@@Y                .#@@@@@@@@@@@@@@@@@@@@@@~   :&@@@@7   G@@@@@@@@G &@@             @@@@@@@@@@P            .\n.   #@@@@Y                .#@@@@&##########&@@@@@~    :&@@@@7   7YYYYYYYYJ???7             JYYYYYYYYYYYYJ???7     .\n.   #@@@@Y                .#@@@@5 ........ !@@@@@~    :&@@@@7            ~@@@&.                         !@@@#     .\n.   #@@@@#5PPPPPPPPPJJ    .#@@@@Y          !@@@@@~    :&@@@@P7??????????JYY5J      .?????????? ???????JYY5J       .\n.   &@@@@@@@@@@@@@@@@@    .#@@@@Y          !@@@@@~    :&@@@@@@@@@@@@@@@@@G         ^@@@@@@@@@@@@@@@@@P            .\n.   PBBBBBBBBBBBBBBBBY    .#@@@@Y          !@@@@@~    :&@@@@@@@@@@@@@@@@@G         ^@@@@@@@@@@@@@@@ @@5           .\n+                                                                                                                 +\n+                                                                                                                 +\n+ + + - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - + + +\n*/\n\npragma solidity ^0.8.0;\n\nimport \"../hootbase/base/erc721/HootERC721.sol\";\nimport \"../hootbase/base/common/HootProvenance.sol\";\nimport \"../hootbase/base/erc721/features/HootBaseERC721Raising.sol\";\nimport \"../hootbase/base/erc721/features/HootBaseERC721Refund.sol\";\nimport \"../hootbase/base/erc721/features/HootBaseERC721URIStorageWithLevel.sol\";\nimport \"../hootbase/utils/HootRandTokenID.sol\";\n\nabstract contract YINGBlind {\n    function ownerOf(uint256 tokenId) public view virtual returns (address);\n\n    function isFreeMintYINGToken(uint256 tokenId)\n        public\n        view\n        virtual\n        returns (bool);\n}\n\n/**\n * @title HootAirdropBox\n * @author HootLabs\n */\ncontract YING is\n    HootRandTokenID,\n    HootBaseERC721Provenance,\n    HootBaseERC721Raising,\n    HootBaseERC721Refund,\n    HootBaseERC721URIStorageWithLevel,\n    HootERC721\n{\n    event YINGConfigChanged(YINGConfig cfg);\n    event YINGBlindContractChanged(address blindAddress);\n    event YINGRevealed(\n        uint256 indexed blindTokenId,\n        uint256 indexed yingTokenId\n    );\n    /**\n     * used to mark the contract, each contract have to make a different CONTRACT_SHIELD\n     */\n    uint256 public constant CONTRACT_SHIELD = 1942123432145421;\n\n    struct YINGConfig {\n        uint256 maxSupply;\n        bool rejectFreeMintRefund;\n    }\n\n    YINGConfig public yingCfg;\n\n    address _yingBlindAddress;\n\n    constructor(YINGConfig memory yingCfg_)\n        HootERC721(\"YING\", \"YING\")\n    {\n        yingCfg = yingCfg_;\n    }\n\n    /***********************************|\n    |               Config              |\n    |__________________________________*/\n    function setYINGConfig(YINGConfig calldata cfg_) external onlyOwner {\n        yingCfg = cfg_;\n        emit YINGConfigChanged(cfg_);\n    }\n\n    // Set authorized contract address for minting the ERC-721 token\n    function setYINGBlindContract(address contractAddress_) external onlyOwner {\n        _yingBlindAddress = contractAddress_;\n        emit YINGBlindContractChanged(contractAddress_);\n    }\n\n    /***********************************|\n    |               Core                |\n    |__________________________________*/\n    function mintTransfer(address address_, uint256 blindTokenId_)\n        public\n        virtual\n        returns (uint256)\n    {\n        require(_msgSender() == _yingBlindAddress, \"not authorized\");\n        unchecked {\n            require(\n                totalMinted() + 1 <= yingCfg.maxSupply,\n                \"mint would exceed max supply\"\n            );\n        }\n        uint256 tokenId = _genTokenId();\n        _safeMint(address_, tokenId);\n        emit YINGRevealed(blindTokenId_, tokenId);\n        return tokenId;\n    }\n\n    function mintTransferBatch(\n        address address_,\n        uint256[] calldata blindTokenIds_\n    ) public virtual returns (uint256[] memory) {\n        require(_msgSender() == _yingBlindAddress, \"not authorized\");\n        require(\n            blindTokenIds_.length <= yingCfg.maxSupply,\n            \"mint would exceed max supply\"\n        );\n        unchecked {\n            require(\n                totalMinted() + blindTokenIds_.length <= yingCfg.maxSupply,\n                \"mint would exceed max supply\"\n            );\n\n            uint256[] memory tokenIds = new uint256[](blindTokenIds_.length);\n            for (uint256 i = 0; i < blindTokenIds_.length; i++) {\n                uint256 tokenId = _genTokenId();\n                _safeMint(address_, tokenId);\n                tokenIds[i] = tokenId;\n\n                emit YINGRevealed(blindTokenIds_[i], tokenId);\n            }\n            return tokenIds;\n        }\n    }\n\n    /***********************************|\n    |      HootBaseERC721Owners         |\n    |__________________________________*/\n    function exists(uint256 tokenId_)\n        public\n        view\n        virtual\n        override(HootBaseERC721Owners, HootERC721)\n        returns (bool)\n    {\n        return HootERC721.exists(tokenId_);\n    }\n\n    /***********************************|\n    |         HootRandTokenID           |\n    |__________________________________*/\n    function _remainSupply() internal view virtual override returns (uint256) {\n        return yingCfg.maxSupply - totalMinted();\n    }\n\n    /***********************************|\n    |        HootBaseERC721Refund       |\n    |__________________________________*/\n    function _refundPrice(uint256 tokenId_)\n        internal\n        view\n        virtual\n        override\n        returns (uint256)\n    {\n        if (yingCfg.rejectFreeMintRefund) {\n            YINGBlind yingBlind = YINGBlind(_yingBlindAddress);\n            if (yingBlind.isFreeMintYINGToken(tokenId_)) {\n                return 0;\n            }\n        }\n        return super._refundPrice(tokenId_);\n    }\n\n    /***********************************|\n    | HootBaseERC721URIStorageWithLevel |\n    |__________________________________*/\n    function tokenURI(uint256 tokenId_)\n        public\n        view\n        virtual\n        override(ERC721, HootBaseERC721URIStorage)\n        returns (string memory)\n    {\n        return HootBaseERC721URIStorage.tokenURI(tokenId_);\n    }\n\n    /***********************************|\n    |          HootERC721               |\n    |__________________________________*/\n    function tokenByIndex(uint256 index)\n        external\n        view\n        virtual\n        override\n        returns (uint256)\n    {\n        require(index < totalMinted(), \"out of range\");\n        return _unsafeGetTokenIdByIndex(index);\n    }\n\n    function tokenOfOwnerByIndex(address owner, uint256 index)\n        external\n        view\n        override\n        returns (uint256)\n    {\n        require(balanceOf(owner) > index, \"there are not enough tokens\");\n        uint256 totalMinted = totalMinted();\n        uint256 scanIndex = 0;\n        uint256 tokenId = 0;\n        for (uint256 i = 0; i < totalMinted; i++) {\n            tokenId = _unsafeGetTokenIdByIndex(i);\n            require(tokenId >= _startTokenId(), \"token not minted\");\n            if (_unsafeOwnerOf(tokenId) != owner) {\n                continue;\n            }\n            if (scanIndex == index) {\n                return tokenId;\n            }\n            ++scanIndex;\n        }\n        revert(\"not found token\");\n    }\n\n    function tokensOfOwner(address owner_)\n        external\n        view\n        returns (uint256[] memory)\n    {\n        uint256 balance = balanceOf(owner_);\n        if (balance == 0) {\n            return new uint256[](0);\n        }\n        uint256[] memory tokens = new uint256[](balance);\n        uint256 totalMinted = totalMinted();\n        uint256 scanIndex = 0;\n        uint256 tokenId = 0;\n        for (uint256 i = 0; i < totalMinted; i++) {\n            tokenId = _unsafeGetTokenIdByIndex(i);\n            require(tokenId >= _startTokenId(), \"token not minted\");\n            if (_unsafeOwnerOf(tokenId) != owner_) {\n                continue;\n            }\n            tokens[scanIndex] = tokenId;\n            ++scanIndex;\n            if(scanIndex == balance){\n                break;\n            }\n        }\n        require(scanIndex == balance, \"not enough tokens were found\");\n        return tokens;\n    }\n\n    /***********************************|\n    |               ERC721A             |\n    |__________________________________*/\n    /**\n     * @notice hook function, used to intercept the transfer of token.\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual override(HootBaseERC721Raising, HootERC721) {\n        HootBaseERC721Raising._beforeTokenTransfer(from, to, tokenId);\n        super._beforeTokenTransfer(from, to, tokenId);\n    }\n}\n"
6     },
7     "hootbase/utils/HootRandTokenID.sol": {
8       "content": "// SPDX-License-Identifier: MIT\n/*\n+ + + - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - + + +\n+                                                                                                                 +\n+                                                                                                                 +\n.                        .^!!~:                                                 .^!!^.                            .\n.                            :7Y5Y7^.                                       .^!J5Y7^.                             .\n.                              :!5B#GY7^.                             .^!JP##P7:                                  .\n.   7777??!         ~????7.        :5@@@@&GY7^.                    .^!JG#@@@@G^        7????????????^ ~????77     .\n.   @@@@@G          P@@@@@:       J#@@@@@@@@@@&G57~.          .^7YG#@@@@@@@@@@&5:      #@@@@@@@@@@@@@? P@@@@@@    .\n.   @@@@@G          5@@@@@:     :B@@@@@BJG@@@@@@@@@&B5?~:^7YG#@@@@@@@@BJP@@@ @@&!!     #@@@@@@@@@@@@@? P@@@@@@    .\n.   @@@@@G          5@@@@@:    .B@@@@#!!J@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@P   ^G@@@@@~.   ^~~~~~^J@ @@@@??:~~~~~    .\n.   @@@@@B^^^^^^^^. 5@@@@@:   J@@@@&^   G@7?@@@@@@&@@@@@@@@@@@&@J7&@@@@@#.   .B@@@@P           !@@@@@?            .\n.   @@@@@@@@@@@@@@! 5@@@@@:   5@@@@B   ^B&&@@@@@#!#@@@@@@@@@@7G&&@@@@@#!     Y@@@@#.           !@@@@@?            .\n.   @@@@@@@@@@@@@@! P@@@@@:   ?@@@@&^    !YPGPY!  !@@@@@Y&@@@@Y  ~YPGP57.    .B@@@@P           !@@@@@?            .\n.   @@@@@B~~~~~~~!!.?GPPGP:   .B@@@@&7           ?&@@@@P ?@@@@@5.          ~B@@@@&^            !@@@@@?            .\n.   @@@@@G          ^~~~~~.    :G@@@@@BY7~^^~75#@@@@@5.    J@@@@@&P?~^^^!JG@@@@@#~             !@@@@@?            .\n.   @@@@@G          5@@@@@:      ?B@@@@@@@@@@@@@@@@B!!      ^P@@@@@@@@@@@@@@@@&Y               !@@@@@?            .\n.   @@@@@G.         P@@@@@:        !YB&@@@@@@@@&BY~           ^JG#@@@@@@@@&#P7.                !@@@@@?            .\n.   YYYYY7          !YJJJJ.            :~!7??7!^:                 .^!7??7!~:                   ^YJJJY~            .\n.                                                                                                                 .\n.                                                                                                                 .\n.                                                                                                                 .\n.                                  ………………               …………………………………………                  …………………………………………        .\n.   PBGGB??                      7&######&5            :B##############&5               .G#################^      .\n.   &@@@@5                      ?@@@@@@@@@@           :@@@@@@@@@@@@@@@@@G               &@@@@@@@@@@@@ @@@@@^      .\n.   PBBBBJ                 !!!!!JPPPPPPPPPY !!!!!     :&@@@@P?JJJJJJJJJJJJJJ?      :JJJJJJJJJJJJJJJJJJJJJJ.       .\n.   ~~~~~:                .#@@@@Y          ~@@@@@~    :&@@@@7           ~@@@&.      ^@@@@.                        .\n.   #@@@@Y                .#@@@@G?JJJJJJJJ?5@@@@@~    :&@@@@7   !JJJJJJJJJJJJ?     :JJJJJJJJJJJJJJJJJ!!           .\n.   #@@@@Y                .#@@@@@@@@@@@@@@@@@@@@@@~   :&@@@@7   G@@@@@@@@G &@@             @@@@@@@@@@P            .\n.   #@@@@Y                .#@@@@&##########&@@@@@~    :&@@@@7   7YYYYYYYYJ???7             JYYYYYYYYYYYYJ???7     .\n.   #@@@@Y                .#@@@@5 ........ !@@@@@~    :&@@@@7            ~@@@&.                         !@@@#     .\n.   #@@@@#5PPPPPPPPPJJ    .#@@@@Y          !@@@@@~    :&@@@@P7??????????JYY5J      .?????????? ???????JYY5J       .\n.   &@@@@@@@@@@@@@@@@@    .#@@@@Y          !@@@@@~    :&@@@@@@@@@@@@@@@@@G         ^@@@@@@@@@@@@@@@@@P            .\n.   PBBBBBBBBBBBBBBBBY    .#@@@@Y          !@@@@@~    :&@@@@@@@@@@@@@@@@@G         ^@@@@@@@@@@@@@@@ @@5           .\n+                                                                                                                 +\n+                                                                                                                 +\n+ + + - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - + + +\n*/\n\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\n\n/**\n * @title Hootbirds\n * @author HootLabs\n */\nabstract contract HootRandTokenID is ReentrancyGuard, Ownable {\n    using Strings for uint256;\n\n    uint256 public constant MAX_SUPPLY = 5831;\n    uint256[MAX_SUPPLY] internal _randIndices; // Used to generate random tokenids\n\n    constructor() {}\n\n    /***********************************|\n    |               abstract            |\n    |__________________________________*/\n    function _remainSupply() internal view virtual returns (uint256);\n\n    /***********************************|\n    |               RandomTokenId       |\n    |__________________________________*/\n    function init(uint256 startIndex, uint256 stopIndex) external onlyOwner {\n        unchecked {\n            for(uint256 i=startIndex; i<stopIndex; i++){\n                _randIndices[i] = i+1;\n            }\n        }\n    }\n    function freeStores() external virtual onlyOwner nonReentrant {\n        require(_remainSupply() == 0, \"there is some token left\");\n        delete _randIndices;\n    }\n    function _genTokenId() internal returns (uint256 tokenId_) {\n        uint256 remain = _remainSupply();\n        require(remain > 0, \"tokenId has been exhausted\");\n        unchecked {\n            tokenId_ = _changePos(remain-1, _unsafeRandom(remain) % remain);\n        }\n    }\n    function _genTokenIdBatch(uint256 supply) internal returns (uint256[] memory){\n        require(supply > 0, \"tokenId has been exhausted\");\n\n       uint256 remain = _remainSupply();\n       require(supply <= remain, \"not enough tokenIDs\");\n\n       uint256[] memory tokenIDs = new uint256[](supply);\n       unchecked {\n            for(uint256 i=0;i<supply; i++){\n                tokenIDs[i] = _changePos(remain-i-1, _unsafeRandom(i) % (remain-i));\n            }\n       } \n       return tokenIDs;\n    }\n    function _genFirstTokenId() internal returns (uint256 tokenId_){\n        require(_remainSupply() == _randIndices.length, \"the first tokenId already generated\");\n        return _changePos(_randIndices.length-1, 0);\n    }\n    function _changePos(uint256 lastestPos, uint256 pos) private returns (uint256) {\n        uint256 val = _randIndices[pos];\n        _randIndices[pos] = _randIndices[lastestPos];\n        _randIndices[lastestPos] = val;\n        return val;\n    }\n    function _unsafeGetTokenIdByIndex(uint256 index_) internal view returns (uint256) {\n        if(index_ >= _randIndices.length){\n            return 0;\n        }\n        return _randIndices[_randIndices.length - index_ - 1];\n    }\n\n    /***********************************|\n    |               Util               |\n    |__________________________________*/\n    /**\n     * @notice unsafeRandom is used to generate a random number by on-chain randomness.\n     * Please note that on-chain random is potentially manipulated by miners, and most scenarios suggest using VRF.\n     * @return randomly generated number.\n     */\n    function _unsafeRandom(uint256 n) private view returns (uint256) {\n        unchecked {\n            return\n                uint256(\n                    keccak256(\n                        abi.encodePacked(\n                            blockhash(block.number - 1),\n                            block.difficulty,\n                            block.timestamp,\n                            block.coinbase,\n                            n,\n                            tx.origin\n                        )\n                    )\n                );\n        }\n    }\n}"
9     },
10     "hootbase/base/erc721/features/HootBaseERC721URIStorageWithLevel.sol": {
11       "content": "// SPDX-License-Identifier: MIT\n/*\n+ + + - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - + + +\n+                                                                                                                 +\n+                                                                                                                 +\n.                        .^!!~:                                                 .^!!^.                            .\n.                            :7Y5Y7^.                                       .^!J5Y7^.                             .\n.                              :!5B#GY7^.                             .^!JP##P7:                                  .\n.   7777??!         ~????7.        :5@@@@&GY7^.                    .^!JG#@@@@G^        7????????????^ ~????77     .\n.   @@@@@G          P@@@@@:       J#@@@@@@@@@@&G57~.          .^7YG#@@@@@@@@@@&5:      #@@@@@@@@@@@@@? P@@@@@@    .\n.   @@@@@G          5@@@@@:     :B@@@@@BJG@@@@@@@@@&B5?~:^7YG#@@@@@@@@BJP@@@ @@&!!     #@@@@@@@@@@@@@? P@@@@@@    .\n.   @@@@@G          5@@@@@:    .B@@@@#!!J@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@P   ^G@@@@@~.   ^~~~~~^J@ @@@@??:~~~~~    .\n.   @@@@@B^^^^^^^^. 5@@@@@:   J@@@@&^   G@7?@@@@@@&@@@@@@@@@@@&@J7&@@@@@#.   .B@@@@P           !@@@@@?            .\n.   @@@@@@@@@@@@@@! 5@@@@@:   5@@@@B   ^B&&@@@@@#!#@@@@@@@@@@7G&&@@@@@#!     Y@@@@#.           !@@@@@?            .\n.   @@@@@@@@@@@@@@! P@@@@@:   ?@@@@&^    !YPGPY!  !@@@@@Y&@@@@Y  ~YPGP57.    .B@@@@P           !@@@@@?            .\n.   @@@@@B~~~~~~~!!.?GPPGP:   .B@@@@&7           ?&@@@@P ?@@@@@5.          ~B@@@@&^            !@@@@@?            .\n.   @@@@@G          ^~~~~~.    :G@@@@@BY7~^^~75#@@@@@5.    J@@@@@&P?~^^^!JG@@@@@#~             !@@@@@?            .\n.   @@@@@G          5@@@@@:      ?B@@@@@@@@@@@@@@@@B!!      ^P@@@@@@@@@@@@@@@@&Y               !@@@@@?            .\n.   @@@@@G.         P@@@@@:        !YB&@@@@@@@@&BY~           ^JG#@@@@@@@@&#P7.                !@@@@@?            .\n.   YYYYY7          !YJJJJ.            :~!7??7!^:                 .^!7??7!~:                   ^YJJJY~            .\n.                                                                                                                 .\n.                                                                                                                 .\n.                                                                                                                 .\n.                                  ………………               …………………………………………                  …………………………………………        .\n.   PBGGB??                      7&######&5            :B##############&5               .G#################^      .\n.   &@@@@5                      ?@@@@@@@@@@           :@@@@@@@@@@@@@@@@@G               &@@@@@@@@@@@@ @@@@@^      .\n.   PBBBBJ                 !!!!!JPPPPPPPPPY !!!!!     :&@@@@P?JJJJJJJJJJJJJJ?      :JJJJJJJJJJJJJJJJJJJJJJ.       .\n.   ~~~~~:                .#@@@@Y          ~@@@@@~    :&@@@@7           ~@@@&.      ^@@@@.                        .\n.   #@@@@Y                .#@@@@G?JJJJJJJJ?5@@@@@~    :&@@@@7   !JJJJJJJJJJJJ?     :JJJJJJJJJJJJJJJJJ!!           .\n.   #@@@@Y                .#@@@@@@@@@@@@@@@@@@@@@@~   :&@@@@7   G@@@@@@@@G &@@             @@@@@@@@@@P            .\n.   #@@@@Y                .#@@@@&##########&@@@@@~    :&@@@@7   7YYYYYYYYJ???7             JYYYYYYYYYYYYJ???7     .\n.   #@@@@Y                .#@@@@5 ........ !@@@@@~    :&@@@@7            ~@@@&.                         !@@@#     .\n.   #@@@@#5PPPPPPPPPJJ    .#@@@@Y          !@@@@@~    :&@@@@P7??????????JYY5J      .?????????? ???????JYY5J       .\n.   &@@@@@@@@@@@@@@@@@    .#@@@@Y          !@@@@@~    :&@@@@@@@@@@@@@@@@@G         ^@@@@@@@@@@@@@@@@@P            .\n.   PBBBBBBBBBBBBBBBBY    .#@@@@Y          !@@@@@~    :&@@@@@@@@@@@@@@@@@G         ^@@@@@@@@@@@@@@@ @@5           .\n+                                                                                                                 +\n+                                                                                                                 +\n+ + + - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - + + +\n*/\n\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\";\nimport \"../../common/HootBase.sol\";\nimport \"../extensions/HootBaseERC721Owners.sol\";\nimport \"./HootBaseERC721URIStorage.sol\";\n\n/**\n * @title HootBaseERC721URIStorageWithLevel\n * @author HootLabs\n */\nabstract contract HootBaseERC721URIStorageWithLevel is HootBaseERC721URIStorage\n{\n    using Strings for uint256;\n\n    event LevelBaseURIChanged(uint256 level, string uri);\n    event TokenLevelChanged(uint256 tokenId, uint256 level);\n\n    // Optional mapping for token URIs\n    mapping(uint256=>string) _levelPreURIs;\n    mapping(uint256 => uint256) private _tokenLevels;\n\n    function setLevelsBaseURI(uint256[] calldata levels_, string[] calldata uris_)\n             external\n            atLeastManager\n    {\n        require(levels_.length == uris_.length, \"the length of Listing Level is different from that of Listing URI\");\n        for(uint256 i = 0; i<levels_.length; i++){\n            _levelPreURIs[levels_[i]] = uris_[i];\n            emit LevelBaseURIChanged(levels_[i], uris_[i]);\n        }\n    }\n    function setTokensLevel(uint256[] calldata tokens_, uint256[] calldata levels_)\n             external\n            atLeastManager\n    {\n        require(tokens_.length == levels_.length, \"the length of Listing Token is different from that of Listing Level\");\n        for(uint256 i = 0; i<tokens_.length; i++){\n            _tokenLevels[tokens_[i]] = levels_[i];\n            emit TokenLevelChanged(tokens_[i], levels_[i]);\n        }\n    }\n\n    function _baseURI(uint256 tokenId_) internal view virtual override returns (string memory) {\n        uint256 level = _tokenLevels[tokenId_];\n        if(level == 0){\n            return super._baseURI(tokenId_);\n        }\n        string memory baseURI = _levelPreURIs[level];\n        if(bytes(baseURI).length == 0){\n            return super._baseURI(tokenId_);\n        }\n        return baseURI;\n    }\n}"
12     },
13     "hootbase/base/erc721/features/HootBaseERC721Refund.sol": {
14       "content": "// SPDX-License-Identifier: MIT\n/*\n+ + + - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - + + +\n+                                                                                                                 +\n+                                                                                                                 +\n.                        .^!!~:                                                 .^!!^.                            .\n.                            :7Y5Y7^.                                       .^!J5Y7^.                             .\n.                              :!5B#GY7^.                             .^!JP##P7:                                  .\n.   7777??!         ~????7.        :5@@@@&GY7^.                    .^!JG#@@@@G^        7????????????^ ~????77     .\n.   @@@@@G          P@@@@@:       J#@@@@@@@@@@&G57~.          .^7YG#@@@@@@@@@@&5:      #@@@@@@@@@@@@@? P@@@@@@    .\n.   @@@@@G          5@@@@@:     :B@@@@@BJG@@@@@@@@@&B5?~:^7YG#@@@@@@@@BJP@@@ @@&!!     #@@@@@@@@@@@@@? P@@@@@@    .\n.   @@@@@G          5@@@@@:    .B@@@@#!!J@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@P   ^G@@@@@~.   ^~~~~~^J@ @@@@??:~~~~~    .\n.   @@@@@B^^^^^^^^. 5@@@@@:   J@@@@&^   G@7?@@@@@@&@@@@@@@@@@@&@J7&@@@@@#.   .B@@@@P           !@@@@@?            .\n.   @@@@@@@@@@@@@@! 5@@@@@:   5@@@@B   ^B&&@@@@@#!#@@@@@@@@@@7G&&@@@@@#!     Y@@@@#.           !@@@@@?            .\n.   @@@@@@@@@@@@@@! P@@@@@:   ?@@@@&^    !YPGPY!  !@@@@@Y&@@@@Y  ~YPGP57.    .B@@@@P           !@@@@@?            .\n.   @@@@@B~~~~~~~!!.?GPPGP:   .B@@@@&7           ?&@@@@P ?@@@@@5.          ~B@@@@&^            !@@@@@?            .\n.   @@@@@G          ^~~~~~.    :G@@@@@BY7~^^~75#@@@@@5.    J@@@@@&P?~^^^!JG@@@@@#~             !@@@@@?            .\n.   @@@@@G          5@@@@@:      ?B@@@@@@@@@@@@@@@@B!!      ^P@@@@@@@@@@@@@@@@&Y               !@@@@@?            .\n.   @@@@@G.         P@@@@@:        !YB&@@@@@@@@&BY~           ^JG#@@@@@@@@&#P7.                !@@@@@?            .\n.   YYYYY7          !YJJJJ.            :~!7??7!^:                 .^!7??7!~:                   ^YJJJY~            .\n.                                                                                                                 .\n.                                                                                                                 .\n.                                                                                                                 .\n.                                  ………………               …………………………………………                  …………………………………………        .\n.   PBGGB??                      7&######&5            :B##############&5               .G#################^      .\n.   &@@@@5                      ?@@@@@@@@@@           :@@@@@@@@@@@@@@@@@G               &@@@@@@@@@@@@ @@@@@^      .\n.   PBBBBJ                 !!!!!JPPPPPPPPPY !!!!!     :&@@@@P?JJJJJJJJJJJJJJ?      :JJJJJJJJJJJJJJJJJJJJJJ.       .\n.   ~~~~~:                .#@@@@Y          ~@@@@@~    :&@@@@7           ~@@@&.      ^@@@@.                        .\n.   #@@@@Y                .#@@@@G?JJJJJJJJ?5@@@@@~    :&@@@@7   !JJJJJJJJJJJJ?     :JJJJJJJJJJJJJJJJJ!!           .\n.   #@@@@Y                .#@@@@@@@@@@@@@@@@@@@@@@~   :&@@@@7   G@@@@@@@@G &@@             @@@@@@@@@@P            .\n.   #@@@@Y                .#@@@@&##########&@@@@@~    :&@@@@7   7YYYYYYYYJ???7             JYYYYYYYYYYYYJ???7     .\n.   #@@@@Y                .#@@@@5 ........ !@@@@@~    :&@@@@7            ~@@@&.                         !@@@#     .\n.   #@@@@#5PPPPPPPPPJJ    .#@@@@Y          !@@@@@~    :&@@@@P7??????????JYY5J      .?????????? ???????JYY5J       .\n.   &@@@@@@@@@@@@@@@@@    .#@@@@Y          !@@@@@~    :&@@@@@@@@@@@@@@@@@G         ^@@@@@@@@@@@@@@@@@P            .\n.   PBBBBBBBBBBBBBBBBY    .#@@@@Y          !@@@@@~    :&@@@@@@@@@@@@@@@@@G         ^@@@@@@@@@@@@@@@ @@5           .\n+                                                                                                                 +\n+                                                                                                                 +\n+ + + - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - + + +\n*/\n\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\nimport \"@openzeppelin/contracts/utils/Address.sol\";\nimport \"../../common/HootBase.sol\";\n\n/**\n * @title HootBaseERC721Refund\n * @author HootLabs\n */\nabstract contract HootBaseERC721Refund is HootBase, IERC721 {\n    using Address for address;\n\n    event RefundConfigChanged(RefundConfig config);\n    event RefundAddressChanged(address indexed refundAddress);\n    event Refunded(address indexed from, address indexed to, uint256 tokenId, uint256 amount);\n\n    constructor(){\n        refundAddress = _msgSender();\n    }\n    // mint State Variables\n    address public refundAddress;\n\n    struct RefundConfig {\n        uint256 startTime;\n        uint256 stopTime;\n        uint256 price;\n    }\n    RefundConfig public refundConfig;\n\n    // refund config\n    function isRefundEnabled() public view virtual returns (bool) {\n        return block.timestamp > refundConfig.startTime && block.timestamp < refundConfig.stopTime;\n    }\n    function setRefundAddress(address refundAddress_) external onlyOwner {\n        refundAddress = refundAddress_;\n        emit RefundAddressChanged(refundAddress_);\n    }\n    function setRefundConfig(RefundConfig calldata cfg_) external onlyOwner {\n        refundConfig = cfg_;\n        emit RefundConfigChanged(refundConfig);\n    }\n\n    function _refundPrice(uint256 /*tokenId_*/) internal view virtual returns (uint256) {\n        return refundConfig.price;\n    }\n\n    // refund\n    function refund(uint256 tokenId_) external callerIsUser nonReentrant {\n        require(_msgSender() == this.ownerOf(tokenId_), \"not token owner\");\n        require(_msgSender() != refundAddress, \"stock account refunds are not allowed\");\n        require(isRefundEnabled(), \"outside the refundable period\");\n\n        uint256 refundPrice = _refundPrice(tokenId_);\n        require(refundPrice > 0, \"only sale NFT can be refunded\");\n        require(address(this).balance >= refundPrice, \"insufficient contract funds\");\n\n        this.safeTransferFrom(_msgSender(), refundAddress, tokenId_);\n        //Address.sendValue(payable(_msgSender()), refundPrice);\n        payable(_msgSender()).transfer(refundPrice);\n\n        emit Refunded(_msgSender(), refundAddress, tokenId_, refundPrice);\n    }\n}"
15     },
16     "hootbase/base/erc721/features/HootBaseERC721Raising.sol": {
17       "content": "// SPDX-License-Identifier: MIT\n/*\n+ + + - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - + + +\n+                                                                                                                 +\n+                                                                                                                 +\n.                        .^!!~:                                                 .^!!^.                            .\n.                            :7Y5Y7^.                                       .^!J5Y7^.                             .\n.                              :!5B#GY7^.                             .^!JP##P7:                                  .\n.   7777??!         ~????7.        :5@@@@&GY7^.                    .^!JG#@@@@G^        7????????????^ ~????77     .\n.   @@@@@G          P@@@@@:       J#@@@@@@@@@@&G57~.          .^7YG#@@@@@@@@@@&5:      #@@@@@@@@@@@@@? P@@@@@@    .\n.   @@@@@G          5@@@@@:     :B@@@@@BJG@@@@@@@@@&B5?~:^7YG#@@@@@@@@BJP@@@ @@&!!     #@@@@@@@@@@@@@? P@@@@@@    .\n.   @@@@@G          5@@@@@:    .B@@@@#!!J@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@P   ^G@@@@@~.   ^~~~~~^J@ @@@@??:~~~~~    .\n.   @@@@@B^^^^^^^^. 5@@@@@:   J@@@@&^   G@7?@@@@@@&@@@@@@@@@@@&@J7&@@@@@#.   .B@@@@P           !@@@@@?            .\n.   @@@@@@@@@@@@@@! 5@@@@@:   5@@@@B   ^B&&@@@@@#!#@@@@@@@@@@7G&&@@@@@#!     Y@@@@#.           !@@@@@?            .\n.   @@@@@@@@@@@@@@! P@@@@@:   ?@@@@&^    !YPGPY!  !@@@@@Y&@@@@Y  ~YPGP57.    .B@@@@P           !@@@@@?            .\n.   @@@@@B~~~~~~~!!.?GPPGP:   .B@@@@&7           ?&@@@@P ?@@@@@5.          ~B@@@@&^            !@@@@@?            .\n.   @@@@@G          ^~~~~~.    :G@@@@@BY7~^^~75#@@@@@5.    J@@@@@&P?~^^^!JG@@@@@#~             !@@@@@?            .\n.   @@@@@G          5@@@@@:      ?B@@@@@@@@@@@@@@@@B!!      ^P@@@@@@@@@@@@@@@@&Y               !@@@@@?            .\n.   @@@@@G.         P@@@@@:        !YB&@@@@@@@@&BY~           ^JG#@@@@@@@@&#P7.                !@@@@@?            .\n.   YYYYY7          !YJJJJ.            :~!7??7!^:                 .^!7??7!~:                   ^YJJJY~            .\n.                                                                                                                 .\n.                                                                                                                 .\n.                                                                                                                 .\n.                                  ………………               …………………………………………                  …………………………………………        .\n.   PBGGB??                      7&######&5            :B##############&5               .G#################^      .\n.   &@@@@5                      ?@@@@@@@@@@           :@@@@@@@@@@@@@@@@@G               &@@@@@@@@@@@@ @@@@@^      .\n.   PBBBBJ                 !!!!!JPPPPPPPPPY !!!!!     :&@@@@P?JJJJJJJJJJJJJJ?      :JJJJJJJJJJJJJJJJJJJJJJ.       .\n.   ~~~~~:                .#@@@@Y          ~@@@@@~    :&@@@@7           ~@@@&.      ^@@@@.                        .\n.   #@@@@Y                .#@@@@G?JJJJJJJJ?5@@@@@~    :&@@@@7   !JJJJJJJJJJJJ?     :JJJJJJJJJJJJJJJJJ!!           .\n.   #@@@@Y                .#@@@@@@@@@@@@@@@@@@@@@@~   :&@@@@7   G@@@@@@@@G &@@             @@@@@@@@@@P            .\n.   #@@@@Y                .#@@@@&##########&@@@@@~    :&@@@@7   7YYYYYYYYJ???7             JYYYYYYYYYYYYJ???7     .\n.   #@@@@Y                .#@@@@5 ........ !@@@@@~    :&@@@@7            ~@@@&.                         !@@@#     .\n.   #@@@@#5PPPPPPPPPJJ    .#@@@@Y          !@@@@@~    :&@@@@P7??????????JYY5J      .?????????? ???????JYY5J       .\n.   &@@@@@@@@@@@@@@@@@    .#@@@@Y          !@@@@@~    :&@@@@@@@@@@@@@@@@@G         ^@@@@@@@@@@@@@@@@@P            .\n.   PBBBBBBBBBBBBBBBBY    .#@@@@Y          !@@@@@~    :&@@@@@@@@@@@@@@@@@G         ^@@@@@@@@@@@@@@@ @@5           .\n+                                                                                                                 +\n+                                                                                                                 +\n+ + + - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - + + +\n*/\n\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\nimport \"../../common/HootBase.sol\";\nimport \"../extensions/HootBaseERC721Owners.sol\";\n\n/**\n * @title HootBaseERC721Raising\n * @author HootLabs\n */\nabstract contract HootBaseERC721Raising is\n    HootBase,\n    HootBaseERC721Owners,\n    IERC721\n{\n    event RaisingStatusChanged(\n        uint256 indexed tokenId,\n        address indexed owner,\n        uint16 indexed raisingType,\n        bool isStart\n    );\n    event RaisingInterrupted(uint256 indexed tokenId, address indexed operator);\n    event RaisingTokenTransfered(\n        address indexed from,\n        address indexed to,\n        uint256 indexed tokenId\n    );\n    event RaisingAllowedFlagChanged(\n        bool isRaisingAllowed,\n        bool isRaisingTransferAllowed\n    );\n\n    struct RaisingStatus {\n        uint256 raisingStartTime;\n        uint256 total;\n        uint16 raisingType;\n        bool provisionalFree;\n    }\n    struct RaisingCurrentStatus {\n        uint256 total;\n        uint256 current;\n        uint16 raisingType;\n        bool isRaising;\n    }\n    mapping(uint256 => RaisingStatus) private _raisingStatuses;\n    bool public isRaisingAllowed;\n    bool public isRaisingTransferAllowed;\n\n    /***********************************|\n    |               Raising Config      |\n    |__________________________________*/\n    /**\n     * @notice setIsRaisingAllowed is used to set the global switch to control whether users are allowed to brew.\n     * @param isRaisingAllowed_ set to true to allow\n     */\n    function setIsRaisingAllowed(\n        bool isRaisingAllowed_,\n        bool isRaisingTransferAllowed_\n    ) external atLeastMaintainer {\n        isRaisingAllowed = isRaisingAllowed_;\n        isRaisingTransferAllowed = isRaisingTransferAllowed_;\n        emit RaisingAllowedFlagChanged(\n            isRaisingAllowed_,\n            isRaisingTransferAllowed_\n        );\n    }\n\n    /***********************************|\n    |               Raising Core        |\n    |__________________________________*/\n    /**\n     * @notice safeTransferWhileRaising is used to safely transfer tokens while raising\n     * @param from_ transfer from address, cannot be the zero.\n     * @param to_ transfer to address, cannot be the zero.\n     * @param tokenId_ token must exist and be owned by `from`.\n     */\n    function safeTransferWhileRaising(\n        address from_,\n        address to_,\n        uint256 tokenId_\n    ) external nonReentrant {\n        require(this.ownerOf(tokenId_) == _msgSender(), \"caller is not owner\");\n        require(\n            isRaisingTransferAllowed,\n            \"transfer while raising is not enabled\"\n        );\n        _raisingStatuses[tokenId_].provisionalFree = true;\n        this.safeTransferFrom(from_, to_, tokenId_);\n        _raisingStatuses[tokenId_].provisionalFree = false;\n        if (_raisingStatuses[tokenId_].raisingStartTime != 0) {\n            emit RaisingTokenTransfered(from_, to_, tokenId_);\n        }\n    }\n\n    /**\n     * @notice getTokenRaisingStatus is used to get the detailed raising status of a specific token.\n     * @param tokenIDs_ token id\n     * @return RaisingCurrentStatus[] how long the token has been raising in the hands of the current hodler.\n     */\n    function getTokenRaisingStatus(uint256[] calldata tokenIDs_)\n        external\n        view\n        returns (RaisingCurrentStatus[] memory)\n    {\n        RaisingCurrentStatus[] memory statusList = new RaisingCurrentStatus[](tokenIDs_.length);\n        for (uint256 i = 0; i < tokenIDs_.length; ++i) {\n            uint256 tokenId = tokenIDs_[i];\n            if(!this.exists(tokenId)){\n                continue;\n            }\n            RaisingStatus memory status = _raisingStatuses[tokenId];\n            if (status.raisingStartTime != 0) {\n                statusList[i].isRaising = true;\n                statusList[i].raisingType = status.raisingType;\n                statusList[i].current = block.timestamp - status.raisingStartTime;\n            }\n            statusList[i].total = status.total + statusList[i].current;\n        }\n        return statusList;\n    }\n\n    function _isTokenRaising(uint256 tokenId_) internal view returns (bool) {\n        return _raisingStatuses[tokenId_].raisingStartTime != 0;\n    }\n\n    /**\n     * @notice setTokenRaisingState is used to modify the Raising state of the Token,\n     * only the Owner of the Token has this permission.\n     * @param tokenIds_ list of tokenId\n     */\n    function doTokenRaising(\n        uint256[] calldata tokenIds_,\n        uint16 raisingType_,\n        bool isStart_\n    ) external nonReentrant {\n        if (isStart_) {\n            require(isRaisingAllowed, \"raising is not allowed\");\n        }\n        unchecked {\n            for (uint256 i = 0; i < tokenIds_.length; i++) {\n                uint256 tokenId = tokenIds_[i];\n                require(\n                    this.ownerOf(tokenId) == _msgSender(),\n                    \"caller is not owner\"\n                );\n\n                RaisingStatus storage status = _raisingStatuses[tokenId];\n                uint256 raisingStartTime = status.raisingStartTime;\n                if (isStart_) {\n                    if (raisingStartTime == 0) {\n                        status.raisingStartTime = block.timestamp;\n                        status.raisingType = raisingType_;\n                        emit RaisingStatusChanged(\n                            tokenId,\n                            _msgSender(),\n                            raisingType_,\n                            isStart_\n                        );\n                    } else {\n                        require(\n                            status.raisingType == raisingType_,\n                            \"raising is already started, but with a different raising type set\"\n                        );\n                    }\n                } else {\n                    if (raisingStartTime > 0) {\n                        status.total += block.timestamp - raisingStartTime;\n                        status.raisingStartTime = 0;\n                        emit RaisingStatusChanged(\n                            tokenId,\n                            _msgSender(),\n                            raisingType_,\n                            isStart_\n                        );\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @notice interruptTokenRaising gives the issuer the right to forcibly interrupt the raising state of the token.\n     * One scenario of using it is: someone may maliciously place low-priced raising tokens on\n     * the secondary market (because raising tokens cannot be traded).\n     * @param tokenIds_ the tokenId list to operate\n     */\n    function interruptTokenRaising(uint256[] calldata tokenIds_)\n        external\n        nonReentrant\n        atLeastMaintainer\n    {\n        unchecked {\n            for (uint256 i = 0; i < tokenIds_.length; i++) {\n                uint256 tokenId = tokenIds_[i];\n                address owner = this.ownerOf(tokenId);\n                RaisingStatus storage status = _raisingStatuses[tokenId];\n                if (status.raisingStartTime == 0) {\n                    continue;\n                }\n                status.total += block.timestamp - status.raisingStartTime;\n                status.raisingStartTime = 0;\n                emit RaisingStatusChanged(\n                    tokenId,\n                    owner,\n                    status.raisingType,\n                    false\n                );\n                emit RaisingInterrupted(tokenId, _msgSender());\n            }\n        }\n    }\n\n    function _beforeTokenTransfer(\n        address, /*from_*/\n        address, /*to_*/\n        uint256 tokenId_\n    ) internal virtual {\n        if (_isTokenRaising(tokenId_)) {\n            require(\n                _raisingStatuses[tokenId_].provisionalFree,\n                \"token is raising\"\n            );\n        }\n    }\n\n    function _beforeTokenTransfers(\n        address, /*from_*/\n        address, /*to_*/\n        uint256 startTokenId_,\n        uint256 quantity_\n    ) internal virtual {\n        for (uint256 i = 0; i < quantity_; ++i) {\n            if (_isTokenRaising(startTokenId_ + i)) {\n                require(\n                    _raisingStatuses[startTokenId_ + i].provisionalFree,\n                    \"token is raising\"\n                );\n            }\n        }\n    }\n}\n"
18     },
19     "hootbase/base/common/HootProvenance.sol": {
20       "content": "// SPDX-License-Identifier: MIT\n/*\n+ + + - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - + + +\n+                                                                                                                 +\n+                                                                                                                 +\n.                        .^!!~:                                                 .^!!^.                            .\n.                            :7Y5Y7^.                                       .^!J5Y7^.                             .\n.                              :!5B#GY7^.                             .^!JP##P7:                                  .\n.   7777??!         ~????7.        :5@@@@&GY7^.                    .^!JG#@@@@G^        7????????????^ ~????77     .\n.   @@@@@G          P@@@@@:       J#@@@@@@@@@@&G57~.          .^7YG#@@@@@@@@@@&5:      #@@@@@@@@@@@@@? P@@@@@@    .\n.   @@@@@G          5@@@@@:     :B@@@@@BJG@@@@@@@@@&B5?~:^7YG#@@@@@@@@BJP@@@ @@&!!     #@@@@@@@@@@@@@? P@@@@@@    .\n.   @@@@@G          5@@@@@:    .B@@@@#!!J@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@P   ^G@@@@@~.   ^~~~~~^J@ @@@@??:~~~~~    .\n.   @@@@@B^^^^^^^^. 5@@@@@:   J@@@@&^   G@7?@@@@@@&@@@@@@@@@@@&@J7&@@@@@#.   .B@@@@P           !@@@@@?            .\n.   @@@@@@@@@@@@@@! 5@@@@@:   5@@@@B   ^B&&@@@@@#!#@@@@@@@@@@7G&&@@@@@#!     Y@@@@#.           !@@@@@?            .\n.   @@@@@@@@@@@@@@! P@@@@@:   ?@@@@&^    !YPGPY!  !@@@@@Y&@@@@Y  ~YPGP57.    .B@@@@P           !@@@@@?            .\n.   @@@@@B~~~~~~~!!.?GPPGP:   .B@@@@&7           ?&@@@@P ?@@@@@5.          ~B@@@@&^            !@@@@@?            .\n.   @@@@@G          ^~~~~~.    :G@@@@@BY7~^^~75#@@@@@5.    J@@@@@&P?~^^^!JG@@@@@#~             !@@@@@?            .\n.   @@@@@G          5@@@@@:      ?B@@@@@@@@@@@@@@@@B!!      ^P@@@@@@@@@@@@@@@@&Y               !@@@@@?            .\n.   @@@@@G.         P@@@@@:        !YB&@@@@@@@@&BY~           ^JG#@@@@@@@@&#P7.                !@@@@@?            .\n.   YYYYY7          !YJJJJ.            :~!7??7!^:                 .^!7??7!~:                   ^YJJJY~            .\n.                                                                                                                 .\n.                                                                                                                 .\n.                                                                                                                 .\n.                                  ………………               …………………………………………                  …………………………………………        .\n.   PBGGB??                      7&######&5            :B##############&5               .G#################^      .\n.   &@@@@5                      ?@@@@@@@@@@           :@@@@@@@@@@@@@@@@@G               &@@@@@@@@@@@@ @@@@@^      .\n.   PBBBBJ                 !!!!!JPPPPPPPPPY !!!!!     :&@@@@P?JJJJJJJJJJJJJJ?      :JJJJJJJJJJJJJJJJJJJJJJ.       .\n.   ~~~~~:                .#@@@@Y          ~@@@@@~    :&@@@@7           ~@@@&.      ^@@@@.                        .\n.   #@@@@Y                .#@@@@G?JJJJJJJJ?5@@@@@~    :&@@@@7   !JJJJJJJJJJJJ?     :JJJJJJJJJJJJJJJJJ!!           .\n.   #@@@@Y                .#@@@@@@@@@@@@@@@@@@@@@@~   :&@@@@7   G@@@@@@@@G &@@             @@@@@@@@@@P            .\n.   #@@@@Y                .#@@@@&##########&@@@@@~    :&@@@@7   7YYYYYYYYJ???7             JYYYYYYYYYYYYJ???7     .\n.   #@@@@Y                .#@@@@5 ........ !@@@@@~    :&@@@@7            ~@@@&.                         !@@@#     .\n.   #@@@@#5PPPPPPPPPJJ    .#@@@@Y          !@@@@@~    :&@@@@P7??????????JYY5J      .?????????? ???????JYY5J       .\n.   &@@@@@@@@@@@@@@@@@    .#@@@@Y          !@@@@@~    :&@@@@@@@@@@@@@@@@@G         ^@@@@@@@@@@@@@@@@@P            .\n.   PBBBBBBBBBBBBBBBBY    .#@@@@Y          !@@@@@~    :&@@@@@@@@@@@@@@@@@G         ^@@@@@@@@@@@@@@@ @@5           .\n+                                                                                                                 +\n+                                                                                                                 +\n+ + + - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - + + +\n*/\n\npragma solidity ^0.8.0;\n\nimport \"./HootBase.sol\";\n\n/**\n * @title HootBlindBox\n * @author HootLabs\n */\ncontract HootBaseERC721Provenance is HootBase {\n    event ProvenanceUpdated(string procenance);\n\n    string public provenance;\n\n    /***********************************|\n    |               Provenance          |\n    |__________________________________*/\n    function setProvenance(string calldata provenance_) external onlyOwner {\n        provenance = provenance_;\n        emit ProvenanceUpdated(provenance_);\n    }\n}"
21     },
22     "hootbase/base/erc721/HootERC721.sol": {
23       "content": "// SPDX-License-Identifier: MIT\n/*\n+ + + - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - + + +\n+                                                                                                                 +\n+                                                                                                                 +\n.                        .^!!~:                                                 .^!!^.                            .\n.                            :7Y5Y7^.                                       .^!J5Y7^.                             .\n.                              :!5B#GY7^.                             .^!JP##P7:                                  .\n.   7777??!         ~????7.        :5@@@@&GY7^.                    .^!JG#@@@@G^        7????????????^ ~????77     .\n.   @@@@@G          P@@@@@:       J#@@@@@@@@@@&G57~.          .^7YG#@@@@@@@@@@&5:      #@@@@@@@@@@@@@? P@@@@@@    .\n.   @@@@@G          5@@@@@:     :B@@@@@BJG@@@@@@@@@&B5?~:^7YG#@@@@@@@@BJP@@@ @@&!!     #@@@@@@@@@@@@@? P@@@@@@    .\n.   @@@@@G          5@@@@@:    .B@@@@#!!J@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@P   ^G@@@@@~.   ^~~~~~^J@ @@@@??:~~~~~    .\n.   @@@@@B^^^^^^^^. 5@@@@@:   J@@@@&^   G@7?@@@@@@&@@@@@@@@@@@&@J7&@@@@@#.   .B@@@@P           !@@@@@?            .\n.   @@@@@@@@@@@@@@! 5@@@@@:   5@@@@B   ^B&&@@@@@#!#@@@@@@@@@@7G&&@@@@@#!     Y@@@@#.           !@@@@@?            .\n.   @@@@@@@@@@@@@@! P@@@@@:   ?@@@@&^    !YPGPY!  !@@@@@Y&@@@@Y  ~YPGP57.    .B@@@@P           !@@@@@?            .\n.   @@@@@B~~~~~~~!!.?GPPGP:   .B@@@@&7           ?&@@@@P ?@@@@@5.          ~B@@@@&^            !@@@@@?            .\n.   @@@@@G          ^~~~~~.    :G@@@@@BY7~^^~75#@@@@@5.    J@@@@@&P?~^^^!JG@@@@@#~             !@@@@@?            .\n.   @@@@@G          5@@@@@:      ?B@@@@@@@@@@@@@@@@B!!      ^P@@@@@@@@@@@@@@@@&Y               !@@@@@?            .\n.   @@@@@G.         P@@@@@:        !YB&@@@@@@@@&BY~           ^JG#@@@@@@@@&#P7.                !@@@@@?            .\n.   YYYYY7          !YJJJJ.            :~!7??7!^:                 .^!7??7!~:                   ^YJJJY~            .\n.                                                                                                                 .\n.                                                                                                                 .\n.                                                                                                                 .\n.                                  ………………               …………………………………………                  …………………………………………        .\n.   PBGGB??                      7&######&5            :B##############&5               .G#################^      .\n.   &@@@@5                      ?@@@@@@@@@@           :@@@@@@@@@@@@@@@@@G               &@@@@@@@@@@@@ @@@@@^      .\n.   PBBBBJ                 !!!!!JPPPPPPPPPY !!!!!     :&@@@@P?JJJJJJJJJJJJJJ?      :JJJJJJJJJJJJJJJJJJJJJJ.       .\n.   ~~~~~:                .#@@@@Y          ~@@@@@~    :&@@@@7           ~@@@&.      ^@@@@.                        .\n.   #@@@@Y                .#@@@@G?JJJJJJJJ?5@@@@@~    :&@@@@7   !JJJJJJJJJJJJ?     :JJJJJJJJJJJJJJJJJ!!           .\n.   #@@@@Y                .#@@@@@@@@@@@@@@@@@@@@@@~   :&@@@@7   G@@@@@@@@G &@@             @@@@@@@@@@P            .\n.   #@@@@Y                .#@@@@&##########&@@@@@~    :&@@@@7   7YYYYYYYYJ???7             JYYYYYYYYYYYYJ???7     .\n.   #@@@@Y                .#@@@@5 ........ !@@@@@~    :&@@@@7            ~@@@&.                         !@@@#     .\n.   #@@@@#5PPPPPPPPPJJ    .#@@@@Y          !@@@@@~    :&@@@@P7??????????JYY5J      .?????????? ???????JYY5J       .\n.   &@@@@@@@@@@@@@@@@@    .#@@@@Y          !@@@@@~    :&@@@@@@@@@@@@@@@@@G         ^@@@@@@@@@@@@@@@@@P            .\n.   PBBBBBBBBBBBBBBBBY    .#@@@@Y          !@@@@@~    :&@@@@@@@@@@@@@@@@@G         ^@@@@@@@@@@@@@@@ @@5           .\n+                                                                                                                 +\n+                                                                                                                 +\n+ + + - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - + + +\n*/\n\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\";\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\nimport \"./extensions/HootBaseERC721Owners.sol\";\nimport \"../common/HootBase.sol\";\n\n/**\n * @title Hootbirds\n * @author HootLabs\n */\nabstract contract HootERC721 is\n    HootBase,\n    HootBaseERC721Owners,\n    ERC721,\n    IERC721Enumerable\n{\n    using Strings for uint256;\n\n    constructor(string memory name_, string memory symbol_)\n        ERC721(name_, symbol_)\n    {}\n\n    uint256 private _totalMinted;\n    uint256 private _totalBurned;\n\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId)\n        public\n        view\n        virtual\n        override(ERC721, IERC165)\n        returns (bool)\n    {\n        return\n            interfaceId == type(IERC721Enumerable).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /***********************************|\n    |               Config              |\n    |__________________________________*/\n    function _startTokenId() internal view virtual returns (uint256) {\n        return 1;\n    }\n\n    /***********************************|\n    |               Core                |\n    |__________________________________*/\n    function _mint(address to, uint256 tokenId) internal virtual override {\n        super._mint(to, tokenId);\n        unchecked {\n            ++_totalMinted;\n        }\n    }\n\n    /**\n     * @notice issuer have permission to burn token.\n     * @param tokenIds_ list of tokenId\n     */\n    function burn(uint256[] calldata tokenIds_)\n        external\n        onlyOwner\n        nonReentrant\n    {\n        for (uint256 i = 0; i < tokenIds_.length; i++) {\n            uint256 tokenId = tokenIds_[i];\n            require(ownerOf(tokenId) == _msgSender(), \"caller is not owner\");\n            _burn(tokenId);\n        }\n        _totalBurned += tokenIds_.length;\n    }\n\n    function totalBurned() public view returns (uint256) {\n        return _totalBurned;\n    }\n    function totalMinted() public view returns (uint256) {\n        return _totalMinted;\n    }\n\n    /***********************************|\n    |        IERC721Enumerable          |\n    |__________________________________*/\n    /**\n     * @dev Returns the total amount of tokens stored by the contract.\n     */\n    function totalSupply() external view override returns (uint256) {\n        return _totalMinted - _totalBurned;\n    }\n\n    /***********************************|\n    |        HootBaseERC721Owners       |\n    |__________________________________*/\n    function _unsafeOwnerOf(uint256 tokenID_) internal view virtual override returns (address){\n        if (_exists(tokenID_)) {\n            return this.ownerOf(tokenID_);\n        }\n        return address(0);\n    }\n    function exists(uint256 tokenId_) public view virtual override returns (bool){\n        return _exists(tokenId_);\n    }\n\n    /***********************************|\n    |               ERC721              |\n    |__________________________________*/\n    /**\n     * @notice hook function, used to intercept the transfer of token.\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual override {\n        require(!paused(), \"token transfer paused\");\n        super._beforeTokenTransfer(from, to, tokenId);\n    }\n}\n"
24     },
25     "@openzeppelin/contracts/utils/Strings.sol": {
26       "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _HEX_SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        // Inspired by OraclizeAPI's implementation - MIT licence\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\n\n        if (value == 0) {\n            return \"0\";\n        }\n        uint256 temp = value;\n        uint256 digits;\n        while (temp != 0) {\n            digits++;\n            temp /= 10;\n        }\n        bytes memory buffer = new bytes(digits);\n        while (value != 0) {\n            digits -= 1;\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\n            value /= 10;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        if (value == 0) {\n            return \"0x00\";\n        }\n        uint256 temp = value;\n        uint256 length = 0;\n        while (temp != 0) {\n            length++;\n            temp >>= 8;\n        }\n        return toHexString(value, length);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n}\n"
27     },
28     "@openzeppelin/contracts/access/Ownable.sol": {
29       "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
30     },
31     "@openzeppelin/contracts/security/ReentrancyGuard.sol": {
32       "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        // On the first call to nonReentrant, _notEntered will be true\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n\n        _;\n\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n"
33     },
34     "hootbase/base/erc721/features/HootBaseERC721URIStorage.sol": {
35       "content": "// SPDX-License-Identifier: MIT\n/*\n+ + + - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - + + +\n+                                                                                                                 +\n+                                                                                                                 +\n.                        .^!!~:                                                 .^!!^.                            .\n.                            :7Y5Y7^.                                       .^!J5Y7^.                             .\n.                              :!5B#GY7^.                             .^!JP##P7:                                  .\n.   7777??!         ~????7.        :5@@@@&GY7^.                    .^!JG#@@@@G^        7????????????^ ~????77     .\n.   @@@@@G          P@@@@@:       J#@@@@@@@@@@&G57~.          .^7YG#@@@@@@@@@@&5:      #@@@@@@@@@@@@@? P@@@@@@    .\n.   @@@@@G          5@@@@@:     :B@@@@@BJG@@@@@@@@@&B5?~:^7YG#@@@@@@@@BJP@@@ @@&!!     #@@@@@@@@@@@@@? P@@@@@@    .\n.   @@@@@G          5@@@@@:    .B@@@@#!!J@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@P   ^G@@@@@~.   ^~~~~~^J@ @@@@??:~~~~~    .\n.   @@@@@B^^^^^^^^. 5@@@@@:   J@@@@&^   G@7?@@@@@@&@@@@@@@@@@@&@J7&@@@@@#.   .B@@@@P           !@@@@@?            .\n.   @@@@@@@@@@@@@@! 5@@@@@:   5@@@@B   ^B&&@@@@@#!#@@@@@@@@@@7G&&@@@@@#!     Y@@@@#.           !@@@@@?            .\n.   @@@@@@@@@@@@@@! P@@@@@:   ?@@@@&^    !YPGPY!  !@@@@@Y&@@@@Y  ~YPGP57.    .B@@@@P           !@@@@@?            .\n.   @@@@@B~~~~~~~!!.?GPPGP:   .B@@@@&7           ?&@@@@P ?@@@@@5.          ~B@@@@&^            !@@@@@?            .\n.   @@@@@G          ^~~~~~.    :G@@@@@BY7~^^~75#@@@@@5.    J@@@@@&P?~^^^!JG@@@@@#~             !@@@@@?            .\n.   @@@@@G          5@@@@@:      ?B@@@@@@@@@@@@@@@@B!!      ^P@@@@@@@@@@@@@@@@&Y               !@@@@@?            .\n.   @@@@@G.         P@@@@@:        !YB&@@@@@@@@&BY~           ^JG#@@@@@@@@&#P7.                !@@@@@?            .\n.   YYYYY7          !YJJJJ.            :~!7??7!^:                 .^!7??7!~:                   ^YJJJY~            .\n.                                                                                                                 .\n.                                                                                                                 .\n.                                                                                                                 .\n.                                  ………………               …………………………………………                  …………………………………………        .\n.   PBGGB??                      7&######&5            :B##############&5               .G#################^      .\n.   &@@@@5                      ?@@@@@@@@@@           :@@@@@@@@@@@@@@@@@G               &@@@@@@@@@@@@ @@@@@^      .\n.   PBBBBJ                 !!!!!JPPPPPPPPPY !!!!!     :&@@@@P?JJJJJJJJJJJJJJ?      :JJJJJJJJJJJJJJJJJJJJJJ.       .\n.   ~~~~~:                .#@@@@Y          ~@@@@@~    :&@@@@7           ~@@@&.      ^@@@@.                        .\n.   #@@@@Y                .#@@@@G?JJJJJJJJ?5@@@@@~    :&@@@@7   !JJJJJJJJJJJJ?     :JJJJJJJJJJJJJJJJJ!!           .\n.   #@@@@Y                .#@@@@@@@@@@@@@@@@@@@@@@~   :&@@@@7   G@@@@@@@@G &@@             @@@@@@@@@@P            .\n.   #@@@@Y                .#@@@@&##########&@@@@@~    :&@@@@7   7YYYYYYYYJ???7             JYYYYYYYYYYYYJ???7     .\n.   #@@@@Y                .#@@@@5 ........ !@@@@@~    :&@@@@7            ~@@@&.                         !@@@#     .\n.   #@@@@#5PPPPPPPPPJJ    .#@@@@Y          !@@@@@~    :&@@@@P7??????????JYY5J      .?????????? ???????JYY5J       .\n.   &@@@@@@@@@@@@@@@@@    .#@@@@Y          !@@@@@~    :&@@@@@@@@@@@@@@@@@G         ^@@@@@@@@@@@@@@@@@P            .\n.   PBBBBBBBBBBBBBBBBY    .#@@@@Y          !@@@@@~    :&@@@@@@@@@@@@@@@@@G         ^@@@@@@@@@@@@@@@ @@5           .\n+                                                                                                                 +\n+                                                                                                                 +\n+ + + - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - + + +\n*/\n\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\";\nimport \"../../common/HootBase.sol\";\nimport \"../../../utils/HootCrypto.sol\";\nimport \"../extensions/HootBaseERC721Owners.sol\";\n\n/**\n * @title HootBaseERC721URIStorage\n * @author HootLabs\n */\nabstract contract HootBaseERC721URIStorage is\n    HootBase,\n    HootBaseERC721Owners,\n    HootCrypto,\n    IERC721,\n    IERC721Metadata\n{\n    using Strings for uint256;\n\n    event BaseURIChanged(string uri);\n    event TokenHashSet(uint256 tokenId, bytes32 tokenHash);\n\n    string private _preURI;\n    // Optional mapping for token URIs\n    mapping(uint256 => bytes32) private _tokenHashes;\n\n    function _baseURI(\n        uint256 /* tokenId_*/\n    ) internal view virtual returns (string memory) {\n        return _preURI;\n    }\n\n    /**\n     * @notice set base URI\n     * This process is under the supervision of the community.\n     */\n    function setBaseURI(string calldata uri_) external onlyOwner {\n        _preURI = uri_;\n        emit BaseURIChanged(uri_);\n    }\n\n    /**\n     * @notice setTokenHash is used to set the ipfs hash of the token\n     * This process is under the supervision of the community.\n     */\n    function setTokenHash(uint256 tokenId_, bytes32 tokenHash_)\n        external\n        atLeastManager\n    {\n        require(this.exists(tokenId_), \"token is not exist\");\n        _tokenHashes[tokenId_] = tokenHash_;\n        emit TokenHashSet(tokenId_, tokenHash_);\n    }\n    /**\n     * @notice setTokenHashBatch is used to set the ipfs hash of the token\n     * This process is under the supervision of the community.\n     */\n    function setTokenHashBatch(uint256[] calldata tokenIds_, bytes32[] calldata tokenHashes_)\n        external\n        atLeastManager\n    {\n        require(tokenIds_.length > 0, \"no token id\");\n        require(tokenIds_.length == tokenHashes_.length, \"token id array and token hash array have different lengths\");\n        unchecked {\n            for (uint256 i = 0; i < tokenIds_.length; i++) {\n                uint256 tokenId = tokenIds_[i];\n                require(this.exists(tokenId), \"token is not exist\");\n                _tokenHashes[tokenId] = tokenHashes_[i];\n                emit TokenHashSet(tokenId, tokenHashes_[i]);\n            }\n        }\n    }\n\n    function tokenURI(uint256 tokenId_)\n        public\n        view\n        virtual\n        override\n        returns (string memory)\n    {\n        require(this.exists(tokenId_), \"token is not exist\");\n\n        bytes32 tokenHash = _tokenHashes[tokenId_];\n        // If both are set, concatenate the baseURI and tokenURI (via abi.encodePacked).\n        if (tokenHash == \"\") {\n            string memory baseURI = _baseURI(tokenId_);\n            return\n                bytes(baseURI).length > 0\n                    ? string(abi.encodePacked(baseURI, tokenId_.toString()))\n                    : \"\";\n        }\n        return string(abi.encodePacked(\"ipfs://\", cidv0(tokenHash)));\n    }\n\n    function unsafeTokenURIBatch(uint256[] calldata tokenIds_)\n        public\n        view\n        virtual\n        returns (string[] memory)\n    {\n        string[] memory uris = new string[](tokenIds_.length);\n        for (uint256 i = 0; i < tokenIds_.length; i++) {\n            uint256 tokenId = tokenIds_[i];\n            if (!this.exists(tokenId)) {\n                uris[i] = \"\";\n                continue;\n            }\n            bytes32 tokenHash = _tokenHashes[tokenId];\n            // If both are set, concatenate the baseURI and tokenURI (via abi.encodePacked).\n            if (tokenHash == \"\") {\n                string memory baseURI = _baseURI(tokenId);\n                uris[i] = bytes(baseURI).length > 0\n                    ? string(abi.encodePacked(baseURI, tokenId.toString()))\n                    : \"\";\n                continue;\n            }\n            uris[i] = string(abi.encodePacked(\"ipfs://\", cidv0(tokenHash)));\n        }\n        return uris;\n    }\n}\n"
36     },
37     "hootbase/base/erc721/extensions/HootBaseERC721Owners.sol": {
38       "content": "// SPDX-License-Identifier: MIT\n/*\n+ + + - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - + + +\n+                                                                                                                 +\n+                                                                                                                 +\n.                        .^!!~:                                                 .^!!^.                            .\n.                            :7Y5Y7^.                                       .^!J5Y7^.                             .\n.                              :!5B#GY7^.                             .^!JP##P7:                                  .\n.   7777??!         ~????7.        :5@@@@&GY7^.                    .^!JG#@@@@G^        7????????????^ ~????77     .\n.   @@@@@G          P@@@@@:       J#@@@@@@@@@@&G57~.          .^7YG#@@@@@@@@@@&5:      #@@@@@@@@@@@@@? P@@@@@@    .\n.   @@@@@G          5@@@@@:     :B@@@@@BJG@@@@@@@@@&B5?~:^7YG#@@@@@@@@BJP@@@ @@&!!     #@@@@@@@@@@@@@? P@@@@@@    .\n.   @@@@@G          5@@@@@:    .B@@@@#!!J@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@P   ^G@@@@@~.   ^~~~~~^J@ @@@@??:~~~~~    .\n.   @@@@@B^^^^^^^^. 5@@@@@:   J@@@@&^   G@7?@@@@@@&@@@@@@@@@@@&@J7&@@@@@#.   .B@@@@P           !@@@@@?            .\n.   @@@@@@@@@@@@@@! 5@@@@@:   5@@@@B   ^B&&@@@@@#!#@@@@@@@@@@7G&&@@@@@#!     Y@@@@#.           !@@@@@?            .\n.   @@@@@@@@@@@@@@! P@@@@@:   ?@@@@&^    !YPGPY!  !@@@@@Y&@@@@Y  ~YPGP57.    .B@@@@P           !@@@@@?            .\n.   @@@@@B~~~~~~~!!.?GPPGP:   .B@@@@&7           ?&@@@@P ?@@@@@5.          ~B@@@@&^            !@@@@@?            .\n.   @@@@@G          ^~~~~~.    :G@@@@@BY7~^^~75#@@@@@5.    J@@@@@&P?~^^^!JG@@@@@#~             !@@@@@?            .\n.   @@@@@G          5@@@@@:      ?B@@@@@@@@@@@@@@@@B!!      ^P@@@@@@@@@@@@@@@@&Y               !@@@@@?            .\n.   @@@@@G.         P@@@@@:        !YB&@@@@@@@@&BY~           ^JG#@@@@@@@@&#P7.                !@@@@@?            .\n.   YYYYY7          !YJJJJ.            :~!7??7!^:                 .^!7??7!~:                   ^YJJJY~            .\n.                                                                                                                 .\n.                                                                                                                 .\n.                                                                                                                 .\n.                                  ………………               …………………………………………                  …………………………………………        .\n.   PBGGB??                      7&######&5            :B##############&5               .G#################^      .\n.   &@@@@5                      ?@@@@@@@@@@           :@@@@@@@@@@@@@@@@@G               &@@@@@@@@@@@@ @@@@@^      .\n.   PBBBBJ                 !!!!!JPPPPPPPPPY !!!!!     :&@@@@P?JJJJJJJJJJJJJJ?      :JJJJJJJJJJJJJJJJJJJJJJ.       .\n.   ~~~~~:                .#@@@@Y          ~@@@@@~    :&@@@@7           ~@@@&.      ^@@@@.                        .\n.   #@@@@Y                .#@@@@G?JJJJJJJJ?5@@@@@~    :&@@@@7   !JJJJJJJJJJJJ?     :JJJJJJJJJJJJJJJJJ!!           .\n.   #@@@@Y                .#@@@@@@@@@@@@@@@@@@@@@@~   :&@@@@7   G@@@@@@@@G &@@             @@@@@@@@@@P            .\n.   #@@@@Y                .#@@@@&##########&@@@@@~    :&@@@@7   7YYYYYYYYJ???7             JYYYYYYYYYYYYJ???7     .\n.   #@@@@Y                .#@@@@5 ........ !@@@@@~    :&@@@@7            ~@@@&.                         !@@@#     .\n.   #@@@@#5PPPPPPPPPJJ    .#@@@@Y          !@@@@@~    :&@@@@P7??????????JYY5J      .?????????? ???????JYY5J       .\n.   &@@@@@@@@@@@@@@@@@    .#@@@@Y          !@@@@@~    :&@@@@@@@@@@@@@@@@@G         ^@@@@@@@@@@@@@@@@@P            .\n.   PBBBBBBBBBBBBBBBBY    .#@@@@Y          !@@@@@~    :&@@@@@@@@@@@@@@@@@G         ^@@@@@@@@@@@@@@@ @@5           .\n+                                                                                                                 +\n+                                                                                                                 +\n+ + + - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - + + +\n*/\n\npragma solidity ^0.8.0;\n\n/**\n * @title HootBaseERC721Refund\n * @author HootLabs\n */\nabstract contract HootBaseERC721Owners {\n    /***********************************|\n    |               abstract            |\n    |__________________________________*/\n    function _unsafeOwnerOf(uint256 tokenId_)\n        internal\n        view\n        virtual\n        returns (address);\n\n    /***********************************|\n    |               Core                |\n    |__________________________________*/\n    function exists(uint256 tokenId_) public view virtual returns (bool) {\n        return _unsafeOwnerOf(tokenId_) != address(0);\n    }\n\n    function ownersOf(uint256[] calldata tokenIDs_)\n        external\n        view\n        virtual\n        returns (address[] memory)\n    {\n        address[] memory owners = new address[](tokenIDs_.length);\n        for (uint256 i = 0; i < tokenIDs_.length; ++i) {\n            owners[i] = _unsafeOwnerOf(tokenIDs_[i]);\n        }\n        return owners;\n    }\n}\n"
39     },
40     "hootbase/base/common/HootBase.sol": {
41       "content": "// SPDX-License-Identifier: MIT\n/*\n+ + + - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - + + +\n+                                                                                                                 +\n+                                                                                                                 +\n.                        .^!!~:                                                 .^!!^.                            .\n.                            :7Y5Y7^.                                       .^!J5Y7^.                             .\n.                              :!5B#GY7^.                             .^!JP##P7:                                  .\n.   7777??!         ~????7.        :5@@@@&GY7^.                    .^!JG#@@@@G^        7????????????^ ~????77     .\n.   @@@@@G          P@@@@@:       J#@@@@@@@@@@&G57~.          .^7YG#@@@@@@@@@@&5:      #@@@@@@@@@@@@@? P@@@@@@    .\n.   @@@@@G          5@@@@@:     :B@@@@@BJG@@@@@@@@@&B5?~:^7YG#@@@@@@@@BJP@@@ @@&!!     #@@@@@@@@@@@@@? P@@@@@@    .\n.   @@@@@G          5@@@@@:    .B@@@@#!!J@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@P   ^G@@@@@~.   ^~~~~~^J@ @@@@??:~~~~~    .\n.   @@@@@B^^^^^^^^. 5@@@@@:   J@@@@&^   G@7?@@@@@@&@@@@@@@@@@@&@J7&@@@@@#.   .B@@@@P           !@@@@@?            .\n.   @@@@@@@@@@@@@@! 5@@@@@:   5@@@@B   ^B&&@@@@@#!#@@@@@@@@@@7G&&@@@@@#!     Y@@@@#.           !@@@@@?            .\n.   @@@@@@@@@@@@@@! P@@@@@:   ?@@@@&^    !YPGPY!  !@@@@@Y&@@@@Y  ~YPGP57.    .B@@@@P           !@@@@@?            .\n.   @@@@@B~~~~~~~!!.?GPPGP:   .B@@@@&7           ?&@@@@P ?@@@@@5.          ~B@@@@&^            !@@@@@?            .\n.   @@@@@G          ^~~~~~.    :G@@@@@BY7~^^~75#@@@@@5.    J@@@@@&P?~^^^!JG@@@@@#~             !@@@@@?            .\n.   @@@@@G          5@@@@@:      ?B@@@@@@@@@@@@@@@@B!!      ^P@@@@@@@@@@@@@@@@&Y               !@@@@@?            .\n.   @@@@@G.         P@@@@@:        !YB&@@@@@@@@&BY~           ^JG#@@@@@@@@&#P7.                !@@@@@?            .\n.   YYYYY7          !YJJJJ.            :~!7??7!^:                 .^!7??7!~:                   ^YJJJY~            .\n.                                                                                                                 .\n.                                                                                                                 .\n.                                                                                                                 .\n.                                  ………………               …………………………………………                  …………………………………………        .\n.   PBGGB??                      7&######&5            :B##############&5               .G#################^      .\n.   &@@@@5                      ?@@@@@@@@@@           :@@@@@@@@@@@@@@@@@G               &@@@@@@@@@@@@ @@@@@^      .\n.   PBBBBJ                 !!!!!JPPPPPPPPPY !!!!!     :&@@@@P?JJJJJJJJJJJJJJ?      :JJJJJJJJJJJJJJJJJJJJJJ.       .\n.   ~~~~~:                .#@@@@Y          ~@@@@@~    :&@@@@7           ~@@@&.      ^@@@@.                        .\n.   #@@@@Y                .#@@@@G?JJJJJJJJ?5@@@@@~    :&@@@@7   !JJJJJJJJJJJJ?     :JJJJJJJJJJJJJJJJJ!!           .\n.   #@@@@Y                .#@@@@@@@@@@@@@@@@@@@@@@~   :&@@@@7   G@@@@@@@@G &@@             @@@@@@@@@@P            .\n.   #@@@@Y                .#@@@@&##########&@@@@@~    :&@@@@7   7YYYYYYYYJ???7             JYYYYYYYYYYYYJ???7     .\n.   #@@@@Y                .#@@@@5 ........ !@@@@@~    :&@@@@7            ~@@@&.                         !@@@#     .\n.   #@@@@#5PPPPPPPPPJJ    .#@@@@Y          !@@@@@~    :&@@@@P7??????????JYY5J      .?????????? ???????JYY5J       .\n.   &@@@@@@@@@@@@@@@@@    .#@@@@Y          !@@@@@~    :&@@@@@@@@@@@@@@@@@G         ^@@@@@@@@@@@@@@@@@P            .\n.   PBBBBBBBBBBBBBBBBY    .#@@@@Y          !@@@@@~    :&@@@@@@@@@@@@@@@@@G         ^@@@@@@@@@@@@@@@ @@5           .\n+                                                                                                                 +\n+                                                                                                                 +\n+ + + - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - + + +\n*/\n\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\n\ncontract HootBase is ReentrancyGuard, Pausable, Ownable {\n    event PermissionChanged(address indexed addr, uint8 permission);\n\n    event Deposit(address indexed account, uint256 amount);\n    event Withdraw(address indexed account, uint256 amount);\n    event ContractParsed();\n    event ContractUnparsed();\n    event ContractSealed();\n\n    uint8 public constant NO_PERMISSION = 0;\n    uint8 public constant MANAGER = 1;\n    uint8 public constant MAINTAINER = 2;\n    uint8 public constant OPERATOR = 3;\n\n    mapping(address => uint8) private _permissions;\n    address[] maintainers;\n\n    bool public contractSealed = false;\n\n    /***********************************|\n    |               Config              |\n    |__________________________________*/\n    /**\n     * @notice setManagerAddress is used to allow the issuer to modify the maintainerAddress\n     */\n    function setPermission(address address_, uint8 permission_)\n        external\n        onlyOwner\n    {\n        if (permission_ == NO_PERMISSION) {\n            delete _permissions[address_];\n        } else {\n            _permissions[address_] = permission_;\n        }\n\n        emit PermissionChanged(address_, permission_);\n    }\n\n    function getPermissions()\n        external\n        view\n        atLeastManager\n        returns (address[] memory, uint8[] memory)\n    {\n        uint8[] memory permissions = new uint8[](maintainers.length);\n        unchecked {\n            for (uint256 i = 0; i < maintainers.length; i++) {\n                permissions[i] = _permissions[maintainers[i]];\n            }\n        }\n        return (maintainers, permissions);\n    }\n\n    function getPermission(address address_) external view returns (uint8) {\n        return _permissions[address_];\n    }\n\n    /***********************************|\n    |               Core                |\n    |__________________________________*/\n    /**\n     * @notice issuer deposit ETH into the contract. only issuer have permission\n     */\n    function deposit() external payable atLeastMaintainer nonReentrant {\n        emit Deposit(_msgSender(), msg.value);\n    }\n\n    /**\n     * issuer withdraws the ETH temporarily stored in the contract through this method.\n     */\n    function withdraw(uint256 w) external onlyOwner nonReentrant {\n        uint256 balance = address(this).balance;\n        require(w <= balance, \"balance is not enough\");\n        payable(_msgSender()).transfer(w);\n        emit Withdraw(_msgSender(), w);\n    }\n\n    /***********************************|\n    |               Basic               |\n    |__________________________________*/\n    /**\n     * @notice for the purpose of protecting user assets, under extreme conditions,\n     * the circulation of all tokens in the contract needs to be frozen.\n     * This process is under the supervision of the community.\n     */\n    function emergencyPause() external atLeastManager notSealed {\n        _pause();\n        emit ContractParsed();\n    }\n\n    /**\n     * @notice unpause the contract\n     */\n    function unpause() external atLeastManager notSealed {\n        _unpause();\n        emit ContractUnparsed();\n    }\n\n    /**\n     * @notice when the project is stable enough, the issuer will call sealContract\n     * to give up the permission to call emergencyPause and unpause.\n     */\n    function sealContract() external onlyOwner {\n        contractSealed = true;\n        emit ContractSealed();\n    }\n\n    /***********************************|\n    |               Modifier            |\n    |__________________________________*/\n    /**\n     * @notice only owner or manager has the permission to call this method\n     */\n    modifier atLeastManager() {\n        uint8 permission = _permissions[_msgSender()];\n        require(\n            owner() == _msgSender() || permission == MANAGER,\n            \"not authorized\"\n        );\n        _;\n    }\n    /**\n     * @notice only owner, manager or maintainer has the permission to call this method\n     */\n    modifier atLeastMaintainer() {\n        uint8 permission = _permissions[_msgSender()];\n        require(\n            owner() == _msgSender() ||\n                permission == MAINTAINER ||\n                permission == MANAGER,\n            \"not authorized\"\n        );\n        _;\n    }\n    /**\n     * @notice only owner, manager or maintainer or operator has the permission to call this method\n     */\n    modifier atLeastOperator() {\n        uint8 permission = _permissions[_msgSender()];\n        require(\n            owner() == _msgSender() ||\n                permission == MAINTAINER ||\n                permission == MANAGER ||\n                permission == OPERATOR,\n            \"not authorized\"\n        );\n        _;\n    }\n\n    /**\n     * @notice for security reasons, CA is not allowed to call sensitive methods.\n     */\n    modifier callerIsUser() {\n        require(tx.origin == _msgSender(), \"caller is another contract\");\n        _;\n    }\n\n    /**\n     * @notice function call is only allowed when the contract has not been sealed\n     */\n    modifier notSealed() {\n        require(!contractSealed, \"contract sealed\");\n        _;\n    }\n}\n"
42     },
43     "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
44       "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
45     },
46     "@openzeppelin/contracts/utils/Address.sol": {
47       "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n                /// @solidity memory-safe-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
48     },
49     "@openzeppelin/contracts/token/ERC721/IERC721.sol": {
50       "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
51     },
52     "@openzeppelin/contracts/security/Pausable.sol": {
53       "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
54     },
55     "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol": {
56       "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC721/extensions/IERC721Enumerable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Enumerable is IERC721 {\n    /**\n     * @dev Returns the total amount of tokens stored by the contract.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\n     */\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n     * Use along with {totalSupply} to enumerate all tokens.\n     */\n    function tokenByIndex(uint256 index) external view returns (uint256);\n}\n"
57     },
58     "@openzeppelin/contracts/token/ERC721/ERC721.sol": {
59       "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC721.sol\";\nimport \"./IERC721Receiver.sol\";\nimport \"./extensions/IERC721Metadata.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/Strings.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\n    using Address for address;\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to owner address\n    mapping(uint256 => address) private _owners;\n\n    // Mapping owner address to token count\n    mapping(address => uint256) private _balances;\n\n    // Mapping from token ID to approved address\n    mapping(uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        require(owner != address(0), \"ERC721: address zero is not a valid owner\");\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        address owner = _owners[tokenId];\n        require(owner != address(0), \"ERC721: invalid token ID\");\n        return owner;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireMinted(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual override {\n        address owner = ERC721.ownerOf(tokenId);\n        require(to != owner, \"ERC721: approval to current owner\");\n\n        require(\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\n            \"ERC721: approve caller is not token owner nor approved for all\"\n        );\n\n        _approve(to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        _requireMinted(tokenId);\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        //solhint-disable-next-line max-line-length\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner nor approved\");\n\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) public virtual override {\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner nor approved\");\n        _safeTransfer(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal virtual {\n        _transfer(from, to, tokenId);\n        require(_checkOnERC721Received(from, to, tokenId, data), \"ERC721: transfer to non ERC721Receiver implementer\");\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     * and stop existing when they are burned (`_burn`).\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return _owners[tokenId] != address(0);\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\n        address owner = ERC721.ownerOf(tokenId);\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Safely mints `tokenId` and transfers it to `to`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal virtual {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal virtual {\n        _mint(to, tokenId);\n        require(\n            _checkOnERC721Received(address(0), to, tokenId, data),\n            \"ERC721: transfer to non ERC721Receiver implementer\"\n        );\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal virtual {\n        require(to != address(0), \"ERC721: mint to the zero address\");\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        _beforeTokenTransfer(address(0), to, tokenId);\n\n        _balances[to] += 1;\n        _owners[tokenId] = to;\n\n        emit Transfer(address(0), to, tokenId);\n\n        _afterTokenTransfer(address(0), to, tokenId);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        address owner = ERC721.ownerOf(tokenId);\n\n        _beforeTokenTransfer(owner, address(0), tokenId);\n\n        // Clear approvals\n        _approve(address(0), tokenId);\n\n        _balances[owner] -= 1;\n        delete _owners[tokenId];\n\n        emit Transfer(owner, address(0), tokenId);\n\n        _afterTokenTransfer(owner, address(0), tokenId);\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n        require(to != address(0), \"ERC721: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, tokenId);\n\n        // Clear approvals from the previous owner\n        _approve(address(0), tokenId);\n\n        _balances[from] -= 1;\n        _balances[to] += 1;\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        _afterTokenTransfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * Emits an {Approval} event.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _tokenApprovals[tokenId] = to;\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(\n        address owner,\n        address operator,\n        bool approved\n    ) internal virtual {\n        require(owner != operator, \"ERC721: approve to caller\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` has not been minted yet.\n     */\n    function _requireMinted(uint256 tokenId) internal view virtual {\n        require(_exists(tokenId), \"ERC721: invalid token ID\");\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n     * The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) private returns (bool) {\n        if (to.isContract()) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                return retval == IERC721Receiver.onERC721Received.selector;\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert(\"ERC721: transfer to non ERC721Receiver implementer\");\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {}\n}\n"
60     },
61     "hootbase/utils/HootCrypto.sol": {
62       "content": "// SPDX-License-Identifier: MIT\n/*\n+ + + - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - + + +\n+                                                                                                                 +\n+                                                                                                                 +\n.                        .^!!~:                                                 .^!!^.                            .\n.                            :7Y5Y7^.                                       .^!J5Y7^.                             .\n.                              :!5B#GY7^.                             .^!JP##P7:                                  .\n.   7777??!         ~????7.        :5@@@@&GY7^.                    .^!JG#@@@@G^        7????????????^ ~????77     .\n.   @@@@@G          P@@@@@:       J#@@@@@@@@@@&G57~.          .^7YG#@@@@@@@@@@&5:      #@@@@@@@@@@@@@? P@@@@@@    .\n.   @@@@@G          5@@@@@:     :B@@@@@BJG@@@@@@@@@&B5?~:^7YG#@@@@@@@@BJP@@@ @@&!!     #@@@@@@@@@@@@@? P@@@@@@    .\n.   @@@@@G          5@@@@@:    .B@@@@#!!J@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@P   ^G@@@@@~.   ^~~~~~^J@ @@@@??:~~~~~    .\n.   @@@@@B^^^^^^^^. 5@@@@@:   J@@@@&^   G@7?@@@@@@&@@@@@@@@@@@&@J7&@@@@@#.   .B@@@@P           !@@@@@?            .\n.   @@@@@@@@@@@@@@! 5@@@@@:   5@@@@B   ^B&&@@@@@#!#@@@@@@@@@@7G&&@@@@@#!     Y@@@@#.           !@@@@@?            .\n.   @@@@@@@@@@@@@@! P@@@@@:   ?@@@@&^    !YPGPY!  !@@@@@Y&@@@@Y  ~YPGP57.    .B@@@@P           !@@@@@?            .\n.   @@@@@B~~~~~~~!!.?GPPGP:   .B@@@@&7           ?&@@@@P ?@@@@@5.          ~B@@@@&^            !@@@@@?            .\n.   @@@@@G          ^~~~~~.    :G@@@@@BY7~^^~75#@@@@@5.    J@@@@@&P?~^^^!JG@@@@@#~             !@@@@@?            .\n.   @@@@@G          5@@@@@:      ?B@@@@@@@@@@@@@@@@B!!      ^P@@@@@@@@@@@@@@@@&Y               !@@@@@?            .\n.   @@@@@G.         P@@@@@:        !YB&@@@@@@@@&BY~           ^JG#@@@@@@@@&#P7.                !@@@@@?            .\n.   YYYYY7          !YJJJJ.            :~!7??7!^:                 .^!7??7!~:                   ^YJJJY~            .\n.                                                                                                                 .\n.                                                                                                                 .\n.                                                                                                                 .\n.                                  ………………               …………………………………………                  …………………………………………        .\n.   PBGGB??                      7&######&5            :B##############&5               .G#################^      .\n.   &@@@@5                      ?@@@@@@@@@@           :@@@@@@@@@@@@@@@@@G               &@@@@@@@@@@@@ @@@@@^      .\n.   PBBBBJ                 !!!!!JPPPPPPPPPY !!!!!     :&@@@@P?JJJJJJJJJJJJJJ?      :JJJJJJJJJJJJJJJJJJJJJJ.       .\n.   ~~~~~:                .#@@@@Y          ~@@@@@~    :&@@@@7           ~@@@&.      ^@@@@.                        .\n.   #@@@@Y                .#@@@@G?JJJJJJJJ?5@@@@@~    :&@@@@7   !JJJJJJJJJJJJ?     :JJJJJJJJJJJJJJJJJ!!           .\n.   #@@@@Y                .#@@@@@@@@@@@@@@@@@@@@@@~   :&@@@@7   G@@@@@@@@G &@@             @@@@@@@@@@P            .\n.   #@@@@Y                .#@@@@&##########&@@@@@~    :&@@@@7   7YYYYYYYYJ???7             JYYYYYYYYYYYYJ???7     .\n.   #@@@@Y                .#@@@@5 ........ !@@@@@~    :&@@@@7            ~@@@&.                         !@@@#     .\n.   #@@@@#5PPPPPPPPPJJ    .#@@@@Y          !@@@@@~    :&@@@@P7??????????JYY5J      .?????????? ???????JYY5J       .\n.   &@@@@@@@@@@@@@@@@@    .#@@@@Y          !@@@@@~    :&@@@@@@@@@@@@@@@@@G         ^@@@@@@@@@@@@@@@@@P            .\n.   PBBBBBBBBBBBBBBBBY    .#@@@@Y          !@@@@@~    :&@@@@@@@@@@@@@@@@@G         ^@@@@@@@@@@@@@@@ @@5           .\n+                                                                                                                 +\n+                                                                                                                 +\n+ + + - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - + + +\n*/\n\npragma solidity ^0.8.0;\n\n/**\n * @title HootCrypto\n * @author HootLabs\n */\ncontract HootCrypto {\n    bytes constant ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz';\n    /**\n     * @notice base58 is used to calculate the base58 encoded value of given bytes.\n     * This algorithm was migrated from github.com/mr-tron/base58 to solidity by our developers.\n     * Note that it is not yet optimized for gas, so please use it only in read-only scenarios.\n     * @param data_ bytes.\n     * @return base58 encoded results.\n     */\n    function base58(bytes memory data_) public pure returns (bytes memory){\n        uint256 size = data_.length;\n        uint256 zeroCount;\n        while (zeroCount < size && data_[zeroCount] == 0) {\n            zeroCount++;\n        }\n        size = zeroCount + (size - zeroCount)*8351/6115+1;\n        bytes memory slot = new bytes(size);\n        uint32 carry;\n        int256 m;\n        int256 high = int256(size) - 1;\n        for (uint256 i = 0; i < data_.length; i++) {\n            m = int256(size - 1);\n            for (carry = uint8(data_[i]); m > high || carry != 0; m--) {\n                carry = carry + 256 * uint8(slot[uint256(m)]);\n                slot[uint256(m)] = bytes1(uint8(carry % 58));\n                carry /= 58;\n            }\n            high = m;\n        }\n        uint256 n;\n        for (n = zeroCount; n < size && slot[n] == 0; n++) {}\n        size = slot.length - (n - zeroCount);\n        bytes memory out = new bytes(size);\n        for (uint256 i = 0; i < size; i++) {\n            uint256 j = i + n - zeroCount;\n            out[i] = ALPHABET[uint8(slot[j])];\n        }\n        return out;\n    }\n\n    /**\n     * @notice cidv0 is used to convert sha256 hash to cid(v0) used by IPFS.\n     * @param sha256Hash_ sha256 hash generated by anything.\n     * @return IPFS cid that meets the version0 specification.\n     */\n    function cidv0(bytes32 sha256Hash_) public pure returns (string memory) {\n        bytes memory hashString = new bytes(34);\n        hashString[0] = 0x12;\n        hashString[1] = 0x20;\n        for (uint256 i = 0; i < sha256Hash_.length; i++) {\n            hashString[i+2] = sha256Hash_[i];\n        }\n        return string(base58(hashString));\n    }\n}\n\n"
63     },
64     "@openzeppelin/contracts/utils/introspection/IERC165.sol": {
65       "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
66     },
67     "@openzeppelin/contracts/utils/introspection/ERC165.sol": {
68       "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
69     },
70     "@openzeppelin/contracts/utils/Context.sol": {
71       "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
72     },
73     "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
74       "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
75     }
76   },
77   "settings": {
78     "optimizer": {
79       "enabled": true,
80       "runs": 200
81     },
82     "outputSelection": {
83       "*": {
84         "*": [
85           "evm.bytecode",
86           "evm.deployedBytecode",
87           "abi"
88         ]
89       }
90     }
91   }
92 }}