<\contract\> 
contract TokenBridge {
     IERC20 public tokenA;
     IERC20 public tokenB;

     function crossBridge(address recipient, uint amount) external {
         tokenA.transferFrom(msg.sender, address(this), amount);
         tokenB.transfer(recipient, amount);
     }
}
<\contract\> 

Potential vulnerabilities:
1) Inconsistent state update: The contract does not check if the transfer of tokens is successful before updating the state variables.
2) Atomicity violation: The transfer of tokens for tokenA and tokenB is not done atomically, which can lead to inconsistencies if one transfer fails and the other succeeds.
3) Cross bridge inconsistency: There is a potential risk of inconsistent balances between tokenA and tokenB if the transfer of tokens is not done properly.