==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: FeedCrowdsale
Function name: fallback
PC address: 1297
Estimated Gas Usage: 28146 - 159366
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/0x6d96e02859ad15727da401f0cb7b6a6e44702409.sol:231

token.transfer(beneficiary,tokens)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0000000000000000000000000101010100010101010101010001010101000101000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, decoded_data: , value: 0x0
Caller: [SOMEGUY], function: blockHashAddendsInexpansible(uint256), txdata: 0x00000000, value: 0x7cc2e55e72c30000

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: FeedCrowdsale
Function name: buyTokens(address)
PC address: 1297
Estimated Gas Usage: 28118 - 159338
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/0x6d96e02859ad15727da401f0cb7b6a6e44702409.sol:231

token.transfer(beneficiary,tokens)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0000000000000000000000000020010101010104010001010101020101010100000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, decoded_data: , value: 0x0
Caller: [SOMEGUY], function: buyTokens(address), txdata: 0xec8ac4d804040404040404040404040401, value: 0x7cc2e55e72c30000

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: FeedCrowdsale
Function name: fallback
PC address: 1382
Estimated Gas Usage: 28146 - 159366
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/0x6d96e02859ad15727da401f0cb7b6a6e44702409.sol:233

owner

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0000000000000000000000000101010101010101010101010101010100010101000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, decoded_data: , value: 0x0
Caller: [SOMEGUY], function: blockHashAddendsInexpansible(uint256), txdata: 0x00000000, value: 0x7cc2e55e72c30000

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: FeedCrowdsale
Function name: buyTokens(address)
PC address: 1382
Estimated Gas Usage: 28118 - 159338
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/0x6d96e02859ad15727da401f0cb7b6a6e44702409.sol:233

owner

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0000000000000000000000000402010001010101020104018010010000010101000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, decoded_data: , value: 0x0
Caller: [SOMEGUY], function: buyTokens(address), txdata: 0xec8ac4d802020202020202020202020201, value: 0x7cc2e55e72c30000

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: FeedCrowdsale
Function name: fallback
PC address: 1503
Estimated Gas Usage: 28146 - 159366
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/0x6d96e02859ad15727da401f0cb7b6a6e44702409.sol:234

TOKENS_SOLD

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0000000000000000000000000101010101010101010101010101010100010101000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, decoded_data: , value: 0x0
Caller: [SOMEGUY], function: blockHashAddendsInexpansible(uint256), txdata: 0x00000000, value: 0x7cc2e55e72c30000

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: FeedCrowdsale
Function name: buyTokens(address)
PC address: 1503
Estimated Gas Usage: 28118 - 159338
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/0x6d96e02859ad15727da401f0cb7b6a6e44702409.sol:234

TOKENS_SOLD

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0000000000000000000000000402010001010101020104018010010000010101000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, decoded_data: , value: 0x0
Caller: [SOMEGUY], function: buyTokens(address), txdata: 0xec8ac4d802020202020202020202020201, value: 0x7cc2e55e72c30000

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: FeedCrowdsale
Function name: fallback
PC address: 1522
Estimated Gas Usage: 27793 - 159013
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/0x6d96e02859ad15727da401f0cb7b6a6e44702409.sol:234

TOKENS_SOLD = TOKENS_SOLD.add(tokens)

--------------------
Initial State:

Account: [CREATOR], balance: 0x40000000000000002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0000000000000000000000000101010101010101020001800200020101100101000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, decoded_data: , value: 0x0
Caller: [CREATOR], function: unknown, txdata: 0x, decoded_data: , value: 0x7cc2e55e72c30000

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: FeedCrowdsale
Function name: getUnsoldTokensBack()
PC address: 1821
Estimated Gas Usage: 6897 - 77531
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/0x6d96e02859ad15727da401f0cb7b6a6e44702409.sol:276

token.balanceOf(address(this))

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: fefefefefefefefefefefefeaffeaffeaffeaffeaffeaffeaffeaffeaffeaffefefefefefefefefefefefefedeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, decoded_data: , value: 0x0
Caller: [CREATOR], function: getUnsoldTokensBack(), txdata: 0x047fe8b3, value: 0x0

==== Unprotected Ether Withdrawal ====
SWC ID: 105
Severity: High
Contract: FeedCrowdsale
Function name: getUnsoldTokensBack()
PC address: 1821
Estimated Gas Usage: 6897 - 77531
Any sender can withdraw Ether from the contract account.
Arbitrary senders other than the contract creator can profitably extract Ether from the contract account. Verify the business logic carefully and make sure that appropriate security controls are in place to prevent unexpected loss of funds.
--------------------
In file: /tmp/0x6d96e02859ad15727da401f0cb7b6a6e44702409.sol:276

token.balanceOf(address(this))

--------------------
Initial State:

Account: [CREATOR], balance: 0x1e702c53e76d20000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x2, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: d8d8d8d8d8d8d8d8d8d8d8d8deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, decoded_data: , value: 0x0
Caller: [CREATOR], function: buyTokens(address), txdata: 0xec8ac4d800000000000000000000000001, decoded_data: ('0x0100000000000000000000000000000000000000',), value: 0x7cc2e55e72c30000
Caller: [ATTACKER], function: getUnsoldTokensBack(), txdata: 0x047fe8b3, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: FeedCrowdsale
Function name: getUnsoldTokensBack()
PC address: 1900
Estimated Gas Usage: 6897 - 77531
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/0x6d96e02859ad15727da401f0cb7b6a6e44702409.sol:278

token

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: afafafafafafafafafafafafaffeaffeaffeaffeaffeaffeaffeaffeaffeaffeafafafafafafafafafafafafdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, decoded_data: , value: 0x0
Caller: [CREATOR], function: getUnsoldTokensBack(), txdata: 0x047fe8b3, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: FeedCrowdsale
Function name: getUnsoldTokensBack()
PC address: 1961
Estimated Gas Usage: 6897 - 77531
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/0x6d96e02859ad15727da401f0cb7b6a6e44702409.sol:278

owner

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: afafafafafafafafafafafafaffeaffeaffeaffeaffeaffeaffeaffeaffeaffeafafafafafafafafafafafafdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, decoded_data: , value: 0x0
Caller: [CREATOR], function: getUnsoldTokensBack(), txdata: 0x047fe8b3, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: FeedCrowdsale
Function name: getUnsoldTokensBack()
PC address: 2127
Estimated Gas Usage: 6897 - 77531
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/0x6d96e02859ad15727da401f0cb7b6a6e44702409.sol:278

token.transfer(owner,contractTokenBalance)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: fefefefefefefefefefefefeaffeaffeaffeaffeaffeaffeaffeaffeaffeaffefefefefefefefefefefefefedeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, decoded_data: , value: 0x0
Caller: [CREATOR], function: getUnsoldTokensBack(), txdata: 0x047fe8b3, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: FeedCrowdsale
Function name: getUnsoldTokensBack()
PC address: 2127
Estimated Gas Usage: 6897 - 77531
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: /tmp/0x6d96e02859ad15727da401f0cb7b6a6e44702409.sol:278

token.transfer(owner,contractTokenBalance)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: dededededededededededededeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, decoded_data: , value: 0x0
Caller: [ATTACKER], function: getUnsoldTokensBack(), txdata: 0x047fe8b3, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: FeedCrowdsale
Function name: getUnsoldTokensBack()
PC address: 2127
Estimated Gas Usage: 6897 - 77531
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/0x6d96e02859ad15727da401f0cb7b6a6e44702409.sol:278

token.transfer(owner,contractTokenBalance)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: afafafafafafafafafafafafaffeaffeaffeaffeaffeaffeaffeaffeaffeaffeafafafafafafafafafafafafdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, decoded_data: , value: 0x0
Caller: [CREATOR], function: getUnsoldTokensBack(), txdata: 0x047fe8b3, value: 0x0

==== Unprotected Ether Withdrawal ====
SWC ID: 105
Severity: High
Contract: FeedCrowdsale
Function name: getUnsoldTokensBack()
PC address: 2127
Estimated Gas Usage: 6897 - 77531
Any sender can withdraw Ether from the contract account.
Arbitrary senders other than the contract creator can profitably extract Ether from the contract account. Verify the business logic carefully and make sure that appropriate security controls are in place to prevent unexpected loss of funds.
--------------------
In file: /tmp/0x6d96e02859ad15727da401f0cb7b6a6e44702409.sol:278

token.transfer(owner,contractTokenBalance)

--------------------
Initial State:

Account: [CREATOR], balance: 0x47040041800032040, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x14104080000000000, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: d8d8d8d8d8d8d8d8d8d8d8d8deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, decoded_data: , value: 0x0
Caller: [CREATOR], function: buyTokens(address), txdata: 0xec8ac4d800000000000000000000000001, decoded_data: ('0x0100000000000000000000000000000000000000',), value: 0x7cc2e55e72c30000
Caller: [ATTACKER], function: getUnsoldTokensBack(), txdata: 0x047fe8b3, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: FeedCrowdsale
Function name: fallback
PC address: 3962
Estimated Gas Usage: 27793 - 159013
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/0x6d96e02859ad15727da401f0cb7b6a6e44702409.sol:240

owner

--------------------
Initial State:

Account: [CREATOR], balance: 0x40000000000000002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0000000000000000000000000101010101010101020001800200020101100101000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, decoded_data: , value: 0x0
Caller: [CREATOR], function: unknown, txdata: 0x, decoded_data: , value: 0x7cc2e55e72c30000

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: FeedCrowdsale
Function name: fallback
PC address: 4038
Estimated Gas Usage: 27424 - 158644
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: /tmp/0x6d96e02859ad15727da401f0cb7b6a6e44702409.sol:240

owner.transfer(msg.value)

--------------------
Initial State:

Account: [CREATOR], balance: 0x40000000000000002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [CREATOR], function: unknown, txdata: 0x, decoded_data: , value: 0x13fbe85edc90000

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: FeedCrowdsale
Function name: fallback
PC address: 4038
Estimated Gas Usage: 27793 - 159013
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/0x6d96e02859ad15727da401f0cb7b6a6e44702409.sol:240

owner.transfer(msg.value)

--------------------
Initial State:

Account: [CREATOR], balance: 0x40000000000000002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0000000000000000000000000101010101010101020001800200020101100101000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, decoded_data: , value: 0x0
Caller: [CREATOR], function: unknown, txdata: 0x, decoded_data: , value: 0x7cc2e55e72c30000


