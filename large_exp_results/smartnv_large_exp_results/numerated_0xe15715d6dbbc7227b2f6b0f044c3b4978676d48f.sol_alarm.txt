<\contract\>
contract Escrow {
    address public buyer;
    address public seller;
    address public arbiter;
    uint public price;

    enum State { Created, Locked, Released, Inactive }
    State public state;

    constructor(address _seller, address _arbiter) payable {
        buyer = msg.sender;
        seller = _seller;
        arbiter = _arbiter;
        price = msg.value;
        state = State.Created;
    }

    function confirmPurchase() public payable {
        require(msg.value == price);
        require(msg.sender == buyer);
        state = State.Locked;
    }

    function confirmReceived() public {
        require(msg.sender == buyer || msg.sender == arbiter);
        state = State.Released;
        seller.transfer(price);
    }

    function refundBuyer() public {
        require(msg.sender == arbiter);
        state = State.Inactive;
        buyer.transfer(price);
    }
}
<\contract\>