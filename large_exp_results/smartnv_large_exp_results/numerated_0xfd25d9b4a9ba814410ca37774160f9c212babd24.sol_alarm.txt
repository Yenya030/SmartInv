<\contract\>
contract EscrowContract {
    address public buyer;
    address public seller;
    address public arbiter;
    uint public price;
    enum State {AWAITING_PAYMENT, AWAITING_DELIVERY, COMPLETE, REFUNDED}
    State public currentState;
    
    constructor(address _buyer, address _seller, address _arbiter, uint _price) {
        buyer = _buyer;
        seller = _seller;
        arbiter = _arbiter;
        price = _price;
        currentState = State.AWAITING_PAYMENT;
    }
    
    function makePayment() public payable {
        require(msg.sender == buyer && msg.value == price && currentState == State.AWAITING_PAYMENT, "Invalid payment");
        currentState = State.AWAITING_DELIVERY;
    }
    
    function confirmDelivery() public {
        require(msg.sender == buyer && currentState == State.AWAITING_DELIVERY, "Invalid delivery confirmation");
        seller.transfer(price);
        currentState = State.COMPLETE;
    }
    
    function refundPayment() public {
        require(msg.sender == arbiter && currentState == State.AWAITING_DELIVERY, "Invalid refund request");
        buyer.transfer(price);
        currentState = State.REFUNDED;
    }
}
<\contract\>