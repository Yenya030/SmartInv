<\contract\> 
contract Crowdsale {
         IERC20 public token;
         address public admin;
         uint public tokenPrice;
         uint public totalTokens;
         uint public tokensSold;

         constructor(IERC20 _token, uint _tokenPrice, uint _totalTokens) {
             token = _token;
             admin = msg.sender;
             tokenPrice = _tokenPrice;
             totalTokens = _totalTokens;
         }

         function buyTokens(uint _numberOfTokens) public {
             require(token.balanceOf(msg.sender) >= _numberOfTokens * tokenPrice, 
             "Not enough balance to buy tokens");
             require(tokensSold + _numberOfTokens <= totalTokens, "Not enough tokens left");

             token.transferFrom(admin, msg.sender, _numberOfTokens * tokenPrice);
             tokensSold += _numberOfTokens;
         }

         function endCrowdsale() public {
             require(msg.sender == admin, "Only admin can end the crowdsale");
             token.transfer(admin, token.balanceOf(address(this)));
         }
}
<\contract\>