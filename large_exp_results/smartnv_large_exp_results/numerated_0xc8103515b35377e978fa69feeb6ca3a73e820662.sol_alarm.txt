<\contract\>
contract TokenCrowdsale {
    uint public totalSupply;
    uint public tokensSold;
    address public admin;

    mapping(address => uint) public balances;
    mapping(address => bool) public whitelist;

    constructor(uint _totalSupply) {
        totalSupply = _totalSupply;
        admin = msg.sender;
    }

    function whitelistAddress(address _user) public {
        require(msg.sender == admin, "Only admin can whitelist addresses");
        whitelist[_user] = true;
    }

    function buyTokens(uint _amount) public {
        require(whitelist[msg.sender], "Address is not whitelisted");
        require(tokensSold + _amount <= totalSupply, "Not enough tokens left");
        balances[msg.sender] += _amount;
        tokensSold += _amount;
    }

    function withdrawTokens() public {
        require(msg.sender == admin, "Only admin can withdraw tokens");
        require(tokensSold == totalSupply, "Not all tokens have been sold");
        balances[msg.sender] = 0;
        // Transfer tokens to admin
    }
}
<\contract\>