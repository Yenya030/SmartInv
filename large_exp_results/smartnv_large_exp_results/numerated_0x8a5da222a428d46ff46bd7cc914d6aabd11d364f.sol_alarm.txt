<\Contract\>
contract TokenSale {
     address public owner;
     mapping(address => uint) public balances;
     uint public tokenPrice;
     IERC20 public token;

     constructor(address _tokenAddress, uint _price) public {
         owner = msg.sender;
         token = IERC20(_tokenAddress);
         tokenPrice = _price;
     }

     function buyTokens(uint _amount) public {
         uint cost = _amount * tokenPrice;
         require(token.balanceOf(msg.sender) >= cost, "Insufficient balance");
         token.transferFrom(msg.sender, address(this), cost);
         balances[msg.sender] += _amount;
     }

     function withdrawFunds() public {
         require(msg.sender == owner, "Only the owner can withdraw funds");
         token.transfer(owner, address(this).balance);
     }

}
<\Contract\>