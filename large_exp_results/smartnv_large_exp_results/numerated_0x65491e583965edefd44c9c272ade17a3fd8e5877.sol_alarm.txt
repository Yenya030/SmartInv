<\contract\> 
contract Auction {
    address public highestBidder;
    uint public highestBid;

    function bid() public payable {
        require(msg.value > highestBid, "Bid is not higher than the current highest bid");
        if(highestBidder != address(0)){
            payable(highestBidder).transfer(highestBid);
        }
        highestBidder = msg.sender;
        highestBid = msg.value;
    }

    function withdrawBid() public {
        require(msg.sender == highestBidder, "You are not the highest bidder");
        payable(msg.sender).transfer(highestBid);
        highestBid = 0;
    }
}
<\contract\> 

1) potential vulnerability: inconsistent state update
2) potential vulnerability: reentrancy
3) potential vulnerability: integer overflow/underflow