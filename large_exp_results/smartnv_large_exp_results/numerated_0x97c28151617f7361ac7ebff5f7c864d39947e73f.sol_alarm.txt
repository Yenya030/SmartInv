<\analyzed_contract\> 
contract PaymentProcessor {
     address public owner;
     mapping(address => uint) public balances;

     constructor() {
          owner = msg.sender;
     }

     function deposit() public payable {
          balances[msg.sender] += msg.value;
     }

     function withdraw(uint amount) public {
          require(balances[msg.sender] >= amount, "Insufficient balance");
          balances[msg.sender] -= amount;
          payable(msg.sender).transfer(amount);
     }
} 

<\analyzed_contract\>
output:
healthy