<\contract_to_analyze\>
contract MultisigWallet {
    mapping(address => uint256) balances;
    mapping(address => bool) isAdmin;
    mapping(address => bool) isOwner;

    function deposit() public payable {
        balances[msg.sender] += msg.value;
    }

    function withdraw(uint256 amount) public {
        require(balances[msg.sender] >= amount, "Insufficient balance");
        balances[msg.sender] -= amount;
        msg.sender.transfer(amount);
    }

    function addAdmin(address _admin) public {
        isAdmin[_admin] = true;
    }

    function removeAdmin(address _admin) public {
        isAdmin[_admin] = false;
    }

    function addOwner(address _owner) public {
        isOwner[_owner] = true;
    }

    function removeOwner(address _owner) public {
        isOwner[_owner] = false;
    }
}
<\contract_to_analyze\>