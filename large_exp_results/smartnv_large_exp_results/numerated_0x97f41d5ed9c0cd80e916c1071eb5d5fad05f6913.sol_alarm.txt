<\contract\>
contract EscrowContract {
    address public buyer;
    address public seller;
    address public arbiter;
    uint public amount;
    bool public buyerApproved;
    bool public sellerApproved;

    constructor(address _buyer, address _seller, address _arbiter, uint _amount) public {
        buyer = _buyer;
        seller = _seller;
        arbiter = _arbiter;
        amount = _amount;
        buyerApproved = false;
        sellerApproved = false;
    }

    function approvePayment() public {
        require(msg.sender == buyer || msg.sender == seller, "only buyer or seller can approve payment");
        
        if(msg.sender == buyer){
            buyerApproved = true;
        }

        if(msg.sender == seller){
            sellerApproved = true;
        }

        if(buyerApproved && sellerApproved){
            address(this).transfer(amount);
        }
    }

    function refundPayment() public {
        require(msg.sender == arbiter, "only arbiter can refund payment");

        address(buyer).transfer(amount);
    }
}
<\contract\>