The contract provided for analysis:

```solidity
contract Lottery {
    address public owner;
    uint public ticketPrice;
    uint public totalTickets;
    mapping(address => uint) public ticketsBought;

    constructor(uint _ticketPrice, uint _totalTickets) {
        owner = msg.sender;
        ticketPrice = _ticketPrice;
        totalTickets = _totalTickets;
    }

    function buyTickets(uint _numTickets) public payable {
        require(msg.value == ticketPrice * _numTickets, "Incorrect payment amount");
        require(_numTickets <= totalTickets, "Not enough tickets available");
        
        ticketsBought[msg.sender] += _numTickets;
        totalTickets -= _numTickets;

        // Perform some other actions related to ticket purchase
    }

    function drawWinner() public {
        require(msg.sender == owner, "Only owner can draw winner");
        
        // Select a random winner and transfer prize
    }
}
```

Output: 
1) inconsistency state update
2) insufficient gas
3) incorrect ownership