Contract to be analyzed:

contract Escrow {
      address public buyer;
      address public seller;
      address public arbiter;
      uint public price;
      bool public isPaid;
    
      constructor(address _buyer, address _seller, address _arbiter, uint _price) {
            buyer = _buyer;
            seller = _seller;
            arbiter = _arbiter;
            price = _price;
            isPaid = false;
        }
    
      function deposit() public payable {
            require(msg.sender == buyer, "Only buyer can deposit");
            require(msg.value == price, "Incorrect deposit amount");
            isPaid = true;
        }
    
      function releaseAmount() public {
            require(msg.sender == arbiter, "Only arbiter can release funds");
            require(isPaid == true, "Funds not yet deposited");
            seller.transfer(price);
        }
    
      function refundAmount() public {
            require(msg.sender == arbiter, "Only arbiter can refund funds");
            require(isPaid == true, "Funds not yet deposited");
            buyer.transfer(price);
        }
}
Output: potential vulnerabilities: 
- privilege escalation
- incorrect visibility/ownership