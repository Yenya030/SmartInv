<\contract_to_analyze\>
contract Escrow {
    address public buyer;
    address public seller;
    address public arbiter;
    uint public amount;
    bool public released;
    bool public refunded;
    
    constructor(address _seller, address _arbiter) {
        buyer = msg.sender;
        seller = _seller;
        arbiter = _arbiter;
    }
    
    function deposit() public payable {
        require(msg.sender == buyer, "Only buyer can deposit");
        amount += msg.value;
    }
    
    function release() public {
        require(msg.sender == arbiter, "Only arbiter can release funds");
        require(!released && !refunded, "Funds already released or refunded");
        payable(seller).transfer(amount);
        released = true;
    }
    
    function refund() public {
        require(msg.sender == arbiter, "Only arbiter can refund funds");
        require(!released && !refunded, "Funds already released or refunded");
        payable(buyer).transfer(amount);
        refunded = true;
    }
}
<\contract_to_analyze\>