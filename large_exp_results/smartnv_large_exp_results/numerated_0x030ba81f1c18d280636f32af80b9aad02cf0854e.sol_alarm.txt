<\contract_to_analyze\> 
contract TokenSale {
    address public owner;
    IERC20 public token;
    uint public price;
    uint public totalTokensSold;
    
    constructor(address _token, uint _price) {
        owner = msg.sender;
        token = IERC20(_token);
        price = _price;
    }
    
    function buyTokens(uint _amount) public {
        uint totalCost = _amount * price;
        require(token.balanceOf(msg.sender) >= totalCost, "Not enough balance to buy tokens");
        
        token.transferFrom(msg.sender, address(this), totalCost);
        totalTokensSold += _amount;
    }
    
    function withdrawTokens(address _to, uint _amount) public {
        require(msg.sender == owner, "Only owner can withdraw tokens");
        require(token.balanceOf(address(this)) >= _amount, "Not enough tokens in contract to withdraw");
        
        token.transfer(_to, _amount);
    }
}