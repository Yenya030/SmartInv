<\contract\> 
contract Escrow {
     address public buyer;
     address public seller;
     uint public price;
     uint public releaseTime;
     bool public released;
     bool public refunded;

    function setEscrow(address _seller, uint _price) external {
          require(msg.sender != _seller, "buyer cannot be seller");
          require(_price > 0, "price must be greater than 0");
          buyer = msg.sender;
          seller = _seller;
          price = _price;
          releaseTime = block.timestamp + 1 days;
          released = false;
          refunded = false;
      }

    function releaseFunds() external {
          require(msg.sender == buyer, "only buyer can release funds");
          require(!released, "funds already released");
          require(block.timestamp >= releaseTime, "release time not reached");
          released = true;
          payable(seller).transfer(price);
       }

    function refundFunds() external {
          require(msg.sender == seller, "only seller can refund funds");
          require(!refunded, "funds already refunded");
          require(!released, "funds already released, cannot refund");
          refunded = true;
          payable(buyer).transfer(price);
      }
}
<\contract\>