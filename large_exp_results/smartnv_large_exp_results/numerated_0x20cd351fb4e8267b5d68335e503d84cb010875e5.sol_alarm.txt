<\contract\> 
contract PaymentProcessor {
    address public owner;
    mapping(uint => uint) public payments;

    constructor() {
        owner = msg.sender;
    }

    function makePayment(uint _paymentId, uint _amount) public {
        require(msg.sender == owner, "Only owner can make payments");
        payments[_paymentId] = _amount;
    }

    function getPayment(uint _paymentId) public view returns(uint) {
        return payments[_paymentId];
    }

    function updateOwner(address _newOwner) public {
        require(msg.sender == owner, "Only owner can update owner");
        owner = _newOwner;
    }
}
<\contract\> 

<\output\> 
potential vulnerabilities: 
1) privilege escalation   
2) incorrect visibility/ownership