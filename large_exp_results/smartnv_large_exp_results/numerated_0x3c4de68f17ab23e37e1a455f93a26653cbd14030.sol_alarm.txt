<\contract\> 
contract TokenSale {
         IERC20 public token;
         address public owner;
         address public admin;
         uint public tokenPrice;
         uint public tokensSold;
         
         constructor(IERC20 _token, uint _tokenPrice) public {
              token = _token;
              owner = msg.sender;
              admin = msg.sender;
              tokenPrice = _tokenPrice;
              tokensSold = 0;
         }
         
         function buyTokens(uint _amount) public {
              uint totalAmount = _amount * tokenPrice;
              require(token.balanceOf(msg.sender) > totalAmount, "insufficient balance");
              token.transferFrom(owner, msg.sender, _amount);
              tokensSold += _amount;
         }
         
         function updatePrice(uint _newPrice) public {
              require(msg.sender == admin || msg.sender == owner, "unauthorized");
              tokenPrice = _newPrice;
         }
}
<\contract\>