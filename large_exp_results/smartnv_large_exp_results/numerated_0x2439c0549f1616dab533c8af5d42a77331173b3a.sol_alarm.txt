<\contract\> 
contract TokenSale {
     IERC20 public token;
     address public owner;
     address public beneficiary;
     uint public price;
     uint public totalTokens;
     uint public tokensSold;
     
     constructor(address _token, address _beneficiary, uint _price, uint _totalTokens) {
         token = IERC20(_token);
         owner = msg.sender;
         beneficiary = _beneficiary;
         price = _price;
         totalTokens = _totalTokens;
     }
     
     function buyTokens(uint _numTokens) public {
         require(_numTokens > 0, "Invalid number of tokens");
         require(tokensSold + _numTokens <= totalTokens, "Not enough tokens left");
         uint totalCost = _numTokens * price;
         token.transferFrom(msg.sender, beneficiary, totalCost);
         tokensSold += _numTokens;
     }
 }
<\contract\> 

Output:
9) integer overflow/underflow 
14) incorrect visibility/ownership