Contract to be analyzed:
```solidity
contract VotingSystem {
    mapping(address => uint) public votes;
    uint public totalVotes;
    address public admin;

    constructor() {
        admin = msg.sender;
    }

    function vote() public {
        votes[msg.sender]++;
        totalVotes++;
    }

    function changeAdmin(address _newAdmin) public {
        require(msg.sender == admin, "only admin can change admin");
        admin = _newAdmin;
    }

    function getWinner() public view returns (address) {
        address winner;
        uint maxVotes = 0;
        for (uint i = 0; i < totalVotes; i++) {
            if (votes[address(i)] > maxVotes) {
                maxVotes = votes[address(i)];
                winner = address(i);
            }
        }
        return winner;
    }
}
```

Output:
The potential vulnerability in the contract above is: business logic flaw