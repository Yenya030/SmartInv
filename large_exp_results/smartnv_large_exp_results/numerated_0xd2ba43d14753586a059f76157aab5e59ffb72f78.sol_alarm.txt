<\contract_to_analyze\>
contract VotingSystem {
     struct Vote {
          address voter;
          uint256 amount;
          bool voted;
          }
     mapping(address => bool) public hasVoted;
     Vote[] public votes;
  
    function vote(uint256 amount) external {
          require(amount > 0, "amount must be greater than 0");
          Vote memory newVote = Vote(msg.sender, amount, true);
          votes.push(newVote);
          hasVoted[msg.sender] = true;
      }

      function tallyVotes() external returns(uint256 totalAmount) {
          for (uint i = 0; i < votes.length; i++) {
              if (hasVoted[votes[i].voter]) {
                  totalAmount += votes[i].amount;
                  hasVoted[votes[i].voter] = false;
              }
          }
          return totalAmount;
      }
} 

<\contract_to_analyze\>