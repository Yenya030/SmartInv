<\contract_to_analyze\>
contract Escrow {
    address public buyer;
    address public seller;
    address public arbiter;
    uint public amount;
    enum State { Created, Locked, Released, InDispute }
    State public state;

    constructor(address _buyer, address _seller, address _arbiter, uint _amount) public {
        buyer = _buyer;
        seller = _seller;
        arbiter = _arbiter;
        amount = _amount;
        state = State.Created;
    }

    function lockFunds() public {
        require(msg.sender == buyer, "Only buyer can lock funds");
        require(state == State.Created, "Funds are already locked or released");
        state = State.Locked;
    }

    function releaseFunds() public {
        require(msg.sender == arbiter, "Only arbiter can release funds");
        require(state == State.Locked, "Funds are not locked or in dispute");
        state = State.Released;
    }

    function dispute() public {
        require(msg.sender == seller || msg.sender == buyer, "Only buyer or seller can dispute");
        require(state == State.Locked, "Funds are not locked");
        state = State.InDispute;
    }
}
<\contract_to_analyze\>