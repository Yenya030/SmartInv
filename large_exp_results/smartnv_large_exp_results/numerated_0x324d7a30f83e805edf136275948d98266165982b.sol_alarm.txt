Contract to analyze:

contract TokenSale {
    address public owner;
    IERC20 public token;
    uint public price;
    mapping(address => uint) public balances;

    constructor() public {
        owner = msg.sender;
        token = new ERC20Token("Example Token", "EXT");
        price = 1 ether;
    }

    function buyTokens(uint amount) public payable {
        require(msg.value == amount*price, "Incorrect payment amount");
        balances[msg.sender] += amount;
        token.transfer(msg.sender, amount);
    }

    function withdrawFunds() public {
        require(msg.sender == owner, "Only owner can withdraw funds");
        msg.sender.transfer(address(this).balance);
    }
}

Output: 
1) inconsistent state update
2) incorrect visibility/ownership