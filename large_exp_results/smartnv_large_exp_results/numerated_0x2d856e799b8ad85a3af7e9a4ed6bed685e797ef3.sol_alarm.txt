The contract provided for analysis is:

contract VotingSystem {
    struct Voter {
        uint256 weight;
        bool voted;
        address delegate;
        uint256 vote;
    }
    
    mapping(address => Voter) public voters;
    uint256 public totalVotes;
    address public admin;

    constructor() {
        admin = msg.sender;
    }

    function delegate(address to) public {
        require(!voters[msg.sender].voted, "Already voted.");
        voters[msg.sender].delegate = to;
    }

    function vote(uint256 option) public {
        require(!voters[msg.sender].voted, "Already voted.");
        voters[msg.sender].voted = true;
        voters[msg.sender].vote = option;
        totalVotes++;
    }

    function endVoting() public {
        require(msg.sender == admin, "Only admin can end voting.");
        // Calculate the winning option and perform necessary actions
    }
}

<\Vulnerabilities Output\> 
incorrect visibility/ownership