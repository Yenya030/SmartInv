<\contract\> 
contract TokenSale {
    address public owner;
    IERC20 public token;
    uint public tokenPrice;
    mapping(address => uint) public balances;

    constructor(address _token, uint _price) {
        owner = msg.sender;
        token = IERC20(_token);
        tokenPrice = _price;
    }

    function buyTokens(uint _amount) external payable {
        uint totalCost = _amount * tokenPrice;
        require(msg.value == totalCost, "Incorrect value sent");
        
        token.transfer(msg.sender, _amount);
        balances[msg.sender] += _amount;
    }

    function withdrawAll() external {
        require(msg.sender == owner, "Only owner can withdraw");
        payable(owner).transfer(address(this).balance);
    }
}
<\contract\>