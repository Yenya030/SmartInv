The contract to analyze:

contract TokenSale {
    address public owner;
    address public token;
    uint public price;
    mapping(address => uint) public balances;
    
    constructor(address _token, uint _price) {
        owner = msg.sender;
        token = _token;
        price = _price;
    }
    
    function buyTokens(uint _amount) public {
        require(msg.value == _amount * price, "Incorrect payment amount");
        balances[msg.sender] += _amount;
        // Transfer tokens to buyer
    }
    
    function withdraw() public {
        require(msg.sender == owner, "Only owner can withdraw");
        // Transfer funds to owner
    }
}

Output:
1) inconsistent state update
2) incorrect visibility/ownership