<\contract\>
contract VotingSystem {
    struct Voter {
        uint256 weight;
        bool voted;
        address delegate;
        uint256 vote;
    }

    mapping(address => Voter) public voters;
    uint256 public totalVotes;
    address public owner;

    constructor() {
        owner = msg.sender;
    }

    function delegate(address to) public {
        require(!voters[msg.sender].voted, "You have already voted.");
        require(msg.sender != to, "Self-delegation is not allowed.");

        voters[msg.sender].delegate = to;
        voters[to].weight += voters[msg.sender].weight;
    }

    function vote(uint256 option) public {
        require(!voters[msg.sender].voted, "You have already voted.");

        voters[msg.sender].voted = true;
        voters[msg.sender].vote = option;
        totalVotes += voters[msg.sender].weight;
    }

    function execute() public {
        require(msg.sender == owner, "Only the owner can execute the results.");

        // Logic to determine the winning option and execute the result
    }
}
<\contract\>