<\contract\> 
contract EscrowContract {
      address public seller;
      address public buyer;
      uint public price;

      constructor(address _seller, address _buyer, uint _price) {
            seller = _seller;
            buyer = _buyer;
            price = _price;
      }

      function deposit() external payable {
            require(msg.sender == buyer, "Only buyer can deposit funds");
            require(msg.value == price, "Incorrect amount deposited");
      }

      function releaseFunds() external {
            require(msg.sender == seller, "Only seller can release funds");
            payable(seller).transfer(price);
      }

      function refund() external {
            require(msg.sender == buyer, "Only buyer can claim refund");
            payable(buyer).transfer(price);
      }
}
<\contract\> 
Output:
1) atomicity violation
2) incorrect visibility/ownership