<\contract_to_analyze\>
contract PaymentProcessor {
         mapping(address => uint) balances;
         address public owner;
         
         function deposit() public payable {
            balances[msg.sender] += msg.value; 
         }

         function withdraw(uint amount) public {
            require(balances[msg.sender] >= amount, "Insufficient balance");
            (bool success, ) = msg.sender.call{value:amount}("");
            require(success, "Withdraw failed");
            balances[msg.sender] -= amount;
         }

         function transfer(address to, uint amount) public {
            require(balances[msg.sender] >= amount, "Insufficient balance");
            balances[to] += amount;
            balances[msg.sender] -= amount;
         }
}
<\contract_to_analyze\>