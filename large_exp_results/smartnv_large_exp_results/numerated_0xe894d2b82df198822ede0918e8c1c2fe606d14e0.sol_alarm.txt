<\contract_to_analyze\>
contract TokenSale {
    address public owner;
    IERC20 public token;
    uint public price;
    mapping(address => uint) public balances;

    constructor(IERC20 _token, uint _price) {
        owner = msg.sender;
        token = _token;
        price = _price;
    }

    function buyTokens(uint _amount) public {
        uint totalCost = _amount * price;
        require(token.balanceOf(msg.sender) >= totalCost, "Insufficient balance");
        token.transferFrom(msg.sender, owner, totalCost);
        balances[msg.sender] += _amount;
    }

    function withdraw() public {
        require(msg.sender == owner, "Only owner can withdraw");
        token.transfer(owner, token.balanceOf(address(this)));
    }
}
<\contract_to_analyze\>