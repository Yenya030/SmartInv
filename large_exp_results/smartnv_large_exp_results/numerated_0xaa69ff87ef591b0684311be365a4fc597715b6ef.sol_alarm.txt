The contract that needs to be analyzed for potential vulnerabilities is as follows:

contract TokenSale {
         address public owner;
         address public token;
         uint public tokenPrice;
         mapping(address => uint) public balances;
         
         constructor(address _token, uint _tokenPrice) {
               owner = msg.sender;
               token = _token;
               tokenPrice = _tokenPrice;
         }

         function buyTokens(uint _amount) public {
               require(_amount * tokenPrice <= balances[msg.sender], "Insufficient balance.");
               balances[msg.sender] -= _amount * tokenPrice;
               //transfer tokens to buyer
               //update token balances
         }

         function withdrawFunds() public {
               require(msg.sender == owner, "Only the owner can withdraw funds.");
               //transfer funds to owner
         }
}

Output: 
1) incorrect visibility/ownership
2) inconsistent state update