<\Contract\>
contract VotingSystem {
    struct Voter {
        bool voted;
        bool approved;
        uint256 vote;
    }
    mapping(address => Voter) public voters;
    uint256 public totalVotes;
    
    function vote(uint256 _proposalId) public {
        require(!voters[msg.sender].voted, "Already voted.");
        require(_proposalId < totalVotes, "Invalid proposal ID.");
        
        voters[msg.sender].voted = true;
        voters[msg.sender].vote = _proposalId;
    }
    
    function approveProposal(uint256 _proposalId) public {
        require(voters[msg.sender].voted, "Have not voted yet.");
        require(voters[msg.sender].approved == false, "Already approved a proposal.");
        
        if (_proposalId == voters[msg.sender].vote) {
            voters[msg.sender].approved = true;
        }
    }
}
<\Contract\>