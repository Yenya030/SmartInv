<\contract\>
contract Escrow {
    address public buyer;
    address public seller;
    address public arbiter;
    uint public escrowAmount;

    enum State { Created, Locked, Inactive }
    State public state;

    constructor(address _buyer, address _seller, address _arbiter, uint _amount) public {
        buyer = _buyer;
        seller = _seller;
        arbiter = _arbiter;
        escrowAmount = _amount;
        state = State.Created;
    }

    function deposit() public payable {
        require(msg.sender == buyer, "Only the buyer can deposit funds");
        require(state == State.Created, "Escrow must be in Created state");
        state = State.Locked;
    }

    function release() public {
        require(state == State.Locked, "Escrow must be in Locked state");
        require(msg.sender == arbiter, "Only the arbiter can release funds");
        seller.transfer(escrowAmount);
        state = State.Inactive;
    }

    function refund() public {
        require(state == State.Locked, "Escrow must be in Locked state");
        require(msg.sender == arbiter, "Only the arbiter can refund funds");
        buyer.transfer(escrowAmount);
        state = State.Inactive;
    }
}
<\contract\>