<\contract_to_be_analyzed\> 
contract TokenSale {
     address public admin;
     IERC20 public token;
     uint public tokenPrice;
     uint public tokenSold;

     constructor(IERC20 _token, uint _tokenPrice) {
         admin = msg.sender;
         token = _token;
         tokenPrice = _tokenPrice;
     }

     function buyTokens(uint _amount) public {
         require(token.balanceOf(address(this)) >= _amount, "Not enough tokens in contract");
         uint cost = _amount * tokenPrice;
         require(msg.value >= cost, "Insufficient payment");
         tokenSold += _amount;
         token.transfer(msg.sender, _amount);
     }

     function endSale() public {
         require(msg.sender == admin, "Only admin can end the sale");
         require(token.balanceOf(address(this)) == 0, "Tokens still remaining");
         selfdestruct(msg.sender);
     }
}
<\contract_to_be_analyzed\>