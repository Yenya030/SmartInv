<\contract\>
contract TokenSale {
         IERC20 public token;
         address public admin;
         uint public tokenPrice;
         uint public tokensSold;

         constructor(IERC20 _token, uint _tokenPrice) {
             token = _token;
             admin = msg.sender;
             tokenPrice = _tokenPrice;
         }

         function buyTokens(uint _amount) public {
             require(token.balanceOf(msg.sender) >= _amount, "Not enough balance");
             require(token.allowance(msg.sender, address(this)) >= _amount, "Not enough allowance");
             uint cost = _amount * tokenPrice;
             token.transferFrom(msg.sender, admin, _amount);
             tokensSold += _amount;
         }

         function setTokenPrice(uint _newPrice) public {
             require(msg.sender == admin, "Only admin can set token price");
             tokenPrice = _newPrice;
         }

         function withdrawTokens(uint _amount) public {
             require(msg.sender == admin, "Only admin can withdraw tokens");
             token.transfer(msg.sender, _amount);
         }
}
<\contract\>