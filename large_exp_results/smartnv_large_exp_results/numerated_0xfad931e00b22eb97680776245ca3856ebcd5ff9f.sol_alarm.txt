<\contract\>
contract Escrow {
     address public buyer;
     address public seller;
     address public arbiter;
     uint public amount;
     enum State { Created, Locked, Released, Disputed, Refunded }
     State public state;
     
     constructor(address _buyer, address _seller, address _arbiter, uint _amount) public {
         buyer = _buyer;
         seller = _seller;
         arbiter = _arbiter;
         amount = _amount;
         state = State.Created;
     }

     function confirmPurchase() public payable {
         require(msg.value == amount, "Incorrect amount sent");
         state = State.Locked;
     }

     function confirmReceived() public {
         require(msg.sender == buyer || msg.sender == seller || msg.sender == arbiter, "You are not allowed to perform this action");
         if(state == State.Locked) {
             seller.transfer(amount);
             state = State.Released;
         }
     }

     function refundBuyer() public {
         require(msg.sender == buyer || msg.sender == arbiter, "You are not allowed to perform this action");
         if(state == State.Locked) {
             buyer.transfer(amount);
             state = State.Refunded;
         }
     }
}
<\contract\>