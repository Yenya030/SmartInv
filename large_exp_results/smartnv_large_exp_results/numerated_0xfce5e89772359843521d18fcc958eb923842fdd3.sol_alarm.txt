<\contract_to_analyze\>
contract Marketplace {
         struct Product {
             uint id;
             string name;
             uint price;
         }
         mapping(uint => Product) public products;
         uint public productCount;

         function addProduct(string memory _name, uint _price) public {
             productCount++;
             products[productCount] = Product(productCount, _name, _price);
         }

         function buyProduct(uint _id) public payable {
             require(products[_id].id != 0, "Product does not exist");
             require(msg.value >= products[_id].price, "Insufficient funds");
             address payable seller = payable(msg.sender);
             seller.transfer(msg.value);
             delete products[_id];
         }
}
<\contract_to_analyze\>