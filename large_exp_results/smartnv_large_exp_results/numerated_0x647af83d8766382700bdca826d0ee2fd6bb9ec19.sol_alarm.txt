The contract below contains the following potential vulnerabilities: 

1) privilege escalation
2) inconsistent state update
3) atomicity violation
4) incorrect visibility/ownership 

contract TokenSale {
    address public owner;
    mapping(address => uint256) public balances;
    mapping(address => bool) public whitelist;
    IERC20 public token;

    constructor(address _token) {
        owner = msg.sender;
        token = IERC20(_token);
    }

    function addToWhitelist(address _address) public {
        require(msg.sender == owner, "Only owner can add to whitelist");
        whitelist[_address] = true;
    }

    function buyTokens(uint256 _amount) public {
        require(whitelist[msg.sender], "Address is not whitelisted");
        
        token.transferFrom(owner, msg.sender, _amount);
        balances[msg.sender] += _amount;
    }

    function withdraw() public {
        require(msg.sender == owner, "Only owner can withdraw");
        uint256 balance = token.balanceOf(address(this));
        token.transfer(owner, balance);
    }
}