The contract to analyze for potential vulnerabilities is as follows:

contract TokenSale {
    address public owner;
    IERC20 public token;
    uint public tokenPrice;
    
    constructor(address _tokenAddress, uint _price) {
        owner = msg.sender;
        token = IERC20(_tokenAddress);
        tokenPrice = _price;
    }

    function buyTokens(uint _amount) {
        uint totalCost = _amount * tokenPrice;
        token.transferFrom(msg.sender, address(this), totalCost);
        token.transfer(msg.sender, _amount);
    }

    function withdraw() {
        require(msg.sender == owner, "only owner can withdraw");
        token.transfer(owner, token.balanceOf(address(this)));
    }
}

Output: 
- potential vulnerability: incorrect visibility/ownership