<\contract_to_be_analyzed\> 
contract Crowdsale {
    address public owner;
    uint public tokenPrice;
    mapping(address => uint) public balances;

    constructor(uint _tokenPrice) public {
        owner = msg.sender;
        tokenPrice = _tokenPrice;
    }

    function buyTokens(uint _amount) public {
        require(msg.value == _amount * tokenPrice, "Incorrect payment amount");
        balances[msg.sender] += _amount;
    }

    function withdraw() public {
        uint amount = balances[msg.sender] * tokenPrice;
        require(address(this).balance >= amount, "Insufficient balance in the contract");
        balances[msg.sender] = 0;
        msg.sender.transfer(amount);
    }
}
<\contract_to_be_analyzed\>