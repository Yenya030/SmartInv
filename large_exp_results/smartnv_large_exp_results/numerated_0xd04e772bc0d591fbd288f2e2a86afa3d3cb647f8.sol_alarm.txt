<\contract\>
contract Escrow {
    address public buyer;
    address public seller;
    address public arbiter;
    uint public escrowAmount;
    bool public releasedToSeller;
    bool public releasedToBuyer;
    
    constructor(address _buyer, address _seller, address _arbiter, uint _amount) {
        buyer = _buyer;
        seller = _seller;
        arbiter = _arbiter;
        escrowAmount = _amount;
        releasedToSeller = false;
        releasedToBuyer = false;
    }
    
    function releaseToSeller() public {
        require(msg.sender == arbiter, "Only arbiter can release funds");
        require(releasedToSeller == false, "Funds already released to seller");
        releasedToSeller = true;
        seller.transfer(escrowAmount);
    }
    
    function releaseToBuyer() public {
        require(msg.sender == arbiter, "Only arbiter can release funds");
        require(releasedToBuyer == false, "Funds already released to buyer");
        releasedToBuyer = true;
        buyer.transfer(escrowAmount);
    }
    
    function releaseAmountToSeller(uint amount) public {
        require(msg.sender == arbiter, "Only arbiter can release funds");
        require(amount <= escrowAmount, "Invalid amount");
        seller.transfer(amount);
    }
}
<\contract\>