The contract below contains the following potential vulnerabilities:

1) Incorrect visibility/ownership
2) Reentrancy

contract PaymentGateway {
    address public owner;
    mapping(address => uint256) public balances;

    constructor() {
        owner = msg.sender;
    }

    function deposit() public payable {
        balances[msg.sender] += msg.value;
    }

    function withdraw(uint256 amount) public {
        require(balances[msg.sender] >= amount, "Insufficient balance");
        balances[msg.sender] -= amount;
        payable(msg.sender).transfer(amount);
    }

    function changeOwner(address newOwner) public {
        require(msg.sender == owner, "Only the owner can change ownership");
        owner = newOwner;
    }
}