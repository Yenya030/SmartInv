<\contract\>
contract Auction {
    mapping(address => uint) public bids;
    address public highestBidder;
    uint public highestBid;
    bool public ended;

    function bid() public payable {
        require(!ended, "Auction has ended");
        require(msg.value > highestBid, "Bid not high enough");

        if (highestBid != 0) {
            bids[highestBidder] += highestBid;
        }

        highestBidder = msg.sender;
        highestBid = msg.value;
    }

    function endAuction() public {
        require(!ended, "Auction already ended");
        ended = true;
    }

    function withdraw() public {
        require(ended, "Auction has not ended");
        uint amount = bids[msg.sender];
        bids[msg.sender] = 0;
        msg.sender.transfer(amount);
    }
}
<\contract\>