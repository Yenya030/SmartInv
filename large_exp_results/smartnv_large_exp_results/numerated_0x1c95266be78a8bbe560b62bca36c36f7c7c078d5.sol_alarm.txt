contract PaymentProcessor {
    address public owner;
    mapping(address => uint256) public payments;
    uint256 public totalPayments;

    constructor() {
        owner = msg.sender;
        totalPayments = 0;
    }

    function makePayment(address recipient, uint256 amount) public {
        require(msg.sender == owner, "Only the owner can make payments");
        require(amount > 0, "Payment amount must be greater than 0");
        
        payments[recipient] += amount;
        totalPayments += amount;
    }

    function withdrawPayment() public {
        require(payments[msg.sender] > 0, "No payments to withdraw");

        uint256 paymentAmount = payments[msg.sender];
        payments[msg.sender] = 0;
        totalPayments -= paymentAmount;

        payable(msg.sender).transfer(paymentAmount);
    }
}