<\contract\>
contract TokenSale {
     address public owner;
     IERC20 public token;
     uint public tokenPrice;
     uint public totalTokens;
     uint public tokensSold;

     constructor(IERC20 _token, uint _tokenPrice, uint _totalTokens) {
         owner = msg.sender;
         token = _token;
         tokenPrice = _tokenPrice;
         totalTokens = _totalTokens;
         tokensSold = 0;
     }

     function buyTokens(uint _numTokens) public payable {
         require(msg.value == _numTokens * tokenPrice, "Incorrect amount sent");
         require(_numTokens <= totalTokens - tokensSold, "Not enough tokens available");
         token.transfer(msg.sender, _numTokens);
         tokensSold += _numTokens;
     }

     function endSale() public {
         require(msg.sender == owner, "Only the owner can end the sale");
         token.transfer(owner, token.balanceOf(address(this)));
         selfdestruct(payable(owner));
     }
}
<\contract\>