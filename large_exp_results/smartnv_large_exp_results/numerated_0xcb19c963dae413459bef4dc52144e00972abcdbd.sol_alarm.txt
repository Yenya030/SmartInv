<\your_contract\>
contract VotingSystem {
     struct Voter {
          uint256 weight; 
          bool voted;
          address delegate;
          uint256 vote;
          }
     mapping(address => Voter) public voters;
     address public admin;

    function delegate(address _delegatee) public {
          require(voters[msg.sender].weight > 0, "Sender has no weight to delegate");
          voters[msg.sender].delegate = _delegatee;
        }

    function vote(uint256 _proposalId) public {
          require(voters[msg.sender].weight > 0, "Sender has no weight to vote");
          require(!voters[msg.sender].voted, "Sender has already voted");
          voters[msg.sender].voted = true;
          voters[msg.sender].vote = _proposalId;
        }
    
    function endVoting() public {
          require(msg.sender == admin, "Only admin can end the voting");
          // Logic to count votes and determine the winning proposal
        }
}
<\your_contract\>