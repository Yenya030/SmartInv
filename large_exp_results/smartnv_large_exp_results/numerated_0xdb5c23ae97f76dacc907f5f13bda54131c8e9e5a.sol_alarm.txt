<\contract\>
contract TokenSale {
    address public owner;
    IERC20 public token;
    uint public tokenPrice;
    uint public totalTokensSold;

    constructor(address _token, uint _tokenPrice) {
        owner = msg.sender;
        token = IERC20(_token);
        tokenPrice = _tokenPrice;
    }

    function buyTokens(uint _numTokens) public {
        uint totalPrice = tokenPrice * _numTokens;
        require(token.balanceOf(msg.sender) >= totalPrice, "Insufficient balance");

        token.transferFrom(msg.sender, owner, totalPrice);
        totalTokensSold += _numTokens;
    }

    function withdrawFunds() public {
        require(msg.sender == owner, "Only owner can withdraw funds");
        uint balance = address(this).balance;
        payable(owner).transfer(balance);
    }
}
<\contract\>