<\contract\>
contract VotingSystem {
    struct Voter {
        uint256 weight;
        bool voted;
        address delegate;
        uint256 vote;
    }

    mapping(address => Voter) public voters;
    bool public votingOpen;
    uint256 public totalVotes;
    address public winner;

    function startVoting() public {
        require(msg.sender == owner, "Only owner can start voting");
        votingOpen = true;
    }

    function vote(uint256 proposal) public {
        require(votingOpen, "Voting is not currently open");
        Voter storage sender = voters[msg.sender];
        require(!sender.voted, "Already voted");

        sender.voted = true;
        sender.vote = proposal;
        totalVotes += sender.weight;
    }

    function endVoting() public {
        require(msg.sender == owner, "Only owner can end voting");
        require(votingOpen, "Voting is not currently open");
        
        // Determine winner based on proposals voted
        // Transfer ownership or execute based on winner
    }
}
<\contract\>