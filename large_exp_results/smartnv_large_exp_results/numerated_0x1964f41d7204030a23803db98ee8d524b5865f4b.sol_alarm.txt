contract PaymentGateway {
     address public owner;
     mapping(address => uint) public balances;

     constructor() {
         owner = msg.sender;
     }

     function deposit() public payable {
         require(msg.value > 0, "Deposit value must be greater than 0");
         balances[msg.sender] += msg.value;
     }

     function withdraw(uint amount) public {
         require(amount > 0, "Withdrawal amount must be greater than 0");
         require(balances[msg.sender] >= amount, "Insufficient balance");
         (bool success, ) = msg.sender.call{value: amount}("");
         require(success, "Withdrawal transfer failed");
         balances[msg.sender] -= amount;
     }

     function transfer(address to, uint amount) public {
         require(amount > 0, "Transfer amount must be greater than 0");
         require(balances[msg.sender] >= amount, "Insufficient balance");
         balances[msg.sender] -= amount;
         balances[to] += amount;
     }
}