The contract to analyze:

contract PaymentProcessor {
     address public owner;
     mapping(address => uint256) public balances;
     uint256 public totalBalance;
     
     constructor() {
         owner = msg.sender;
         totalBalance = 0;
     }
     
     function deposit() public payable {
         require(msg.value > 0, "Deposit amount must be greater than 0");
         balances[msg.sender] += msg.value;
         totalBalance += msg.value;
     }
     
     function withdraw(uint256 amount) public {
         require(amount > 0, "Withdrawal amount must be greater than 0");
         require(balances[msg.sender] >= amount, "Insufficient balance");
         balances[msg.sender] -= amount;
         totalBalance -= amount;
         msg.sender.transfer(amount);
     }
}
 
Output: 
- healthy