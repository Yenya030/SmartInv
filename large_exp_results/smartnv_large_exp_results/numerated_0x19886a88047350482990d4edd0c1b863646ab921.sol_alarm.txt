<\analyzed_contract\>
contract PaymentProcessor {
    address public owner;
    mapping(address => uint) public balances;
    uint public totalBalance;

    constructor() {
        owner = msg.sender;
        totalBalance = 0;
    }

    function deposit() public payable {
        require(msg.value > 0, "Deposit amount must be greater than 0");
        balances[msg.sender] += msg.value;
        totalBalance += msg.value;
    }

    function withdraw(uint amount) public {
        require(balances[msg.sender] >= amount, "Insufficient balance");
        balances[msg.sender] -= amount;
        totalBalance -= amount;
        (bool success, ) = msg.sender.call{value: amount}("");
        require(success, "Transfer failed");
    }
}
<\analyzed_contract\>