<\contract_to_analyze\>
contract PaymentProcessor {
     address public owner;
     uint public totalPayments;
     mapping(address => uint) public payments;

    constructor() {
         owner = msg.sender;
         totalPayments = 0;
    }
    
    function makePayment() public payable {
         require(msg.value > 0, "Payment amount must be greater than 0");
         totalPayments += msg.value;
         payments[msg.sender] += msg.value;
    }

    function withdrawFunds() public {
         require(msg.sender == owner, "Only the owner can withdraw funds");
         uint amount = address(this).balance;
         owner.transfer(amount);
    }

    function getBalance() public view returns (uint) {
         return address(this).balance;
    }
}
<\contract_to_analyze\>