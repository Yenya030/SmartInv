<\contract\> 
contract Escrow {
     address public owner;
     mapping(address => uint) public deposits;

     function deposit() public payable {
         deposits[msg.sender] += msg.value;
     }

     function withdraw(uint amount) public {
         require(deposits[msg.sender] >= amount, "Insufficient balance");
         deposits[msg.sender] -= amount;
         payable(msg.sender).transfer(amount);
     }

     function changeOwner(address newOwner) public {
         require(msg.sender == owner, "Only owner can change owner");
         owner = newOwner;
     }
}
<\contract\> 

Potential vulnerabilities:
- privilege escalation
- inconsistent state update
- incorrect visibility/ownership