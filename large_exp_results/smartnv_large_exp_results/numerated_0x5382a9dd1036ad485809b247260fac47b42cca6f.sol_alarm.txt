<\contract_to_analyze\>
contract TokenSale {
         IERC20 public token;
         address public admin;
         uint public tokenPrice;
         mapping(address => uint) public balances;
 
         constructor(address _token, uint _tokenPrice) {
             token = IERC20(_token);
             admin = msg.sender;
             tokenPrice = _tokenPrice;
         }
 
         function buyTokens(uint _amount) public {
             require(token.balanceOf(address(this)) >= _amount * tokenPrice, "Not enough tokens available for sale");
             token.transfer(msg.sender, _amount);
             balances[msg.sender] += _amount;
         }
 
         function withdrawTokens() public {
             require(balances[msg.sender] > 0, "You have no tokens to withdraw");
             uint amount = balances[msg.sender] * tokenPrice;
             balances[msg.sender] = 0;
             token.transferFrom(msg.sender, address(this), amount);
         }
}
<\contract_to_analyze\> 