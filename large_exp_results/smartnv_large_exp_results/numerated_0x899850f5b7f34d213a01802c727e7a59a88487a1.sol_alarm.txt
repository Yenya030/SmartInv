<\analysis_contract\> 
contract PaymentProcessor {
     address public owner;
     mapping(address => uint) public balances;
     
     constructor() {
         owner = msg.sender;
     }

     function deposit() public payable {
         balances[msg.sender] += msg.value;
     }

     function withdraw(uint amount) public {
         require(balances[msg.sender] >= amount, "Insufficient balance");
         payable(msg.sender).transfer(amount);
         balances[msg.sender] -= amount;
     }

     function transfer(address to, uint amount) public {
         require(balances[msg.sender] >= amount, "Insufficient balance");
         balances[msg.sender] -= amount;
         balances[to] += amount;
     }
 }
<\analysis_contract\> 