<\contract\>
contract Escrow {
     address public buyer;
     address public seller;
     uint public price;
     bool public buyerPaid;
     bool public sellerPaid;
     
     constructor(address _buyer, address _seller, uint _price) {
         buyer = _buyer;
         seller = _seller;
         price = _price;
         buyerPaid = false;
         sellerPaid = false;
     }
     
     function deposit() public payable {
         require(msg.sender == buyer, "Only buyer can deposit");
         require(msg.value == price, "Incorrect deposit amount");
         buyerPaid = true;
     }
     
     function confirmDelivery() public {
         require(msg.sender == buyer, "Only buyer can confirm delivery");
         require(buyerPaid == true, "Buyer has not paid yet");
         seller.transfer(price);
         sellerPaid = true;
     }
     
     function withdraw() public {
         require(msg.sender == buyer || msg.sender == seller, "Only buyer or seller can withdraw");
         require(buyerPaid == true && sellerPaid == true, "Transaction not complete");
         if(msg.sender == buyer){
             payable(buyer).transfer(price);
         }
         else{
             payable(seller).transfer(price);
         }
     }
}
<\contract\>