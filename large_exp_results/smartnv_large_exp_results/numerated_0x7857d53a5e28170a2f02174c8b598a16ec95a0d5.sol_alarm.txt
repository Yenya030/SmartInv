<\contract\>
contract PaymentProcessor {
         address public admin;
         mapping(address => uint256) public balances; 

         constructor() {
             admin = msg.sender;
         }
         
         function deposit() external payable {
             balances[msg.sender] += msg.value;
         }
         
         function withdraw(uint256 amount) external {
             require(balances[msg.sender] >= amount, "Insufficient balance");
             balances[msg.sender] -= amount;
             payable(msg.sender).transfer(amount);
         }
}
<\contract\>

The potential vulnerabilities in the above contract are:
1) insufficient gas