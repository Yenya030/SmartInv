<\analyzed_contract\>
contract TokenSale {
    address public token;
    address public admin;

    mapping(address => uint) public balances;

    constructor(address _token, address _admin) {
        token = _token;
        admin = _admin;
    }

    function buyTokens(uint amount) public {
        require(amount > 0, "Amount must be greater than 0");
        balances[msg.sender] += amount;
        require(IERC20(token).transferFrom(admin, msg.sender, amount), "Transfer failed");
    }

    function withdrawTokens(uint amount) public {
        require(balances[msg.sender] >= amount, "Insufficient balance");
        balances[msg.sender] -= amount;
        require(IERC20(token).transfer(msg.sender, amount), "Transfer failed");
    }
}
<\analyzed_contract\>