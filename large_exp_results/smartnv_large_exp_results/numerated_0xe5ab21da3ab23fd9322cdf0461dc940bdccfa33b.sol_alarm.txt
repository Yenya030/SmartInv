Contract: 

contract TokenSale {
    address public admin;
    IERC20 public token;
    bool public saleOpen;
    uint public tokenPrice;

    constructor(IERC20 _token, uint _tokenPrice) {
        admin = msg.sender;
        token = _token;
        tokenPrice = _tokenPrice;
        saleOpen = true;
    }

    function buyTokens(uint _amount) external payable {
        require(saleOpen, "Sale is not open");
        require(msg.value == _amount * tokenPrice, "Incorrect payment amount");

        token.transfer(msg.sender, _amount);
    }

    function closeSale() external {
        require(msg.sender == admin, "Only admin can close the sale");
        saleOpen = false;
    }
}

Output:
1) incorrect visibility/ownership
2) inconsistent state update