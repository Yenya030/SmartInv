<\contract\>
contract TokenSale {
   address public owner;
   uint public tokenPrice;
   uint public tokensSold;
   IERC20 public token;

   constructor(IERC20 _token, uint _tokenPrice) {
       owner = msg.sender;
       token = _token;
       tokenPrice = _tokenPrice;
   }

   function buyTokens(uint _amount) public {
       uint cost = tokenPrice * _amount;
       require(token.balanceOf(msg.sender) >= cost, "Insufficient balance");
       token.transferFrom(owner, msg.sender, _amount);
       tokensSold += _amount;
   }

   function endSale() public {
       require(msg.sender == owner, "Only owner can end the sale");
       token.transfer(owner, token.balanceOf(address(this)));
       selfdestruct(payable(owner));
   }
}
<\contract\>