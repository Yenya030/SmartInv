<\contract\> 
contract FundContract {
         address public manager;
         mapping(address => uint) public balances;

         constructor() {
             manager = msg.sender;
         }

         function deposit() public payable {
             balances[msg.sender] += msg.value;
         }

         function withdraw(uint amount) public {
             require(balances[msg.sender] >= amount, "Insufficient balance");
             balances[msg.sender] -= amount;
             payable(msg.sender).transfer(amount);
         }

         function transfer(address recipient, uint amount) public {
             require(balances[msg.sender] >= amount, "Insufficient balance");
             balances[msg.sender] -= amount;
             balances[recipient] += amount;
         }
     }
<\contract\>