<\Contract_to_analyze\> 
contract MultiSigWallet {
    address[] public owners;
    uint public transactionCount;
    mapping(uint => Transaction) public transactions;

    struct Transaction {
        address from;
        address to;
        uint value;
        uint timestamp;
        bool executed;
    }

    function submitTransaction(address _to, uint _value) public {
        require(msg.sender == owners[0], "Not authorized");
        transactions[transactionCount] = Transaction(msg.sender, _to, _value, block.timestamp, false);
        transactionCount++;
    }

    function executeTransaction(uint _transactionId) public {
        require(msg.sender == owners[1], "Not authorized");
        require(transactions[_transactionId].executed == false, "Transaction already executed");
        transactions[_transactionId].to.transfer(transactions[_transactionId].value);
        transactions[_transactionId].executed = true;
    }
}
<\Contract_to_analyze\>