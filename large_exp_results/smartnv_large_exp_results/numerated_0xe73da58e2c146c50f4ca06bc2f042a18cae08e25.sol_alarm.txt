The contract provided for analysis:

<\example_3\>
contract PaymentGateway {
         address public owner;
         mapping(address => uint) public balances;
         
         constructor() {
              owner = msg.sender;
         }

         function deposit() external payable {
              balances[msg.sender] += msg.value;
         }

         function withdraw(uint amount) external {
              require(balances[msg.sender] >= amount, "Insufficient balance");
              balances[msg.sender] -= amount;
              (bool success,) = msg.sender.call{value: amount}("");
              require(success, "Transfer failed");
         }
}
<\example_3\> 

The potential vulnerabilities in the contract are:
1) Reentrancy
2) Insufficient gas