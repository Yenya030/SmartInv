<\contract_to_analyze\>
contract TokenSale {
    address public owner;
    uint public tokenPrice;
    uint public totalTokens;
    mapping(address => uint) public balances;

    constructor(uint _tokenPrice, uint _totalTokens) {
        owner = msg.sender;
        tokenPrice = _tokenPrice;
        totalTokens = _totalTokens;
    }

    function buyTokens(uint _amount) public payable {
        require(msg.value == _amount * tokenPrice, "Incorrect payment amount");
        balances[msg.sender] += _amount;
    }

    function withdraw() public {
        require(msg.sender == owner, "Unauthorized withdrawal");
        payable(msg.sender).transfer(address(this).balance);
    }
}
<\contract_to_analyze\>