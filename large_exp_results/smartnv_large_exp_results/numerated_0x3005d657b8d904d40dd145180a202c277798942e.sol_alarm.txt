<\contract\> 
contract PaymentProcessor {
         address public admin;
         mapping(address => uint256) public balances;
         
         constructor(address _admin) {
             admin = _admin;
         }

         function deposit() public payable {
             balances[msg.sender] += msg.value;
         }

         function withdraw(uint256 amount) public {
             require(balances[msg.sender] >= amount, "Insufficient balance");
             balances[msg.sender] -= amount;
             msg.sender.transfer(amount);
         }

         function transfer(address recipient, uint256 amount) public {
             require(balances[msg.sender] >= amount, "Insufficient balance");
             balances[msg.sender] -= amount;
             balances[recipient] += amount;
         }
    }
<\contract\>