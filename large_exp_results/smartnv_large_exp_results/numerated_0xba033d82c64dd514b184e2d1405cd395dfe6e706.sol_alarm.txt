<\analyzed_contract\>
contract EscrowContract {
     address public payer;
     address public payee;
     address public escrow;
     uint public amount;
     bool public isOpen;

     constructor(address _payer, address _payee, uint _amount) {
         payer = _payer;
         payee = _payee;
         amount = _amount;
         isOpen = true;
         escrow = address(this);
     }

     function deposit() public payable {
         require(msg.sender == payer, "Only payer can deposit funds");
         require(isOpen, "Escrow is closed");
         require(msg.value == amount, "Incorrect amount deposited");
     }

     function release() public {
         require(msg.sender == payee, "Only payee can release funds");
         require(isOpen, "Escrow is closed");
         payee.transfer(amount);
         isOpen = false;
     }

     function cancel() public {
         require(msg.sender == payer, "Only payer can cancel");
         require(isOpen, "Escrow is closed");
         payer.transfer(amount);
         isOpen = false;
     }
}
<\analyzed_contract\>