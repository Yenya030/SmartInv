contract Crowdsale {
     address public owner;
     IERC20 public token;
     uint public tokenPrice;
     uint public totalTokens;
     mapping(address => uint) public balances;

     constructor(IERC20 _token, uint _tokenPrice, uint _totalTokens) {
           owner = msg.sender;
           token = _token;
           tokenPrice = _tokenPrice;
           totalTokens = _totalTokens;
      }

     function buyTokens(uint _numTokens) external payable {
           require(msg.value == _numTokens * tokenPrice, "Incorrect amount sent");
           require(totalTokens >= _numTokens, "Not enough tokens left");
           totalTokens -= _numTokens;
           balances[msg.sender] += _numTokens;
      }

     function withdraw() public {
           require(msg.sender == owner, "Only owner can withdraw funds");
           msg.sender.transfer(address(this).balance);
      }
} 

Output:
healthy