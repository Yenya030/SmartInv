<\contract\> 
contract TokenSwap {
     IERC20 public tokenA;
     IERC20 public tokenB;
     address public owner;

     constructor(address _tokenA, address _tokenB) {
         tokenA = IERC20(_tokenA);
         tokenB = IERC20(_tokenB);
         owner = msg.sender;
     }

     function swap(uint amount) public {
         require(tokenA.balanceOf(msg.sender) >= amount, "Insufficient balance for tokenA");
         tokenA.transferFrom(msg.sender, address(this), amount);
         tokenB.transfer(msg.sender, amount);
     }

     function withdraw(address token, uint amount) public {
         require(msg.sender == owner, "Only owner can withdraw");
         IERC20(token).transfer(owner, amount);
     }
}
<\contract\>