<\contract_snippet\>
contract Marketplace {
     struct Product {
          uint productId;
          string name;
          uint price;
          address seller;
          bool isSold;
     }
     
     mapping(uint => Product) public products;
     uint public productCount;
     address public admin;

     constructor() {
          admin = msg.sender;
          productCount = 0;
     }

     function addProduct(string memory _name, uint _price) public {
          require(msg.sender != address(0), "Invalid address");
          products[productCount] = Product(productCount, _name, _price, msg.sender, false);
          productCount++;
     }

     function buyProduct(uint _productId) public payable {
          Product storage product = products[_productId];
          require(msg.value == product.price, "Incorrect payment amount");
          require(!product.isSold, "Product is already sold");
          product.seller.transfer(msg.value);
          product.isSold = true;
     }

     function withdrawFunds() public {
          require(msg.sender == admin, "Only admin can withdraw funds");
          payable(msg.sender).transfer(address(this).balance);
     }
}
<\contract_snippet\> 