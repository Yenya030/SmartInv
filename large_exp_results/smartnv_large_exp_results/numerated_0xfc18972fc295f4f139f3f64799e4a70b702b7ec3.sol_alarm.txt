Contract:

contract Market {
     address public owner;
     uint public price;
     mapping(address => uint) public balances;

     constructor() {
         owner = msg.sender;
         price = 100;
     }

     function buy(uint amount) public {
         require(balances[msg.sender] >= amount * price, "Not enough balance");
         balances[msg.sender] -= amount * price;
         balances[owner] += amount * price;
     }

     function sell(uint amount) public {
         require(balances[msg.sender] >= amount, "Not enough balance");
         balances[msg.sender] -= amount;
         balances[owner] += amount * price;
     }
}

Output:
8) Reentrancy