contract Crowdsale {
    address public owner;
    mapping(address => uint) public balances;

    constructor() {
        owner = msg.sender;
    }

    function buyTokens(uint amount) public payable {
        require(msg.value >= amount * 1 ether, "Insufficient Ether sent");
        balances[msg.sender] += amount;
    }

    function withdrawFunds() public {
        require(msg.sender == owner, "Only owner can withdraw funds");
        msg.sender.transfer(address(this).balance);
    }
} 

The potential vulnerabilities in the Crowdsale contract are:
1) Reentrancy vulnerability in the withdrawFunds function
2) Inconsistent state update in the buyTokens function with the balances mapping