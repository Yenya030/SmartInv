<\contract_to_analyze\>
contract Escrow {
    address public buyer;
    address public seller;
    address public arbiter;
    uint public escrowAmount;
    bool public buyerApproved;
    bool public sellerApproved;

    constructor(address _buyer, address _seller, address _arbiter, uint _escrowAmount) {
        buyer = _buyer;
        seller = _seller;
        arbiter = _arbiter;
        escrowAmount = _escrowAmount;
        buyerApproved = false;
        sellerApproved = false;
    }

    function approve() public {
        if(msg.sender == buyer) {
            buyerApproved = true;
        } else if(msg.sender == seller) {
            sellerApproved = true;
        }
        if(buyerApproved && sellerApproved) {
            payEscrow();
        }
    }

    function payEscrow() private {
        address _this = address(this);
        payable(buyer).transfer(escrowAmount);
        payable(seller).transfer(escrowAmount);
        selfdestruct(payable(arbiter));
    }
}
<\contract_to_analyze\>