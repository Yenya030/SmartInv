<\contract\> 
contract Escrow {
     address public buyer;
     address public seller;
     address public arbiter;
     uint public price;
     bool public isPaid;
     bool public isReleased;
     
     constructor(address _seller, address _arbiter, uint _price) {
         buyer = msg.sender;
         seller = _seller;
         arbiter = _arbiter;
         price = _price;
     }
     
     function pay() public payable {
         require(msg.sender == buyer, "Only buyer can pay");
         require(msg.value == price, "Incorrect payment amount");
         isPaid = true;
     }
     
     function releasePayment() public {
         require(isPaid, "Payment is not made yet");
         require(msg.sender == arbiter || msg.sender == seller, "You are not authorized to release payment");
         seller.transfer(price);
         isReleased = true;
     }
     
     function refundPayment() public {
         require(isPaid, "Payment is not made yet");
         require(msg.sender == arbiter || msg.sender == buyer, "You are not authorized to refund payment");
         payable(buyer).transfer(price);
         isReleased = true;
     }
}
<\contract\>