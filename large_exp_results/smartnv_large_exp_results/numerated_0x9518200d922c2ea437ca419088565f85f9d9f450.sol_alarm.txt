contract MultiSigWallet {
    address[] public owners;
    mapping(address => uint) public balance;

    function deposit() public payable {
        balance[msg.sender] += msg.value;
    }

    function withdraw(uint amount) public {
        require(balance[msg.sender] >= amount, "Insufficient balance");
        balance[msg.sender] -= amount;
        payable(msg.sender).transfer(amount);
    }

    function addOwner(address newOwner) public {
        owners.push(newOwner);
    }

    function removeOwner(address owner) public {
        for (uint i = 0; i < owners.length; i++) {
            if (owners[i] == owner) {
                delete owners[i];
            }
        }
    }
} 

<\MultiSigWallet\>