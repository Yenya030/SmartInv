The contract provided for analysis:

contract Marketplace {
    address public owner;
    mapping(uint => Item) public items;
    uint public itemCount;

    struct Item {
        uint id;
        string name;
        uint price;
        address seller;
    }

    constructor() {
        owner = msg.sender;
        itemCount = 0;
    }

    function addItem(string memory _name, uint _price) public {
        itemCount++;
        items[itemCount] = Item(itemCount, _name, _price, msg.sender);
    }

    function purchaseItem(uint _itemId) public payable {
        require(items[_itemId].id != 0, "Item does not exist");
        require(msg.value == items[_itemId].price, "Incorrect payment amount");

        address payable seller = payable(items[_itemId].seller);
        seller.transfer(msg.value);
        delete items[_itemId];
    }
}

Output: 
1) Potential vulnerabilities:
- incorrect visibility/ownership