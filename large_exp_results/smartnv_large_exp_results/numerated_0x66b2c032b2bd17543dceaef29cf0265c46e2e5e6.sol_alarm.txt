<\contract_to_analyze\>
contract TokenSale {
      address public admin;
      IERC20 public token;
      uint public tokenPrice;
      uint public tokensSold;

      constructor(IERC20 _token, uint _tokenPrice) {
            admin = msg.sender;
            token = _token;
            tokenPrice = _tokenPrice;
            tokensSold = 0;
        }

      function buyTokens(uint _amount) public {
            uint totalPrice = _amount * tokenPrice;
            require(token.balanceOf(msg.sender) >= _amount, "Insufficient balance");
            require(token.allowance(msg.sender, address(this)) >= totalPrice, "Allowance not set");
            token.transferFrom(msg.sender, address(this), totalPrice);
            token.transfer(msg.sender, _amount);
            tokensSold += _amount;
        }

      function endSale() public {
            require(msg.sender == admin, "Only admin can end sale");
            token.transfer(admin, token.balanceOf(address(this)));
            selfdestruct(admin);
        }
}
<\contract_to_analyze\>