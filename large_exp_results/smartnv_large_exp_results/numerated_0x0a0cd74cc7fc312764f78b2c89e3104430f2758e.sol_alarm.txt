<\analyzed_contract\>
contract Marketplace {
    address public owner;
    uint public totalItems;
    mapping(uint => Item) public items;

    struct Item {
        uint id;
        string name;
        uint price;
        address owner;
        bool sold;
    }

    constructor() {
        owner = msg.sender;
        totalItems = 0;
    }

    function addItem(string memory _name, uint _price) public {
        totalItems++;
        items[totalItems] = Item(totalItems, _name, _price, msg.sender, false);
    }

    function buyItem(uint _id) public payable {
        require(items[_id].id != 0, "Item does not exist");
        require(!items[_id].sold, "Item already sold");
        require(msg.value >= items[_id].price, "Insufficient funds sent");

        items[_id].owner.transfer(items[_id].price);
        items[_id].owner = msg.sender;
        items[_id].sold = true;
    }
}
<\analyzed_contract\>