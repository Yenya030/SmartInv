Invariants associated with the number line after line 12+ in the smart contract:

12+ assert(Old(USDC.balanceOf(address(pair))/WETH.balanceOf(address(pair))) == USDC.balanceOf(address(pair))/WETH.balanceOf(address(pair));

Invariants associated with the number line after line 17+ in the smart contract:

17+ assert(a == b * c + a % b);

Invariants associated with the number line after line 24+ in the smart contract:

24+ assert();

Invariants associated with the number line after line 29+ in the smart contract:

29+ assert();

Invariants associated with the number line after line 53+ in the smart contract:

53+ assert();

Invariants associated with the number line after line 62+ in the smart contract:

62+ assert();

Invariants associated with the number line after line 66+ in the smart contract:

66+ assert();

Invariants associated with the number line after line 74+ in the smart contract:

74+ assert();

Invariants associated with the number line after line 93+ in the smart contract:

93+ assert();

Invariants associated with the number line after line 94+ in the smart contract:

94+ assert();

Invariants associated with the number line after line 110+ in the smart contract:

110+ assert();

Invariants associated with the number line after line 113+ in the smart contract:

113+ assert();

Invariants associated with the number line after line 111+ in the smart contract:

111+ assert();

Invariants associated with the number line after line 126+ in the smart contract:

126+ assert();

Invariants associated with the number line after line 127+ in the smart contract:

127+ assert();

Invariants associated with the number line after line 138+ in the smart contract:

138+ assert();

Invariants associated with the number line after line 109+ in the smart contract:

109+ assert();

Invariants associated with the number line after line 239+ in the smart contract:

239+ assert();

Invariants associated with the number line after line 254+ in the smart contract:

254+ assert();